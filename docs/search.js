window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "labanalysis", "modulename": "labanalysis", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "labanalysis.constants", "modulename": "labanalysis.constants", "kind": "module", "doc": "<p>module containing useful constant values</p>\n"}, {"fullname": "labanalysis.constants.G", "modulename": "labanalysis.constants", "qualname": "G", "kind": "variable", "doc": "<p></p>\n", "default_value": "9.80665"}, {"fullname": "labanalysis.constants.DEFAULT_MINIMUM_CONTACT_GRF_N", "modulename": "labanalysis.constants", "qualname": "DEFAULT_MINIMUM_CONTACT_GRF_N", "kind": "variable", "doc": "<p></p>\n", "default_value": "100"}, {"fullname": "labanalysis.constants.DEFAULT_MINIMUM_HEIGHT_PERCENTAGE", "modulename": "labanalysis.constants", "qualname": "DEFAULT_MINIMUM_HEIGHT_PERCENTAGE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.05"}, {"fullname": "labanalysis.constants.MINIMUM_CONTACT_FORCE_N", "modulename": "labanalysis.constants", "qualname": "MINIMUM_CONTACT_FORCE_N", "kind": "variable", "doc": "<p></p>\n", "default_value": "30"}, {"fullname": "labanalysis.constants.MINIMUM_FLIGHT_TIME_S", "modulename": "labanalysis.constants", "qualname": "MINIMUM_FLIGHT_TIME_S", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.1"}, {"fullname": "labanalysis.equations", "modulename": "labanalysis.equations", "kind": "module", "doc": "<p>equations module</p>\n"}, {"fullname": "labanalysis.equations.cardio", "modulename": "labanalysis.equations.cardio", "kind": "module", "doc": "<p>metabolic module containing VO2 predicting equations</p>\n"}, {"fullname": "labanalysis.equations.cardio.CardioProduct", "modulename": "labanalysis.equations.cardio", "qualname": "CardioProduct", "kind": "class", "doc": "<p>base class for cardio products.</p>\n"}, {"fullname": "labanalysis.equations.cardio.CardioProduct.calculate_torque", "modulename": "labanalysis.equations.cardio", "qualname": "CardioProduct.calculate_torque", "kind": "function", "doc": "<p>calculate the torque output from power and cadence</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>power</strong> (float | int):\nthe power output in W</li>\n<li><strong>cadence</strong> (float | int):\nthe cadence in rpm</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>torque</strong> (float):\nreturn the calculated torque in Nm.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">power</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">cadence</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.CardioProduct.calculate_cadence", "modulename": "labanalysis.equations.cardio", "qualname": "CardioProduct.calculate_cadence", "kind": "function", "doc": "<p>calculate the cadence output from power and cadence</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>power</strong> (float | int):\nthe power output in W</li>\n<li><strong>torque</strong> (float | int):\nthe torque in Nm</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>torque</strong> (float):\nreturn the calculated cadence in rpm.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">power</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">torque</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.CardioProduct.calculate_power", "modulename": "labanalysis.equations.cardio", "qualname": "CardioProduct.calculate_power", "kind": "function", "doc": "<p>calculate the power output from torque and cadence</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>torque</strong> (float | int):\nthe torque in Nm</li>\n<li><strong>cadence</strong> (float | int):\nthe cadence in rpm</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>power</strong> (float):\nreturn the calculated power in W.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">torque</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">cadence</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.BikeP", "modulename": "labanalysis.equations.cardio", "qualname": "BikeP", "kind": "class", "doc": "<p>Bike P</p>\n", "bases": "CardioProduct"}, {"fullname": "labanalysis.equations.cardio.BikeP.predict_vo2", "modulename": "labanalysis.equations.cardio", "qualname": "BikeP.predict_vo2", "kind": "function", "doc": "<p>predict the exercise VO2 in ml/kg/min.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>power</strong> (int | float):\nthe power output in W</li>\n<li><strong>bodyweight</strong> (float | int):\nthe user bodyweight in kg</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>vo2</strong> (float):\nreturn the predicted VO2 in ml/kg/min.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">power</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">bodyweight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.BikeP.predict_bodyweight", "modulename": "labanalysis.equations.cardio", "qualname": "BikeP.predict_bodyweight", "kind": "function", "doc": "<p>predict the bodyweight from vo2 and power</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vo2</strong> (float | int):\nthe vo2 in ml/kg/min</li>\n<li><strong>power</strong> (float | int):\nthe power output in W</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bodyweight</strong> (float):\nreturn the predicted bodyweight in kg.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vo2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">power</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.BikeP.predict_power", "modulename": "labanalysis.equations.cardio", "qualname": "BikeP.predict_power", "kind": "function", "doc": "<p>predict the power output from vo2 and bodyweight</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vo2</strong> (float | int):\nthe vo2 in ml/kg/min</li>\n<li><strong>bodyweight</strong> (float | int):\nthe user bodyweight in kg</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bodyweight</strong> (float):\nreturn the predicted bodyweight in kg.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vo2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">bodyweight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.BikeP.torque_levels", "modulename": "labanalysis.equations.cardio", "qualname": "BikeP.torque_levels", "kind": "function", "doc": "<p>return the torque range allowed by the product in Nm</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.BikeHP", "modulename": "labanalysis.equations.cardio", "qualname": "BikeHP", "kind": "class", "doc": "<p>BikeHP</p>\n", "bases": "BikeP"}, {"fullname": "labanalysis.equations.cardio.BikeHP.torque_levels", "modulename": "labanalysis.equations.cardio", "qualname": "BikeHP.torque_levels", "kind": "function", "doc": "<p>return the torque range allowed by the product in Nm</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.TechnogymBike", "modulename": "labanalysis.equations.cardio", "qualname": "TechnogymBike", "kind": "class", "doc": "<p>TechnogymBike</p>\n", "bases": "BikeP"}, {"fullname": "labanalysis.equations.cardio.SynchroP", "modulename": "labanalysis.equations.cardio", "qualname": "SynchroP", "kind": "class", "doc": "<p>SynchroP</p>\n", "bases": "CardioProduct"}, {"fullname": "labanalysis.equations.cardio.SynchroP.estimate_incline", "modulename": "labanalysis.equations.cardio", "qualname": "SynchroP.estimate_incline", "kind": "function", "doc": "<p>estimate the incline percentage according to the input level</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grade_level</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.SynchroP.estimate_grade_level", "modulename": "labanalysis.equations.cardio", "qualname": "SynchroP.estimate_grade_level", "kind": "function", "doc": "<p>estimate the grade level according to the provided\nincline percentage provided in the 0-100 range</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">incline_perc</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.SynchroP.predict_vo2", "modulename": "labanalysis.equations.cardio", "qualname": "SynchroP.predict_vo2", "kind": "function", "doc": "<p>predict the exercise VO2 in ml/kg/min.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>power</strong> (int | float):\nthe power output in W</li>\n<li><strong>bodyweight</strong> (float | int):\nthe user bodyweight in kg</li>\n<li><strong>grade_level</strong> (int (optional, default = 8)):\nthe grade level of the machine.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>vo2</strong> (float):\nreturn the predicted VO2 in ml/kg/min.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">power</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">bodyweight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">grade_level</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.SynchroP.predict_bodyweight", "modulename": "labanalysis.equations.cardio", "qualname": "SynchroP.predict_bodyweight", "kind": "function", "doc": "<p>predict the bodyweight from vo2 and power</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vo2</strong> (float | int):\nthe vo2 in ml/kg/min</li>\n<li><strong>power</strong> (float | int):\nthe power output in W</li>\n<li><strong>grade_level</strong> (int (optional, default = 8)):\nthe grade level of the machine.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bodyweight</strong> (float):\nreturn the predicted bodyweight in kg.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vo2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">power</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">grade_level</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.SynchroP.predict_power", "modulename": "labanalysis.equations.cardio", "qualname": "SynchroP.predict_power", "kind": "function", "doc": "<p>predict the power output from vo2 and bodyweight</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vo2</strong> (float | int):\nthe vo2 in ml/kg/min</li>\n<li><strong>bodyweight</strong> (float | int):\nthe user bodyweight in kg</li>\n<li><strong>grade_level</strong> (int (optional, default = 8)):\nthe grade level of the machine.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bodyweight</strong> (float):\nreturn the predicted bodyweight in kg.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">vo2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">bodyweight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">grade_level</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">8</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.SynchroP.predict_grade_level", "modulename": "labanalysis.equations.cardio", "qualname": "SynchroP.predict_grade_level", "kind": "function", "doc": "<p>predict the power output from vo2 and bodyweight</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vo2</strong> (float | int):\nthe vo2 in ml/kg/min</li>\n<li><strong>bodyweight</strong> (float | int):\nthe user bodyweight in kg</li>\n<li><strong>power</strong> (int | float):\nthe power output in W</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>power</strong> (float):\nreturn the predicted power in W.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vo2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">bodyweight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">power</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.SynchroP.torque_levels", "modulename": "labanalysis.equations.cardio", "qualname": "SynchroP.torque_levels", "kind": "function", "doc": "<p>return the torque range allowed by the product in Nm</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.SynchroHP", "modulename": "labanalysis.equations.cardio", "qualname": "SynchroHP", "kind": "class", "doc": "<p>SynchroHP</p>\n", "bases": "SynchroP"}, {"fullname": "labanalysis.equations.cardio.SynchroHP.torque_levels", "modulename": "labanalysis.equations.cardio", "qualname": "SynchroHP.torque_levels", "kind": "function", "doc": "<p>return the torque range allowed by the product in Nm</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.TechnogymElliptical", "modulename": "labanalysis.equations.cardio", "qualname": "TechnogymElliptical", "kind": "class", "doc": "<p>Technogym Elliptical</p>\n", "bases": "CardioProduct"}, {"fullname": "labanalysis.equations.cardio.TechnogymElliptical.predict_vo2", "modulename": "labanalysis.equations.cardio", "qualname": "TechnogymElliptical.predict_vo2", "kind": "function", "doc": "<p>predict the exercise VO2 in ml/kg/min.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>power</strong> (int | float):\nthe power output in W</li>\n<li><strong>bodyweight</strong> (float | int):\nthe user bodyweight in kg</li>\n<li><strong>cadence</strong> (float | int):\nthe cadence in spm</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>vo2</strong> (float):\nreturn the predicted VO2 in ml/kg/min.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">power</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">bodyweight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">cadence</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.TechnogymElliptical.predict_bodyweight", "modulename": "labanalysis.equations.cardio", "qualname": "TechnogymElliptical.predict_bodyweight", "kind": "function", "doc": "<p>predict the bodyweight from vo2 and power</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vo2</strong> (float | int):\nthe vo2 in ml/kg/min</li>\n<li><strong>power</strong> (float | int):\nthe power output in W</li>\n<li><strong>cadence</strong> (float | int):\nthe cadence in spm</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bodyweight</strong> (float):\nreturn the predicted bodyweight in kg.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vo2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">power</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">cadence</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.TechnogymElliptical.predict_power", "modulename": "labanalysis.equations.cardio", "qualname": "TechnogymElliptical.predict_power", "kind": "function", "doc": "<p>predict the power output from vo2 and bodyweight</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vo2</strong> (float | int):\nthe vo2 in ml/kg/min</li>\n<li><strong>bodyweight</strong> (float | int):\nthe user bodyweight in kg</li>\n<li><strong>cadence</strong> (float | int):\nthe cadence in spm</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bodyweight</strong> (float):\nreturn the predicted bodyweight in kg.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">vo2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">bodyweight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">cadence</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.TechnogymElliptical.predict_cadence", "modulename": "labanalysis.equations.cardio", "qualname": "TechnogymElliptical.predict_cadence", "kind": "function", "doc": "<p>predict the cadence in spm from vo2 and bodyweight and power</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vo2</strong> (float | int):\nthe vo2 in ml/kg/min</li>\n<li><strong>bodyweight</strong> (float | int):\nthe user bodyweight in kg</li>\n<li><strong>power</strong> (int | float):\nthe power output in W</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>cadence</strong> (float):\nreturn the predicted cadence in spm.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">vo2</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">bodyweight</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">power</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.cardio.TechnogymElliptical.torque_levels", "modulename": "labanalysis.equations.cardio", "qualname": "TechnogymElliptical.torque_levels", "kind": "function", "doc": "<p>return the torque range allowed by the product in Nm</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.strength", "modulename": "labanalysis.equations.strength", "kind": "module", "doc": "<p>strength module containing 1RM predicting equations</p>\n"}, {"fullname": "labanalysis.equations.strength.Brzycki1RM", "modulename": "labanalysis.equations.strength", "qualname": "Brzycki1RM", "kind": "class", "doc": "<p>class allowing the calculation of the 1RM and its derivatives according\nto the Brzycki equaiton.</p>\n"}, {"fullname": "labanalysis.equations.strength.Brzycki1RM.predict_1rm", "modulename": "labanalysis.equations.strength", "qualname": "Brzycki1RM.predict_1rm", "kind": "function", "doc": "<p>return the 1RM in kg from the given reps and load in kg</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>reps</strong> (int):\nthe number of repetitions</li>\n<li><strong>load</strong> (float | int):\nthe number of load</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>1rm</strong> (float):\nreturn the predicted 1RM in kg.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">reps</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">load</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.strength.Brzycki1RM.predict_reps", "modulename": "labanalysis.equations.strength", "qualname": "Brzycki1RM.predict_reps", "kind": "function", "doc": "<p>return the 1RM in kg from the given reps and load in kg</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rm1</strong> (float | int):\nthe 1rm in kg</li>\n<li><strong>load</strong> (float | int):\nthe number of load</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>1rm</strong> (float):\nreturn the predicted 1RM in kg.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rm1</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">load</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.equations.strength.Brzycki1RM.predict_load", "modulename": "labanalysis.equations.strength", "qualname": "Brzycki1RM.predict_load", "kind": "function", "doc": "<p>return the 1RM in kg from the given reps and load in kg</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rm1</strong> (float | int):\nthe 1rm in kg</li>\n<li><strong>reps</strong> (int):\nthe number of reps</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>load</strong> (float):\nreturn the load allowing the required number of reps given the 1RM.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rm1</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">reps</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames", "modulename": "labanalysis.frames", "kind": "module", "doc": "<p>frames library</p>\n"}, {"fullname": "labanalysis.frames.records", "modulename": "labanalysis.frames.records", "kind": "module", "doc": "<p>timeseriesrecords library</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength", "modulename": "labanalysis.frames.records.biostrength", "kind": "module", "doc": "<p>resistance exercises library</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.defaultexercise", "modulename": "labanalysis.frames.records.biostrength.defaultexercise", "kind": "module", "doc": "<p>isokinetic exercise module</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise", "modulename": "labanalysis.frames.records.biostrength.defaultexercise", "qualname": "DefaultExercise", "kind": "class", "doc": "<p>Isokinetic Test 1RM instance</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>time</strong> (Iterable[int | float]):\nthe array containing the time instant of each sample in seconds</li>\n<li><strong>position</strong> (Iterable[int | float]):\nthe array containing the displacement of the handles for each sample</li>\n<li><strong>load</strong> (Iterable[int | float]):\nthe array containing the load measured at each sample in kgf</li>\n<li><strong>coefs_1rm</strong> (tuple[int | float, int | float]):\nthe b0 and b1 coefficients used to estimated the 1RM.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>raw</strong> (DataFrame):\na DataFrame containing the input data</li>\n<li><strong>repetitions</strong> (list[DataFrame]):\na list of dataframes each defining one single repetition</li>\n<li><strong>product</strong> (BiostrengthProduct):\nthe product on which the test has been performed</li>\n<li><strong>peak_load</strong> (float):\nthe peak load measured during the isokinetic repetitions</li>\n<li><strong>rom0</strong> (float):\nthe start of the user's range of movement in meters</li>\n<li><strong>rom1</strong> (float):\nthe end of the user's range of movement in meters</li>\n<li><strong>rom</strong> (float):\nthe range of movement amplitude in meters</li>\n<li><strong>results_table</strong> (DataFrame):\na table containing the data obtained during the test</li>\n<li><strong>summary_table</strong> (DataFrame):\na table containing summary statistics about the test</li>\n<li><strong>summary_plot</strong> (FigureWidget):\na figure representing the results of the test.</li>\n</ul>\n", "bases": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord"}, {"fullname": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise.__init__", "modulename": "labanalysis.frames.records.biostrength.defaultexercise", "qualname": "DefaultExercise.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">biostrength</span><span class=\"o\">.</span><span class=\"n\">BiostrengthProduct</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">synchronize_signals</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise.side", "modulename": "labanalysis.frames.records.biostrength.defaultexercise", "qualname": "DefaultExercise.side", "kind": "variable", "doc": "<p>get the side of the test</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise.repetitions", "modulename": "labanalysis.frames.records.biostrength.defaultexercise", "qualname": "DefaultExercise.repetitions", "kind": "variable", "doc": "<p>return the tracked repetitions data</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise.product", "modulename": "labanalysis.frames.records.biostrength.defaultexercise", "qualname": "DefaultExercise.product", "kind": "variable", "doc": "<p>return the product on which the test has been performed</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise.reset_time", "modulename": "labanalysis.frames.records.biostrength.defaultexercise", "qualname": "DefaultExercise.reset_time", "kind": "function", "doc": "<p>Reset the time index to start at zero for all contained Timeseries-like\nobjects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>inplace</strong> (bool, optional):\nIf True, modify in place. If False, return a new TimeseriesRecord.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord or None</strong>: A TimeseriesRecord with reset time if inplace is False, otherwise\nNone.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise.set_product", "modulename": "labanalysis.frames.records.biostrength.defaultexercise", "qualname": "DefaultExercise.set_product", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">biostrength</span><span class=\"o\">.</span><span class=\"n\">BiostrengthProduct</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise.set_side", "modulename": "labanalysis.frames.records.biostrength.defaultexercise", "qualname": "DefaultExercise.set_side", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise.from_txt", "modulename": "labanalysis.frames.records.biostrength.defaultexercise", "qualname": "DefaultExercise.from_txt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;LEG PRESS&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG PRESS REV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG EXTENSION&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG EXTENSION REV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG CURL&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LOW ROW&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ADJUSTABLE PULLEY REV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;CHEST PRESS&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;SHOULDER PRESS&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise.to_plotly_figure", "modulename": "labanalysis.frames.records.biostrength.defaultexercise", "qualname": "DefaultExercise.to_plotly_figure", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.biostrength.defaultrepetition", "modulename": "labanalysis.frames.records.biostrength.defaultrepetition", "kind": "module", "doc": "<p>isokinetic exercise module</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.defaultrepetition.DefaultRepetition", "modulename": "labanalysis.frames.records.biostrength.defaultrepetition", "qualname": "DefaultRepetition", "kind": "class", "doc": "<p>Isokinetic Test 1RM instance</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>time</strong> (Iterable[int | float]):\nthe array containing the time instant of each sample in seconds</li>\n<li><strong>position</strong> (Iterable[int | float]):\nthe array containing the displacement of the handles for each sample</li>\n<li><strong>load</strong> (Iterable[int | float]):\nthe array containing the load measured at each sample in kgf</li>\n<li><strong>coefs_1rm</strong> (tuple[int | float, int | float]):\nthe b0 and b1 coefficients used to estimated the 1RM.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>raw</strong> (DataFrame):\na DataFrame containing the input data</li>\n<li><strong>repetitions</strong> (list[DataFrame]):\na list of dataframes each defining one single repetition</li>\n<li><strong>product</strong> (BiostrengthProduct):\nthe product on which the test has been performed</li>\n<li><strong>peak_load</strong> (float):\nthe peak load measured during the isokinetic repetitions</li>\n<li><strong>rom0</strong> (float):\nthe start of the user's range of movement in meters</li>\n<li><strong>rom1</strong> (float):\nthe end of the user's range of movement in meters</li>\n<li><strong>rom</strong> (float):\nthe range of movement amplitude in meters</li>\n<li><strong>results_table</strong> (DataFrame):\na table containing the data obtained during the test</li>\n<li><strong>summary_table</strong> (DataFrame):\na table containing summary statistics about the test</li>\n<li><strong>summary_plot</strong> (FigureWidget):\na figure representing the results of the test.</li>\n</ul>\n", "bases": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord"}, {"fullname": "labanalysis.frames.records.biostrength.defaultrepetition.DefaultRepetition.__init__", "modulename": "labanalysis.frames.records.biostrength.defaultrepetition", "qualname": "DefaultRepetition.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">biostrength</span><span class=\"o\">.</span><span class=\"n\">BiostrengthProduct</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.biostrength.defaultrepetition.DefaultRepetition.side", "modulename": "labanalysis.frames.records.biostrength.defaultrepetition", "qualname": "DefaultRepetition.side", "kind": "variable", "doc": "<p>get the side of the test</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.defaultrepetition.DefaultRepetition.product", "modulename": "labanalysis.frames.records.biostrength.defaultrepetition", "qualname": "DefaultRepetition.product", "kind": "variable", "doc": "<p>return the product on which the test has been performed</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.defaultrepetition.DefaultRepetition.peak_force_N", "modulename": "labanalysis.frames.records.biostrength.defaultrepetition", "qualname": "DefaultRepetition.peak_force_N", "kind": "variable", "doc": "<p>return the ending position of the repetitions</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.defaultrepetition.DefaultRepetition.rom_m", "modulename": "labanalysis.frames.records.biostrength.defaultrepetition", "qualname": "DefaultRepetition.rom_m", "kind": "variable", "doc": "<p>return the repetition's ROM</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.defaultrepetition.DefaultRepetition.muscle_activations", "modulename": "labanalysis.frames.records.biostrength.defaultrepetition", "qualname": "DefaultRepetition.muscle_activations", "kind": "variable", "doc": "<p>Returns coordination and balance metrics from EMG signals.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: DataFrame with coordination and balance metrics, or empty if not available.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.biostrength.defaultrepetition.DefaultRepetition.output_metrics", "modulename": "labanalysis.frames.records.biostrength.defaultrepetition", "qualname": "DefaultRepetition.output_metrics", "kind": "variable", "doc": "<p>Returns summary metrics for the jump.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: DataFrame with summary metrics for the jump.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.biostrength.isokineticexercise", "modulename": "labanalysis.frames.records.biostrength.isokineticexercise", "kind": "module", "doc": "<p>isokinetic exercise module</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.isokineticexercise.IsokineticExercise", "modulename": "labanalysis.frames.records.biostrength.isokineticexercise", "qualname": "IsokineticExercise", "kind": "class", "doc": "<p>Isokinetic Test 1RM instance</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>time</strong> (Iterable[int | float]):\nthe array containing the time instant of each sample in seconds</li>\n<li><strong>position</strong> (Iterable[int | float]):\nthe array containing the displacement of the handles for each sample</li>\n<li><strong>load</strong> (Iterable[int | float]):\nthe array containing the load measured at each sample in kgf</li>\n<li><strong>coefs_1rm</strong> (tuple[int | float, int | float]):\nthe b0 and b1 coefficients used to estimated the 1RM.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>raw</strong> (DataFrame):\na DataFrame containing the input data</li>\n<li><strong>repetitions</strong> (list[DataFrame]):\na list of dataframes each defining one single repetition</li>\n<li><strong>product</strong> (BiostrengthProduct):\nthe product on which the test has been performed</li>\n<li><strong>peak_load</strong> (float):\nthe peak load measured during the isokinetic repetitions</li>\n<li><strong>rom0</strong> (float):\nthe start of the user's range of movement in meters</li>\n<li><strong>rom1</strong> (float):\nthe end of the user's range of movement in meters</li>\n<li><strong>rom</strong> (float):\nthe range of movement amplitude in meters</li>\n<li><strong>results_table</strong> (DataFrame):\na table containing the data obtained during the test</li>\n<li><strong>summary_table</strong> (DataFrame):\na table containing summary statistics about the test</li>\n<li><strong>summary_plot</strong> (FigureWidget):\na figure representing the results of the test.</li>\n</ul>\n", "bases": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise"}, {"fullname": "labanalysis.frames.records.biostrength.isokineticexercise.IsokineticExercise.__init__", "modulename": "labanalysis.frames.records.biostrength.isokineticexercise", "qualname": "IsokineticExercise.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">biostrength</span><span class=\"o\">.</span><span class=\"n\">BiostrengthProduct</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">synchronize_signals</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.biostrength.isokineticrepetition", "modulename": "labanalysis.frames.records.biostrength.isokineticrepetition", "kind": "module", "doc": "<p>isokinetic exercise module</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.isokineticrepetition.IsokineticRepetition", "modulename": "labanalysis.frames.records.biostrength.isokineticrepetition", "qualname": "IsokineticRepetition", "kind": "class", "doc": "<p>Isokinetic Test 1RM instance</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>time</strong> (Iterable[int | float]):\nthe array containing the time instant of each sample in seconds</li>\n<li><strong>position</strong> (Iterable[int | float]):\nthe array containing the displacement of the handles for each sample</li>\n<li><strong>load</strong> (Iterable[int | float]):\nthe array containing the load measured at each sample in kgf</li>\n<li><strong>coefs_1rm</strong> (tuple[int | float, int | float]):\nthe b0 and b1 coefficients used to estimated the 1RM.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>raw</strong> (DataFrame):\na DataFrame containing the input data</li>\n<li><strong>repetitions</strong> (list[DataFrame]):\na list of dataframes each defining one single repetition</li>\n<li><strong>product</strong> (BiostrengthProduct):\nthe product on which the test has been performed</li>\n<li><strong>peak_load</strong> (float):\nthe peak load measured during the isokinetic repetitions</li>\n<li><strong>rom0</strong> (float):\nthe start of the user's range of movement in meters</li>\n<li><strong>rom1</strong> (float):\nthe end of the user's range of movement in meters</li>\n<li><strong>rom</strong> (float):\nthe range of movement amplitude in meters</li>\n<li><strong>results_table</strong> (DataFrame):\na table containing the data obtained during the test</li>\n<li><strong>summary_table</strong> (DataFrame):\na table containing summary statistics about the test</li>\n<li><strong>summary_plot</strong> (FigureWidget):\na figure representing the results of the test.</li>\n</ul>\n", "bases": "labanalysis.frames.records.biostrength.defaultrepetition.DefaultRepetition"}, {"fullname": "labanalysis.frames.records.biostrength.isokineticrepetition.IsokineticRepetition.__init__", "modulename": "labanalysis.frames.records.biostrength.isokineticrepetition", "qualname": "IsokineticRepetition.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">biostrength</span><span class=\"o\">.</span><span class=\"n\">BiostrengthProduct</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.biostrength.isokineticrepetition.IsokineticRepetition.estimated_1rm_kg", "modulename": "labanalysis.frames.records.biostrength.isokineticrepetition", "qualname": "IsokineticRepetition.estimated_1rm_kg", "kind": "variable", "doc": "<p>return the predicted 1RM</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.isokineticrepetition.IsokineticRepetition.output_metrics", "modulename": "labanalysis.frames.records.biostrength.isokineticrepetition", "qualname": "IsokineticRepetition.output_metrics", "kind": "variable", "doc": "<p>Returns summary metrics for the jump.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: DataFrame with summary metrics for the jump.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.biostrength.isometricexercise", "modulename": "labanalysis.frames.records.biostrength.isometricexercise", "kind": "module", "doc": "<p>isokinetic exercise module</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.isometricexercise.IsometricExercise", "modulename": "labanalysis.frames.records.biostrength.isometricexercise", "qualname": "IsometricExercise", "kind": "class", "doc": "<p>Isokinetic Test 1RM instance</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>time</strong> (Iterable[int | float]):\nthe array containing the time instant of each sample in seconds</li>\n<li><strong>position</strong> (Iterable[int | float]):\nthe array containing the displacement of the handles for each sample</li>\n<li><strong>load</strong> (Iterable[int | float]):\nthe array containing the load measured at each sample in kgf</li>\n<li><strong>coefs_1rm</strong> (tuple[int | float, int | float]):\nthe b0 and b1 coefficients used to estimated the 1RM.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>raw</strong> (DataFrame):\na DataFrame containing the input data</li>\n<li><strong>repetitions</strong> (list[DataFrame]):\na list of dataframes each defining one single repetition</li>\n<li><strong>product</strong> (BiostrengthProduct):\nthe product on which the test has been performed</li>\n<li><strong>peak_load</strong> (float):\nthe peak load measured during the isokinetic repetitions</li>\n<li><strong>rom0</strong> (float):\nthe start of the user's range of movement in meters</li>\n<li><strong>rom1</strong> (float):\nthe end of the user's range of movement in meters</li>\n<li><strong>rom</strong> (float):\nthe range of movement amplitude in meters</li>\n<li><strong>results_table</strong> (DataFrame):\na table containing the data obtained during the test</li>\n<li><strong>summary_table</strong> (DataFrame):\na table containing summary statistics about the test</li>\n<li><strong>summary_plot</strong> (FigureWidget):\na figure representing the results of the test.</li>\n</ul>\n", "bases": "labanalysis.frames.records.biostrength.defaultexercise.DefaultExercise"}, {"fullname": "labanalysis.frames.records.biostrength.isometricexercise.IsometricExercise.__init__", "modulename": "labanalysis.frames.records.biostrength.isometricexercise", "qualname": "IsometricExercise.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">biostrength</span><span class=\"o\">.</span><span class=\"n\">BiostrengthProduct</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">synchronize_signals</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.biostrength.isometricrepetition", "modulename": "labanalysis.frames.records.biostrength.isometricrepetition", "kind": "module", "doc": "<p>isokinetic exercise module</p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.isometricrepetition.IsometricRepetition", "modulename": "labanalysis.frames.records.biostrength.isometricrepetition", "qualname": "IsometricRepetition", "kind": "class", "doc": "<p>Isokinetic Test 1RM instance</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>time</strong> (Iterable[int | float]):\nthe array containing the time instant of each sample in seconds</li>\n<li><strong>position</strong> (Iterable[int | float]):\nthe array containing the displacement of the handles for each sample</li>\n<li><strong>load</strong> (Iterable[int | float]):\nthe array containing the load measured at each sample in kgf</li>\n<li><strong>coefs_1rm</strong> (tuple[int | float, int | float]):\nthe b0 and b1 coefficients used to estimated the 1RM.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>raw</strong> (DataFrame):\na DataFrame containing the input data</li>\n<li><strong>repetitions</strong> (list[DataFrame]):\na list of dataframes each defining one single repetition</li>\n<li><strong>product</strong> (BiostrengthProduct):\nthe product on which the test has been performed</li>\n<li><strong>peak_load</strong> (float):\nthe peak load measured during the isokinetic repetitions</li>\n<li><strong>rom0</strong> (float):\nthe start of the user's range of movement in meters</li>\n<li><strong>rom1</strong> (float):\nthe end of the user's range of movement in meters</li>\n<li><strong>rom</strong> (float):\nthe range of movement amplitude in meters</li>\n<li><strong>results_table</strong> (DataFrame):\na table containing the data obtained during the test</li>\n<li><strong>summary_table</strong> (DataFrame):\na table containing summary statistics about the test</li>\n<li><strong>summary_plot</strong> (FigureWidget):\na figure representing the results of the test.</li>\n</ul>\n", "bases": "labanalysis.frames.records.biostrength.defaultrepetition.DefaultRepetition"}, {"fullname": "labanalysis.frames.records.biostrength.isometricrepetition.IsometricRepetition.__init__", "modulename": "labanalysis.frames.records.biostrength.isometricrepetition", "qualname": "IsometricRepetition.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">biostrength</span><span class=\"o\">.</span><span class=\"n\">BiostrengthProduct</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.biostrength.isometricrepetition.IsometricRepetition.rate_of_force_development", "modulename": "labanalysis.frames.records.biostrength.isometricrepetition", "qualname": "IsometricRepetition.rate_of_force_development", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.isometricrepetition.IsometricRepetition.time_to_peak_force", "modulename": "labanalysis.frames.records.biostrength.isometricrepetition", "qualname": "IsometricRepetition.time_to_peak_force", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.biostrength.isometricrepetition.IsometricRepetition.output_metrics", "modulename": "labanalysis.frames.records.biostrength.isometricrepetition", "qualname": "IsometricRepetition.output_metrics", "kind": "variable", "doc": "<p>Returns summary metrics for the jump.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: DataFrame with summary metrics for the jump.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.bodies", "modulename": "labanalysis.frames.records.bodies", "kind": "module", "doc": "<p>full body module</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody", "kind": "class", "doc": "<p>A dictionary-like container for Timeseries, TimeseriesRecord, and ForcePlatform objects,\nsupporting type filtering and DataFrame conversion.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vertical_axis</strong> (str, optional):\nThe label for the vertical axis (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nThe label for the anteroposterior axis (default \"Z\").</li>\n<li><strong>strip</strong> (bool, optional):\nIf True, remove leading/trailing rows or columns that are all NaN from all contained objects (default True).</li>\n<li><strong>reset_time</strong> (bool, optional):\nIf True, reset the time index to start at zero for all contained objects (default True).</li>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform to include in the record.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_vertical_axis</strong> (str):\nThe vertical axis label.</li>\n<li><strong>_antpos_axis</strong> (str):\nThe anteroposterior axis label.</li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>copy()\n    Return a deep copy of the TimeseriesRecord.\nstrip(axis=0, inplace=False)\n    Remove leading/trailing rows or columns that are all NaN from all contained objects.\nreset_time(inplace=False)\n    Reset the time index to start at zero for all contained objects.\napply(func, axis=0, inplace=False, *args, **kwargs)\n    Apply a function or ProcessingPipeline to all contained objects.\nfillna(value=None, n_regressors=None, inplace=False)\n    Fill NaNs for all contained objects.\nto_dataframe()\n    Convert the record to a pandas DataFrame with MultiIndex columns.\nfrom_tdf(filename)\n    Create a TimeseriesRecord from a TDF file.</p>\n", "bases": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.__init__", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.from_tdf", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.from_tdf", "kind": "function", "doc": "<p>Create a TimeseriesRecord from a TDF file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong> (str):\nPath to the TDF file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: A TimeseriesRecord populated with the data from the TDF file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.to_dataframe", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.to_dataframe", "kind": "function", "doc": "<p>Convert the record to a pandas DataFrame with MultiIndex columns.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: A DataFrame containing all the data from the TimeseriesRecord.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_ankle_referenceframe", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_ankle_referenceframe", "kind": "variable", "doc": "<p>return the left ankle reference frame origin and rotation matrix.</p>\n\n<p>A point can be aligned to this reference frame by:\n    new = np.einsum(\"nij,nj->ni\", R, old - O)</p>\n\n<p>Where R is the rotation matrix (N, 3, 3) and O (N, 3) is the origin of\nthe reference frame.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_ankle_referenceframe", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_ankle_referenceframe", "kind": "variable", "doc": "<p>return the right ankle reference frame origin and rotation matrix.</p>\n\n<p>A point can be aligned to this reference frame by:\n    new = np.einsum(\"nij,nj->ni\", R, old - O)</p>\n\n<p>Where R is the rotation matrix (N, 3, 3) and O (N, 3) is the origin of\nthe reference frame.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_hip_referenceframe", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_hip_referenceframe", "kind": "variable", "doc": "<p>return the left hip reference frame origin and rotation matrix.</p>\n\n<p>A point can be aligned to this reference frame by:\n    new = np.einsum(\"nij,nj->ni\", R, old - O)</p>\n\n<p>Where R is the rotation matrix (N, 3, 3) and O (N, 3) is the origin of\nthe reference frame.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_hip_referenceframe", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_hip_referenceframe", "kind": "variable", "doc": "<p>return the right hip reference frame origin and rotation matrix.</p>\n\n<p>A point can be aligned to this reference frame by:\n    new = np.einsum(\"nij,nj->ni\", R, old - O)</p>\n\n<p>Where R is the rotation matrix (N, 3, 3) and O (N, 3) is the origin of\nthe reference frame.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.pelvis_referenceframe", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.pelvis_referenceframe", "kind": "variable", "doc": "<p>return the pelvis reference frame origin and rotation matrix.</p>\n\n<p>A point can be aligned to this reference frame by:\n    new = np.einsum(\"nij,nj->ni\", R, old - O)</p>\n\n<p>Where R is the rotation matrix (N, 3, 3) and O (N, 3) is the origin of\nthe reference frame.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_shoulder_referenceframe", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_shoulder_referenceframe", "kind": "variable", "doc": "<p>Return the left shoulder reference frame origin and rotation matrix.</p>\n\n<p>A point can be aligned to this reference frame by:\n    new = np.einsum(\"nij,nj->ni\", R, old - O)</p>\n\n<p>Where R is the rotation matrix (N, 3, 3) and O (N, 3) is the origin of\nthe reference frame.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_shoulder_referenceframe", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_shoulder_referenceframe", "kind": "variable", "doc": "<p>Return the right shoulder reference frame origin and rotation matrix.</p>\n\n<p>A point can be aligned to this reference frame by:\n    new = np.einsum(\"nij,nj->ni\", R, old - O)</p>\n\n<p>Where R is the rotation matrix (N, 3, 3) and O (N, 3) is the origin of\nthe reference frame.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_ankle", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_ankle", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_ankle", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_ankle", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_knee", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_knee", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_knee", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_knee", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.pelvis_center", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.pelvis_center", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.pelvis_plane", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.pelvis_plane", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.pelvis_width", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.pelvis_width", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.pelvis_height", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.pelvis_height", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_hip", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_hip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_hip", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_hip", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_shoulder", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_shoulder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_shoulder", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_shoulder", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_elbow", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_elbow", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_elbow", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_elbow", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_wrist", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_wrist", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_wrist", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_wrist", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_foot_plane", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_foot_plane", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_foot_plane", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_foot_plane", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_ankle_flexionextension", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_ankle_flexionextension", "kind": "variable", "doc": "<p>the the dorsal (positive) or plantar (negative) flexion of the\nleft ankle with respect to he shin in degrees</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_ankle_flexionextension", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_ankle_flexionextension", "kind": "variable", "doc": "<p>the the dorsal (negative) or plantar (positive) flexion of the\nright ankle with respect to he shin in degrees</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_ankle_inversioneversion", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_ankle_inversioneversion", "kind": "variable", "doc": "<p>the inversion (negative) or eversion (positive) angle of the\nleft ankle with respect to he shin in degrees</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_ankle_inversioneversion", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_ankle_inversioneversion", "kind": "variable", "doc": "<p>the inversion (negative) or eversion (positive) angle of the\nleft ankle with respect to he shin in degrees</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_knee_flexionextension", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_knee_flexionextension", "kind": "variable", "doc": "<p>return the left knee flexion in degrees.\nExtension will be negative</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_knee_flexionextension", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_knee_flexionextension", "kind": "variable", "doc": "<p>return the left knee flexion in degrees. Extension will be negative</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_hip_flexionextension", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_hip_flexionextension", "kind": "variable", "doc": "<p>return the left hip flexion/extension in degrees.\nextension will be negative</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_hip_flexionextension", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_hip_flexionextension", "kind": "variable", "doc": "<p>return the right hip flexion/extension in degrees.\nExtension will be negative</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_hip_abductionadduction", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_hip_abductionadduction", "kind": "variable", "doc": "<p>Return the left hip abduction/adduction in degrees.\nAbduction will be positive, adduction negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_hip_abductionadduction", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_hip_abductionadduction", "kind": "variable", "doc": "<p>Return the right hip abduction/adduction in degrees.\nAbduction will be positive, adduction negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_hip_internalexternalrotation", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_hip_internalexternalrotation", "kind": "variable", "doc": "<p>Return the left hip internal/external rotation in degrees.\nInternal rotation is positive, external rotation is negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_hip_internalexternalrotation", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_hip_internalexternalrotation", "kind": "variable", "doc": "<p>Return the right hip internal/external rotation in degrees.\nInternal rotation is positive, external rotation is negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.pelvis_anteroposteriortilt_global", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.pelvis_anteroposteriortilt_global", "kind": "variable", "doc": "<p>Return the pelvis pitch (sagittal tilt) in degrees with respect to\nthe global reference frame.\nAnterior tilt is negative, posterior tilt is positive.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.pelvis_lateraltilt_global", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.pelvis_lateraltilt_global", "kind": "variable", "doc": "<p>Return the pelvis roll (frontal tilt) in degrees with respect to\nthe global reference frame.\nRight tilt is positive, left tilt is negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.pelvis_rotation_global", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.pelvis_rotation_global", "kind": "variable", "doc": "<p>Return the pelvis yaw (axial rotation) in degrees with respect\nto the global reference frame.\nRight rotation is positive, left rotation is negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.trunk_flexionextension_global", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.trunk_flexionextension_global", "kind": "variable", "doc": "<p>Return the trunk flexion/extension in degrees with respect\nto the global reference frame.\nFlexion is positive, extension is negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.trunk_lateralflexion_global", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.trunk_lateralflexion_global", "kind": "variable", "doc": "<p>Return the trunk lateral tilt (side bending) in degrees with respect\nto the global reference frame.\nRight tilt is negative, left tilt is positive.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.trunk_rotation_global", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.trunk_rotation_global", "kind": "variable", "doc": "<p>Return the trunk axial rotation in degrees with respect to the\nglobal reference frame.\nRight rotation is positive, left rotation is negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.trunk_rotation_local", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.trunk_rotation_local", "kind": "variable", "doc": "<p>Return the shoulders axial rotation in degrees with respect to the\npelvis local reference frame.\nRight rotation is positive, left rotation is negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.shoulder_lateraltilt_global", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.shoulder_lateraltilt_global", "kind": "variable", "doc": "<p>Return the shoulders roll (frontal tilt) in degrees with respect to\nthe global reference frame.\nRight tilt is positive, left tilt is negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.shoulder_lateraltilt_local", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.shoulder_lateraltilt_local", "kind": "variable", "doc": "<p>Return the shoulders roll (frontal tilt) in degrees with respect to\nthe spine lateral tilt.\nRight tilt is positive, left tilt is negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_shoulder_flexionextension", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_shoulder_flexionextension", "kind": "variable", "doc": "<p>Return the left shoulder flexion/extension in degrees with respect\nto the neck base.\nPositive values denote flexion, while negative values indicate\nextension.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_shoulder_flexionextension", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_shoulder_flexionextension", "kind": "variable", "doc": "<p>Return the right shoulder flexion/extension in degrees with respect\nto the neck base.\nPositive values denote flexion, while negative values indicate\nextension.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_shoulder_abductionadduction", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_shoulder_abductionadduction", "kind": "variable", "doc": "<p>Return the left shoulder abduction/adduction in degrees.\nAbduction will be positive, adduction negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_shoulder_abductionadduction", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_shoulder_abductionadduction", "kind": "variable", "doc": "<p>Return the right shoulder abduction/adduction in degrees.\nAbduction will be positive, adduction negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_shoulder_internalexternalrotation", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_shoulder_internalexternalrotation", "kind": "variable", "doc": "<p>Return the left shoulder internal/external rotation in degrees.\nInternal rotation is positive, external rotation is negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_shoulder_internalexternalrotation", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_shoulder_internalexternalrotation", "kind": "variable", "doc": "<p>Return the right shoulder internal/external rotation in degrees.\nInternal rotation is positive, external rotation is negative.</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.left_elbow_flexionextension", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.left_elbow_flexionextension", "kind": "variable", "doc": "<p>return the left elbow flexion in degrees. Extension will be negative</p>\n"}, {"fullname": "labanalysis.frames.records.bodies.WholeBody.right_elbow_flexionextension", "modulename": "labanalysis.frames.records.bodies", "qualname": "WholeBody.right_elbow_flexionextension", "kind": "variable", "doc": "<p>return the right elbow flexion in degrees. Extension will be negative</p>\n"}, {"fullname": "labanalysis.frames.records.forceplatforms", "modulename": "labanalysis.frames.records.forceplatforms", "kind": "module", "doc": "<p>forceplatforms module</p>\n"}, {"fullname": "labanalysis.frames.records.forceplatforms.ForcePlatform", "modulename": "labanalysis.frames.records.forceplatforms", "qualname": "ForcePlatform", "kind": "class", "doc": "<p>Represents a force platform measurement system.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>origin</strong> (Point3D):\nThe center of pressure (CoP) location over time.</li>\n<li><strong>force</strong> (Signal3D):\nThe 3D ground reaction force vector over time.</li>\n<li><strong>torque</strong> (Signal3D):\nThe 3D torque vector over time.</li>\n<li><strong>vertical_axis</strong> (str, optional):\nThe label for the vertical axis (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nThe label for the anteroposterior axis (default \"Z\").</li>\n<li><strong>strip</strong> (bool, optional):\nIf True, remove leading/trailing rows or columns that are all NaN from\nall contained objects (default True).</li>\n<li><strong>reset_time</strong> (bool, optional):\nIf True, reset the time index to start at zero for all contained objects\n(default True).</li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>copy()\n    Return a deep copy of the ForcePlatform.</p>\n", "bases": "labanalysis.frames.records.records.Record"}, {"fullname": "labanalysis.frames.records.forceplatforms.ForcePlatform.__init__", "modulename": "labanalysis.frames.records.forceplatforms", "qualname": "ForcePlatform.__init__", "kind": "function", "doc": "<p>Initialize a ForcePlatform.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><p><strong>origin</strong> (Point3D):</p></li>\n<li><p><strong>force</strong> (Signal3D):</p></li>\n<li><p><strong>torque</strong> (Signal3D):</p></li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If any argument is not of the correct type.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">origin</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span>,</span><span class=\"param\">\t<span class=\"n\">torque</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.forceplatforms.ForcePlatform.vertical_axis", "modulename": "labanalysis.frames.records.forceplatforms", "qualname": "ForcePlatform.vertical_axis", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.forceplatforms.ForcePlatform.anteroposterior_axis", "modulename": "labanalysis.frames.records.forceplatforms", "qualname": "ForcePlatform.anteroposterior_axis", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.forceplatforms.ForcePlatform.lateral_axis", "modulename": "labanalysis.frames.records.forceplatforms", "qualname": "ForcePlatform.lateral_axis", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.forceplatforms.ForcePlatform.change_reference_frame", "modulename": "labanalysis.frames.records.forceplatforms", "qualname": "ForcePlatform.change_reference_frame", "kind": "function", "doc": "<p>Rotate and translate each sample using the new reference frame defined by\northonormal versors new_x, new_y, new_z and origin new_origin.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>new_x, new_y, new_z</strong> (array-like):\nOrthonormal basis vectors.</li>\n<li><strong>new_origin</strong> (array-like):\nNew origin.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ForcePlatform</strong>: Transformed signal.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If input vectors are not valid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">new_x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">new_y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">new_z</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">new_origin</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.jumping", "modulename": "labanalysis.frames.records.jumping", "kind": "module", "doc": "<p>repeatedjump module</p>\n"}, {"fullname": "labanalysis.frames.records.jumping.JumpExercise", "modulename": "labanalysis.frames.records.jumping", "qualname": "JumpExercise", "kind": "class", "doc": "<p>A dictionary-like container for Timeseries, TimeseriesRecord, and ForcePlatform objects,\nsupporting type filtering and DataFrame conversion.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vertical_axis</strong> (str, optional):\nThe label for the vertical axis (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nThe label for the anteroposterior axis (default \"Z\").</li>\n<li><strong>strip</strong> (bool, optional):\nIf True, remove leading/trailing rows or columns that are all NaN from all contained objects (default True).</li>\n<li><strong>reset_time</strong> (bool, optional):\nIf True, reset the time index to start at zero for all contained objects (default True).</li>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform to include in the record.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_vertical_axis</strong> (str):\nThe vertical axis label.</li>\n<li><strong>_antpos_axis</strong> (str):\nThe anteroposterior axis label.</li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>copy()\n    Return a deep copy of the TimeseriesRecord.\nstrip(axis=0, inplace=False)\n    Remove leading/trailing rows or columns that are all NaN from all contained objects.\nreset_time(inplace=False)\n    Reset the time index to start at zero for all contained objects.\napply(func, axis=0, inplace=False, *args, **kwargs)\n    Apply a function or ProcessingPipeline to all contained objects.\nfillna(value=None, n_regressors=None, inplace=False)\n    Fill NaNs for all contained objects.\nto_dataframe()\n    Convert the record to a pandas DataFrame with MultiIndex columns.\nfrom_tdf(filename)\n    Create a TimeseriesRecord from a TDF file.</p>\n", "bases": "labanalysis.frames.records.bodies.WholeBody"}, {"fullname": "labanalysis.frames.records.jumping.JumpExercise.__init__", "modulename": "labanalysis.frames.records.jumping", "qualname": "JumpExercise.__init__", "kind": "function", "doc": "<p>Initialize a Jump object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bodymass_kg</strong> (float):\nThe subject's body mass in kilograms.</li>\n<li><strong>left_foot_ground_reaction_force</strong> (ForcePlatform, optional):\nForcePlatform object for the left foot.</li>\n<li><strong>right_foot_ground_reaction_force</strong> (ForcePlatform, optional):\nForcePlatform object for the right foot.</li>\n<li><strong>vertical_axis</strong> (str, optional):\nName of the vertical axis in the force data (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nName of the anteroposterior axis in the force data (default \"X\").</li>\n<li><strong>**signals</strong> (Signal1D | Signal3D | EMGSignal | Point3D | ForcePlatform):\nAdditional signals to include in the record.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If left_foot or right_foot is not a ForcePlatform.</li>\n<li><strong>ValueError</strong>: If axes are not valid or bodymass_kg is not a float or int.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">bodymass_kg</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.jumping.JumpExercise.side", "modulename": "labanalysis.frames.records.jumping", "qualname": "JumpExercise.side", "kind": "variable", "doc": "<p>Returns which side(s) have force data.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: \"bilateral\", \"left\", or \"right\".</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.jumping.JumpExercise.bodymass_kg", "modulename": "labanalysis.frames.records.jumping", "qualname": "JumpExercise.bodymass_kg", "kind": "variable", "doc": "<p>Returns the subject's body mass in kilograms.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Body mass in kg.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.jumping.JumpExercise.jumps", "modulename": "labanalysis.frames.records.jumping", "qualname": "JumpExercise.jumps", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.jumping.JumpExercise.from_tdf", "modulename": "labanalysis.frames.records.jumping", "qualname": "JumpExercise.from_tdf", "kind": "function", "doc": "<p>Create a Jump object from a TDF file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nPath to the TDF file.</li>\n<li><strong>bodymass_kg</strong> (float or int):\nThe subject's body mass in kilograms.</li>\n<li><strong>vertical_axis</strong> (str, optional):\nName of the vertical axis in the force data.</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nName of the anteroposterior axis in the force data.</li>\n<li><strong>left_foot_ground_reaction_force</strong> (str or None, optional):\nKey for left foot force data.</li>\n<li><strong>right_foot_ground_reaction_force</strong> (str or None, optional):\nKey for right foot force data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Jump</strong>: A Jump object created from the TDF file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">bodymass_kg</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;left_foot&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;right_foot&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump", "kind": "class", "doc": "<p>Represents a single jump trial, providing methods and properties to analyze\nphases, forces, and performance metrics of the jump.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bodymass_kg</strong> (float):\nThe subject's body mass in kilograms.</li>\n<li><strong>left_foot_ground_reaction_force</strong> (ForcePlatform, optional):\nForcePlatform object for the left foot.</li>\n<li><strong>right_foot_ground_reaction_force</strong> (ForcePlatform, optional):\nForcePlatform object for the right foot.</li>\n<li><strong>vertical_axis</strong> (str, optional):\nName of the vertical axis in the force data (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nName of the anteroposterior axis in the force data (default \"X\").</li>\n<li><strong>**signals</strong> (Signal1D | Signal3D | EMGSignal | Point3D | ForcePlatform):\nAdditional signals to include in the record.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_bodymass_kg</strong> (float):\nThe subject's body mass in kilograms.</li>\n<li><strong>_vertical_axis</strong> (str):\nName of the vertical axis.</li>\n<li><strong>_antpos_axis</strong> (str):\nName of the anteroposterior axis.</li>\n</ul>\n\n<h6 id=\"properties\">Properties</h6>\n\n<p>vertical_axis : str\n    The vertical axis label.\nanteroposterior_axis : str\n    The anteroposterior axis label.\nlateral_axis : str\n    The lateral axis label.\nvertical_force : np.ndarray\n    The mean vertical ground reaction force across both feet.\nside : str\n    \"bilateral\", \"left\", or \"right\" depending on available force data.\nbodymass_kg : float\n    The subject's body mass in kilograms.\neccentric_phase : TimeseriesRecord\n    Data for the eccentric phase of the jump.\nconcentric_phase : TimeseriesRecord\n    Data for the concentric phase of the jump.\nflight_phase : TimeseriesRecord\n    Data for the flight phase of the jump.\ncontact_time_s : float\n    Duration of the contact phase (s).\nflight_time_s : float\n    Duration of the flight phase (s).\ntakeoff_velocity_ms : float\n    Takeoff velocity at the end of the concentric phase (m/s).\nelevation_cm : float\n    Jump elevation (cm) calculated from flight time.\nmuscle_coordination_and_balance : pd.DataFrame\n    Coordination and balance metrics from EMG signals (if available).\nforce_coordination_and_balance : pd.DataFrame\n    Coordination and balance metrics from force signals.\noutput_metrics : pd.DataFrame\n    Summary metrics for the jump.</p>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>__init__(...)\n    Initialize a Jump object.\nfrom_tdf(...)\n    Create a Jump object from a TDF file.</p>\n", "bases": "labanalysis.frames.records.bodies.WholeBody"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump.__init__", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump.__init__", "kind": "function", "doc": "<p>Initialize a Jump object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>bodymass_kg</strong> (float):\nThe subject's body mass in kilograms.</li>\n<li><strong>left_foot_ground_reaction_force</strong> (ForcePlatform, optional):\nForcePlatform object for the left foot.</li>\n<li><strong>right_foot_ground_reaction_force</strong> (ForcePlatform, optional):\nForcePlatform object for the right foot.</li>\n<li><strong>vertical_axis</strong> (str, optional):\nName of the vertical axis in the force data (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nName of the anteroposterior axis in the force data (default \"X\").</li>\n<li><strong>**signals</strong> (Signal1D | Signal3D | EMGSignal | Point3D | ForcePlatform):\nAdditional signals to include in the record.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: If left_foot or right_foot is not a ForcePlatform.</li>\n<li><strong>ValueError</strong>: If axes are not valid or bodymass_kg is not a float or int.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">bodymass_kg</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump.side", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump.side", "kind": "variable", "doc": "<p>Returns which side(s) have force data.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: \"bilateral\", \"left\", or \"right\".</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump.bodymass_kg", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump.bodymass_kg", "kind": "variable", "doc": "<p>Returns the subject's body mass in kilograms.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Body mass in kg.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump.contact_phase", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump.contact_phase", "kind": "variable", "doc": "<p>Returns the concentric phase of the jump.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: Data for the concentric phase.</li>\n</ul>\n\n<h6 id=\"procedure\">Procedure</h6>\n\n<ol>\n<li>get the longest countinuous batch with positive acceleration\nof S2 occurring before con_end.</li>\n<li>define 'con_start' as the last local minima in the vertical grf\noccurring before the beginning of the batch defined in 2.</li>\n<li>define 'con_end' as the end of the concentric phase as the time\ninstant immediately before the flight phase. Please look at the\nconcentric_phase documentation to have a detailed view about how\nit is detected.</li>\n</ol>\n"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump.flight_phase", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump.flight_phase", "kind": "variable", "doc": "<p>Returns the flight phase of the jump.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: Data for the flight phase.</li>\n</ul>\n\n<h6 id=\"procedure\">Procedure</h6>\n\n<ol>\n<li>get the longest batch with grf lower than 30N.</li>\n<li>define 'flight_start' as the first local minima occurring after\nthe start of the detected batch.</li>\n<li>define 'flight_end' as the last local minima occurring before the\nend of the detected batch.</li>\n</ol>\n"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump.contact_time_s", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump.contact_time_s", "kind": "variable", "doc": "<p>Returns the duration of the contact phase (eccentric + concentric).</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Contact time in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump.flight_time_s", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump.flight_time_s", "kind": "variable", "doc": "<p>Returns the duration of the flight phase.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Flight time in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump.takeoff_velocity_ms", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump.takeoff_velocity_ms", "kind": "variable", "doc": "<p>Returns the takeoff velocity at the end of the concentric phase.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Takeoff velocity in m/s.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump.elevation_cm", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump.elevation_cm", "kind": "variable", "doc": "<p>Returns the jump elevation in centimeters, calculated from flight time.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Jump elevation in cm.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump.output_metrics", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump.output_metrics", "kind": "variable", "doc": "<p>Returns summary metrics for the jump.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: DataFrame with summary metrics for the jump.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.jumping.SingleJump.from_tdf", "modulename": "labanalysis.frames.records.jumping", "qualname": "SingleJump.from_tdf", "kind": "function", "doc": "<p>Create a Jump object from a TDF file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nPath to the TDF file.</li>\n<li><strong>bodymass_kg</strong> (float or int):\nThe subject's body mass in kilograms.</li>\n<li><strong>vertical_axis</strong> (str, optional):\nName of the vertical axis in the force data.</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nName of the anteroposterior axis in the force data.</li>\n<li><strong>left_foot_ground_reaction_force</strong> (str or None, optional):\nKey for left foot force data.</li>\n<li><strong>right_foot_ground_reaction_force</strong> (str or None, optional):\nKey for right foot force data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Jump</strong>: A Jump object created from the TDF file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">bodymass_kg</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;left_foot&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;right_foot&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.locomotion", "modulename": "labanalysis.frames.records.locomotion", "kind": "module", "doc": "<p>gait library</p>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait", "modulename": "labanalysis.frames.records.locomotion.gait", "kind": "module", "doc": "<p>basic gait module</p>\n\n<p>This module provides classes and utilities for gait analysis, including\nGaitObject, GaitCycle, and GaitTest, which support kinematic and kinetic\ncycle detection, event extraction, and biofeedback summary generation.</p>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitExercise", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitExercise", "kind": "class", "doc": "<p>A dictionary-like container for Timeseries, TimeseriesRecord, and ForcePlatform objects,\nsupporting type filtering and DataFrame conversion.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vertical_axis</strong> (str, optional):\nThe label for the vertical axis (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nThe label for the anteroposterior axis (default \"Z\").</li>\n<li><strong>strip</strong> (bool, optional):\nIf True, remove leading/trailing rows or columns that are all NaN from all contained objects (default True).</li>\n<li><strong>reset_time</strong> (bool, optional):\nIf True, reset the time index to start at zero for all contained objects (default True).</li>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform to include in the record.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_vertical_axis</strong> (str):\nThe vertical axis label.</li>\n<li><strong>_antpos_axis</strong> (str):\nThe anteroposterior axis label.</li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>copy()\n    Return a deep copy of the TimeseriesRecord.\nstrip(axis=0, inplace=False)\n    Remove leading/trailing rows or columns that are all NaN from all contained objects.\nreset_time(inplace=False)\n    Reset the time index to start at zero for all contained objects.\napply(func, axis=0, inplace=False, *args, **kwargs)\n    Apply a function or ProcessingPipeline to all contained objects.\nfillna(value=None, n_regressors=None, inplace=False)\n    Fill NaNs for all contained objects.\nto_dataframe()\n    Convert the record to a pandas DataFrame with MultiIndex columns.\nfrom_tdf(filename)\n    Create a TimeseriesRecord from a TDF file.</p>\n", "bases": "GaitObject"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitExercise.__init__", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitExercise.__init__", "kind": "function", "doc": "<p>Initialize a GaitTest.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}):\nThe cycle detection algorithm.</li>\n<li><strong>left_heel</strong> (Point3D or None):\nMarker data for the left heel.</li>\n<li><strong>right_heel</strong> (Point3D or None):\nMarker data for the right heel.</li>\n<li><strong>left_toe</strong> (Point3D or None):\nMarker data for the left toe.</li>\n<li><strong>right_toe</strong> (Point3D or None):\nMarker data for the right toe.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None):\nMarker data for the left metatarsal head.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None):\nMarker data for the right metatarsal head.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>process_inputs</strong> (bool, optional):\nIf True, the ProcessPipeline integrated within this instance is\napplied. Otherwise raw data are retained.</li>\n<li><strong>**extra_signals</strong> (Signal1D, Signal3D, EMGSignal, Point3D, ForcePlatform):\nAdditional signals to include.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitExercise.cycles", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitExercise.cycles", "kind": "variable", "doc": "<p>Get the detected gait cycles.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of GaitCycle</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitExercise.from_tdf", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitExercise.from_tdf", "kind": "function", "doc": "<p>Generate a GaitTest object directly from a .tdf file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nPath to a \".tdf\" file.</li>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}, optional):\nThe cycle detection algorithm.</li>\n<li><strong>left_heel</strong> (str or None, optional):\nName of the left heel marker in the tdf file.</li>\n<li><strong>right_heel</strong> (str or None, optional):\nName of the right heel marker in the tdf file.</li>\n<li><strong>left_toe</strong> (str or None, optional):\nName of the left toe marker in the tdf file.</li>\n<li><strong>right_toe</strong> (str or None, optional):\nName of the right toe marker in the tdf file.</li>\n<li><strong>left_metatarsal_head</strong> (str or None, optional):\nName of the left metatarsal head marker in the tdf file.</li>\n<li><strong>right_metatarsal_head</strong> (str or None, optional):\nName of the right metatarsal head marker in the tdf file.</li>\n<li><strong>ground_reaction_force</strong> (str or None, optional):\nName of the ground reaction force data in the tdf file.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>process_inputs</strong> (bool, optional):\nIf True, the ProcessPipeline integrated within this instance is\napplied. Otherwise raw data are retained.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>GaitTest</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematics&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitExercise.to_plotly_figure", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitExercise.to_plotly_figure", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle", "kind": "class", "doc": "<p>Basic gait cycle class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>side</strong> ({'left', 'right'}):\nThe side of the cycle.</li>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}):\nThe cycle detection algorithm.</li>\n<li><strong>left_heel</strong> (Point3D or None):\nMarker data for the left heel.</li>\n<li><strong>right_heel</strong> (Point3D or None):\nMarker data for the right heel.</li>\n<li><strong>left_toe</strong> (Point3D or None):\nMarker data for the left toe.</li>\n<li><strong>right_toe</strong> (Point3D or None):\nMarker data for the right toe.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None):\nMarker data for the left metatarsal head.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None):\nMarker data for the right metatarsal head.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>**extra_signals</strong> (Signal1D, Signal3D, EMGSignal, Point3D, ForcePlatform):\nAdditional signals to include.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The cycle starts from the toeoff and ends at the next toeoff of the same foot.</p>\n", "bases": "GaitObject"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.__init__", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.__init__", "kind": "function", "doc": "<p>Initialize a GaitCycle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>side</strong> ({'left', 'right'}):\nThe side of the cycle.</li>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}):\nThe cycle detection algorithm.</li>\n<li><strong>left_heel</strong> (Point3D or None):\nMarker data for the left heel.</li>\n<li><strong>right_heel</strong> (Point3D or None):\nMarker data for the right heel.</li>\n<li><strong>left_toe</strong> (Point3D or None):\nMarker data for the left toe.</li>\n<li><strong>right_toe</strong> (Point3D or None):\nMarker data for the right toe.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None):\nMarker data for the left metatarsal head.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None):\nMarker data for the right metatarsal head.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>**extra_signals</strong> (Signal1D, Signal3D, EMGSignal, Point3D, ForcePlatform):\nAdditional signals to include.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.side", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.side", "kind": "variable", "doc": "<p>Return the side of the cycle.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.init_s", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.init_s", "kind": "variable", "doc": "<p>Return the first toeoff time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.end_s", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.end_s", "kind": "variable", "doc": "<p>Return the toeoff time corresponding to the end of the cycle in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.cycle_time_s", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.cycle_time_s", "kind": "variable", "doc": "<p>Return the cycle time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.footstrike_s", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.footstrike_s", "kind": "variable", "doc": "<p>Return the foot-strike time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.midstance_s", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.midstance_s", "kind": "variable", "doc": "<p>Return the mid-stance time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.time_events", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.time_events", "kind": "variable", "doc": "<p>Return all the time events defining the cycle.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.lateral_displacement", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.lateral_displacement", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.vertical_displacement", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.vertical_displacement", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.peak_force", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.peak_force", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.output_metrics", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.output_metrics", "kind": "variable", "doc": "<p>Returns summary metrics for the jump.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: DataFrame with summary metrics for the jump.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.set_algorithm", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.set_algorithm", "kind": "function", "doc": "<p>Set the gait cycle detection algorithm.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}):\nAlgorithm label.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitCycle.set_side", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitCycle.set_side", "kind": "function", "doc": "<p>Set the cycle side.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>side</strong> ({'left', 'right'}):</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;right&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitObject", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitObject", "kind": "class", "doc": "<p>A dictionary-like container for Timeseries, TimeseriesRecord, and ForcePlatform objects,\nsupporting type filtering and DataFrame conversion.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vertical_axis</strong> (str, optional):\nThe label for the vertical axis (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nThe label for the anteroposterior axis (default \"Z\").</li>\n<li><strong>strip</strong> (bool, optional):\nIf True, remove leading/trailing rows or columns that are all NaN from all contained objects (default True).</li>\n<li><strong>reset_time</strong> (bool, optional):\nIf True, reset the time index to start at zero for all contained objects (default True).</li>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform to include in the record.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_vertical_axis</strong> (str):\nThe vertical axis label.</li>\n<li><strong>_antpos_axis</strong> (str):\nThe anteroposterior axis label.</li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>copy()\n    Return a deep copy of the TimeseriesRecord.\nstrip(axis=0, inplace=False)\n    Remove leading/trailing rows or columns that are all NaN from all contained objects.\nreset_time(inplace=False)\n    Reset the time index to start at zero for all contained objects.\napply(func, axis=0, inplace=False, *args, **kwargs)\n    Apply a function or ProcessingPipeline to all contained objects.\nfillna(value=None, n_regressors=None, inplace=False)\n    Fill NaNs for all contained objects.\nto_dataframe()\n    Convert the record to a pandas DataFrame with MultiIndex columns.\nfrom_tdf(filename)\n    Create a TimeseriesRecord from a TDF file.</p>\n", "bases": "labanalysis.frames.records.bodies.WholeBody"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitObject.__init__", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitObject.__init__", "kind": "function", "doc": "<p>Initialize a GaitObject.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}):\nThe cycle detection algorithm to use.</li>\n<li><strong>left_heel</strong> (Point3D or None, optional):\nLeft heel marker data.</li>\n<li><strong>right_heel</strong> (Point3D or None, optional):\nRight heel marker data.</li>\n<li><strong>left_toe</strong> (Point3D or None, optional):\nLeft toe marker data.</li>\n<li><strong>right_toe</strong> (Point3D or None, optional):\nRight toe marker data.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None, optional):\nLeft metatarsal head marker data.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None, optional):\nRight metatarsal head marker data.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>**extra_signals</strong> (Signal1D, Signal3D, EMGSignal, Point3D, ForcePlatform):\nAdditional signals to include.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitObject.algorithm", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitObject.algorithm", "kind": "variable", "doc": "<p>Get the selected cycle detection algorithm.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: The algorithm label.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitObject.ground_reaction_force_threshold", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitObject.ground_reaction_force_threshold", "kind": "variable", "doc": "<p>Get the ground reaction force threshold.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitObject.height_threshold", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitObject.height_threshold", "kind": "variable", "doc": "<p>Get the height threshold.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitObject.set_grf_threshold", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitObject.set_grf_threshold", "kind": "function", "doc": "<p>Set the ground reaction force threshold.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>threshold</strong> (float or int):\nThreshold value.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitObject.set_height_threshold", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitObject.set_height_threshold", "kind": "function", "doc": "<p>Set the height threshold.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>threshold</strong> (float or int):\nThreshold value.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.locomotion.gait.GaitObject.set_algorithm", "modulename": "labanalysis.frames.records.locomotion.gait", "qualname": "GaitObject.set_algorithm", "kind": "function", "doc": "<p>Set the gait cycle detection algorithm.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}):\nAlgorithm label.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.locomotion.running", "modulename": "labanalysis.frames.records.locomotion.running", "kind": "module", "doc": "<p>Module for running test analysis.</p>\n\n<p>This module defines classes for performing running test analysis,\nincluding step detection and summary plots.</p>\n"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningExercise", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningExercise", "kind": "class", "doc": "<p>Represents a running test.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>frame</strong> (StateFrame):\nA stateframe object containing all the available kinematic, kinetic\nand EMG data related to the test.</li>\n<li><strong>algorithm</strong> (Literal['kinematics', 'kinetics'], optional):\nAlgorithm used for gait cycle detection. 'kinematics' uses marker data,\n'kinetics' uses force platform data.</li>\n<li><strong>left_heel</strong> (Point3D or None, optional):\nThe left heel marker data.</li>\n<li><strong>right_heel</strong> (Point3D or None, optional):\nThe right heel marker data.</li>\n<li><strong>left_toe</strong> (Point3D or None, optional):\nThe left toe marker data.</li>\n<li><strong>right_toe</strong> (Point3D or None, optional):\nThe right toe marker data.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None, optional):\nThe left metatarsal head marker data.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None, optional):\nThe right metatarsal head marker data.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None, optional):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> (Literal['X', 'Y', 'Z'], optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> (Literal['X', 'Y', 'Z'], optional):\nThe anterior-posterior axis.</li>\n</ul>\n", "bases": "labanalysis.frames.records.locomotion.gait.GaitExercise"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningExercise.__init__", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningExercise.__init__", "kind": "function", "doc": "<p>Initialize a RunningTest instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}, optional):\nAlgorithm used for gait cycle detection. 'kinematics' uses marker data, 'kinetics' uses force platform data.</li>\n<li><strong>left_heel, right_heel, left_toe, right_toe</strong> (Point3D or None, optional):\nMarker data for the respective anatomical points.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None, optional):\nMarker data for the left metatarsal head.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None, optional):\nMarker data for the right metatarsal head.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None, optional):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>process_inputs</strong> (bool, optional):\nIf True, process the input data.</li>\n<li><strong>**extra_signals</strong> (Signal1D, Signal3D, EMGSignal, Point3D, ForcePlatform):\nAdditional signals to include.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematics&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningStep", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningStep", "kind": "class", "doc": "<p>Basic gait cycle class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>side</strong> ({'left', 'right'}):\nThe side of the cycle.</li>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}):\nThe cycle detection algorithm.</li>\n<li><strong>left_heel</strong> (Point3D or None):\nMarker data for the left heel.</li>\n<li><strong>right_heel</strong> (Point3D or None):\nMarker data for the right heel.</li>\n<li><strong>left_toe</strong> (Point3D or None):\nMarker data for the left toe.</li>\n<li><strong>right_toe</strong> (Point3D or None):\nMarker data for the right toe.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None):\nMarker data for the left metatarsal head.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None):\nMarker data for the right metatarsal head.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>**extra_signals</strong> (Signal1D, Signal3D, EMGSignal, Point3D, ForcePlatform):\nAdditional signals to include.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The cycle starts from the toeoff and ends at the next toeoff of the same foot.</p>\n", "bases": "labanalysis.frames.records.locomotion.gait.GaitCycle"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningStep.__init__", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningStep.__init__", "kind": "function", "doc": "<p>Initialize a GaitCycle.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>side</strong> ({'left', 'right'}):\nThe side of the cycle.</li>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}):\nThe cycle detection algorithm.</li>\n<li><strong>left_heel</strong> (Point3D or None):\nMarker data for the left heel.</li>\n<li><strong>right_heel</strong> (Point3D or None):\nMarker data for the right heel.</li>\n<li><strong>left_toe</strong> (Point3D or None):\nMarker data for the left toe.</li>\n<li><strong>right_toe</strong> (Point3D or None):\nMarker data for the right toe.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None):\nMarker data for the left metatarsal head.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None):\nMarker data for the right metatarsal head.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>**extra_signals</strong> (Signal1D, Signal3D, EMGSignal, Point3D, ForcePlatform):\nAdditional signals to include.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;right&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningStep.flight_phase", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningStep.flight_phase", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningStep.contact_phase", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningStep.contact_phase", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningStep.loading_response_phase", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningStep.loading_response_phase", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningStep.propulsion_phase", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningStep.propulsion_phase", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningStep.flight_time_s", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningStep.flight_time_s", "kind": "variable", "doc": "<p>Get the flight time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The flight time in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningStep.loadingresponse_time_s", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningStep.loadingresponse_time_s", "kind": "variable", "doc": "<p>Get the loading response time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The loading response time in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningStep.propulsion_time_s", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningStep.propulsion_time_s", "kind": "variable", "doc": "<p>Get the propulsion time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The propulsion time in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.running.RunningStep.contact_time_s", "modulename": "labanalysis.frames.records.locomotion.running", "qualname": "RunningStep.contact_time_s", "kind": "variable", "doc": "<p>Get the contact time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The contact time in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking", "modulename": "labanalysis.frames.records.locomotion.walking", "kind": "module", "doc": "<p>Module for running test analysis.</p>\n\n<p>This module defines classes for performing running test analysis,\nincluding step detection and summary plots.</p>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingExercise", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingExercise", "kind": "class", "doc": "<p>Represents a walking test.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>frame</strong> (StateFrame):\nA stateframe object containing all the available kinematic, kinetic and EMG data related to the test.</li>\n<li><strong>algorithm</strong> (Literal['kinematics', 'kinetics'], optional):\nAlgorithm used for gait cycle detection. 'kinematics' uses marker data, 'kinetics' uses force platform data.</li>\n<li><strong>left_heel</strong> (Point3D or None, optional):\nThe left heel marker data.</li>\n<li><strong>right_heel</strong> (Point3D or None, optional):\nThe right heel marker data.</li>\n<li><strong>left_toe</strong> (Point3D or None, optional):\nThe left toe marker data.</li>\n<li><strong>right_toe</strong> (Point3D or None, optional):\nThe right toe marker data.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None, optional):\nThe left metatarsal head marker data.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None, optional):\nThe right metatarsal head marker data.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None, optional):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> (Literal['X', 'Y', 'Z'], optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> (Literal['X', 'Y', 'Z'], optional):\nThe anterior-posterior axis.</li>\n</ul>\n", "bases": "labanalysis.frames.records.locomotion.gait.GaitExercise"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingExercise.__init__", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingExercise.__init__", "kind": "function", "doc": "<p>Initialize a WalkingTest instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}, optional):\nAlgorithm used for gait cycle detection. 'kinematics' uses marker data, 'kinetics' uses force platform data.</li>\n<li><strong>left_heel</strong> (Point3D or None, optional):\nMarker data for the left heel.</li>\n<li><strong>right_heel</strong> (Point3D or None, optional):\nMarker data for the right heel.</li>\n<li><strong>left_toe</strong> (Point3D or None, optional):\nMarker data for the left toe.</li>\n<li><strong>right_toe</strong> (Point3D or None, optional):\nMarker data for the right toe.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None, optional):\nMarker data for the left metatarsal head.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None, optional):\nMarker data for the right metatarsal head.</li>\n<li><strong>grf</strong> (ForcePlatform or None, optional):\nGround reaction force data.</li>\n<li><strong>grf_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>process_inputs</strong> (bool, optional):\nIf True, process the input data.</li>\n<li><strong>**extra_signals</strong> (Signal1D, Signal3D, EMGSignal, Point3D, ForcePlatform):\nAdditional signals to include.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematics&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride", "kind": "class", "doc": "<p>Represents a single walking stride.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>side</strong> (Literal['left', 'right']):\nThe side of the cycle.</li>\n<li><strong>frame</strong> (StateFrame):\nA stateframe object containing all the available kinematic, kinetic and EMG data related to the cycle.</li>\n<li><strong>algorithm</strong> (Literal['kinematics', 'kinetics'], optional):\nAlgorithm used for gait cycle detection. 'kinematics' uses marker data, 'kinetics' uses force platform data.</li>\n<li><strong>left_heel</strong> (Point3D or None, optional):\nThe left heel marker data.</li>\n<li><strong>right_heel</strong> (Point3D or None, optional):\nThe right heel marker data.</li>\n<li><strong>left_toe</strong> (Point3D or None, optional):\nThe left toe marker data.</li>\n<li><strong>right_toe</strong> (Point3D or None, optional):\nThe right toe marker data.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None, optional):\nThe left metatarsal head marker data.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None, optional):\nThe right metatarsal head marker data.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None, optional):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> (Literal['X', 'Y', 'Z'], optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> (Literal['X', 'Y', 'Z'], optional):\nThe anterior-posterior axis.</li>\n</ul>\n\n<h6 id=\"note\">Note</h6>\n\n<p>The cycle starts from the toe-off and ends at the next toe-off of the same foot.</p>\n", "bases": "labanalysis.frames.records.locomotion.gait.GaitCycle"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.__init__", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.__init__", "kind": "function", "doc": "<p>Initialize a WalkingStride instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>side</strong> ({'left', 'right'}):\nThe side of the cycle.</li>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}):\nThe cycle detection algorithm.</li>\n<li><strong>left_heel</strong> (Point3D or None, optional):\nMarker data for the left heel.</li>\n<li><strong>right_heel</strong> (Point3D or None, optional):\nMarker data for the right heel.</li>\n<li><strong>left_toe</strong> (Point3D or None, optional):\nMarker data for the left toe.</li>\n<li><strong>right_toe</strong> (Point3D or None, optional):\nMarker data for the right toe.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None, optional):\nMarker data for the left metatarsal head.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None, optional):\nMarker data for the right metatarsal head.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None, optional):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>**extra_signals</strong> (Signal1D, Signal3D, EMGSignal, Point3D, ForcePlatform):\nAdditional signals to include.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematics&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.swing_phase", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.swing_phase", "kind": "variable", "doc": "<p>Get the TimeseriesRecord corresponding to the swing phase of the step.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: The TimeseriesRecord for the swing phase.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.stance_phase", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.stance_phase", "kind": "variable", "doc": "<p>Get the TimeseriesRecord corresponding to the contact phase.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: The TimeseriesRecord for the contact phase.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.swing_time_s", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.swing_time_s", "kind": "variable", "doc": "<p>Get the swing time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The swing time in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.stance_time_s", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.stance_time_s", "kind": "variable", "doc": "<p>Get the stance time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The stance time in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.opposite_footstrike_s", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.opposite_footstrike_s", "kind": "variable", "doc": "<p>Get the time corresponding to the footstrike of the opposite leg.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The time of the opposite footstrike in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.first_double_support_phase", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.first_double_support_phase", "kind": "variable", "doc": "<p>Get the TimeseriesRecord corresponding to the first double support phase.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: The TimeseriesRecord for the first double support phase.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.first_double_support_time_s", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.first_double_support_time_s", "kind": "variable", "doc": "<p>Get the first double support time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The first double support time in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.second_double_support_phase", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.second_double_support_phase", "kind": "variable", "doc": "<p>Get the TimeseriesRecord corresponding to the second double support phase.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: The TimeseriesRecord for the second double support phase.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.second_double_support_time_s", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.second_double_support_time_s", "kind": "variable", "doc": "<p>Get the second double support time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The second double support time in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.single_support_phase", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.single_support_phase", "kind": "variable", "doc": "<p>Get the TimeseriesRecord corresponding to the single support phase.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: The TimeseriesRecord for the single support phase.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.locomotion.walking.WalkingStride.single_support_time_s", "modulename": "labanalysis.frames.records.locomotion.walking", "qualname": "WalkingStride.single_support_time_s", "kind": "variable", "doc": "<p>Get the single support time in seconds.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The single support time in seconds.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.records", "modulename": "labanalysis.frames.records.records", "kind": "module", "doc": "<p>record module</p>\n"}, {"fullname": "labanalysis.frames.records.records.Record", "modulename": "labanalysis.frames.records.records", "qualname": "Record", "kind": "class", "doc": "<p>A dictionary-like container for Timeseries,\nsupporting type filtering and DataFrame conversion.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vertical_axis</strong> (str, optional):\nThe label for the vertical axis (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nThe label for the anteroposterior axis (default \"Z\").</li>\n<li><strong>strip</strong> (bool, optional):\nIf True, remove leading/trailing rows or columns that are all NaN from all contained objects (default True).</li>\n<li><strong>reset_time</strong> (bool, optional):\nIf True, reset the time index to start at zero for all contained objects (default True).</li>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform to include in the record.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_vertical_axis</strong> (str):\nThe vertical axis label.</li>\n<li><strong>_antpos_axis</strong> (str):\nThe anteroposterior axis label.</li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>copy()\n    Return a deep copy of the TimeseriesRecord.\nstrip(axis=0, inplace=False)\n    Remove leading/trailing rows or columns that are all NaN from all contained objects.\nreset_time(inplace=False)\n    Reset the time index to start at zero for all contained objects.\napply(func, axis=0, inplace=False, *args, **kwargs)\n    Apply a function or ProcessingPipeline to all contained objects.\nfillna(value=None, n_regressors=None, inplace=False)\n    Fill NaNs for all contained objects.\nto_dataframe()\n    Convert the record to a pandas DataFrame with MultiIndex columns.\nfrom_tdf(filename)\n    Create a TimeseriesRecord from a TDF file.</p>\n"}, {"fullname": "labanalysis.frames.records.records.Record.__init__", "modulename": "labanalysis.frames.records.records", "qualname": "Record.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">Timeseries</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.records.Record.index", "modulename": "labanalysis.frames.records.records", "qualname": "Record.index", "kind": "variable", "doc": "<p>Get the index shared across all elements in the record.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>1D numpy array of floats</strong>: A sorted, unique array of all time indices.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.records.Record.shape", "modulename": "labanalysis.frames.records.records", "qualname": "Record.shape", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.records.Record.items", "modulename": "labanalysis.frames.records.records", "qualname": "Record.items", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.records.Record.keys", "modulename": "labanalysis.frames.records.records", "qualname": "Record.keys", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.records.Record.values", "modulename": "labanalysis.frames.records.records", "qualname": "Record.values", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.records.Record.to_dataframe", "modulename": "labanalysis.frames.records.records", "qualname": "Record.to_dataframe", "kind": "function", "doc": "<p>Convert the record to a pandas DataFrame with MultiIndex columns.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: A DataFrame containing all the data from the TimeseriesRecord.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.records.Record.copy", "modulename": "labanalysis.frames.records.records", "qualname": "Record.copy", "kind": "function", "doc": "<p>Return a deep copy of the TimeseriesRecord.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: A new TimeseriesRecord object with the same data.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.records.Record.strip", "modulename": "labanalysis.frames.records.records", "qualname": "Record.strip", "kind": "function", "doc": "<p>Remove leading/trailing rows or columns that are all NaN from all\ncontained Timeseries-like objects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>inplace</strong> (bool, optional):\nIf True, modifies in place. If False, returns a new TimeseriesRecord.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord or None</strong>: Stripped TimeseriesRecord if inplace is False, otherwise None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.records.Record.reset_time", "modulename": "labanalysis.frames.records.records", "qualname": "Record.reset_time", "kind": "function", "doc": "<p>Reset the time index to start at zero for all contained Timeseries-like\nobjects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>inplace</strong> (bool, optional):\nIf True, modify in place. If False, return a new TimeseriesRecord.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord or None</strong>: A TimeseriesRecord with reset time if inplace is False, otherwise\nNone.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">time_zero</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.records.Record.fillna", "modulename": "labanalysis.frames.records.records", "qualname": "Record.fillna", "kind": "function", "doc": "<p>Return a copy with NaNs replaced by the specified value or using\nadvanced imputation for all contained objects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (float or int or None, optional):\nValue to use for NaNs. If None, use interpolation or regression.</li>\n<li><strong>n_regressors</strong> (int or None, optional):\nNumber of regressors to use for regression-based imputation.\nIf None, use cubic spline interpolation.</li>\n<li><strong>inplace</strong> (bool, optional):\nIf True, fill in place. If False, return a new object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: Filled record.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">n_regressors</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.records.Record.get", "modulename": "labanalysis.frames.records.records", "qualname": "Record.get", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.records.Record.drop", "modulename": "labanalysis.frames.records.records", "qualname": "Record.drop", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">key</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.records.Record.to_plotly_figure", "modulename": "labanalysis.frames.records.records", "qualname": "Record.to_plotly_figure", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.timeseriesrecord", "modulename": "labanalysis.frames.records.timeseriesrecord", "kind": "module", "doc": "<p>timeseries record module</p>\n"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord", "kind": "class", "doc": "<p>A dictionary-like container for Timeseries, TimeseriesRecord, and ForcePlatform objects,\nsupporting type filtering and DataFrame conversion.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vertical_axis</strong> (str, optional):\nThe label for the vertical axis (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nThe label for the anteroposterior axis (default \"Z\").</li>\n<li><strong>strip</strong> (bool, optional):\nIf True, remove leading/trailing rows or columns that are all NaN from all contained objects (default True).</li>\n<li><strong>reset_time</strong> (bool, optional):\nIf True, reset the time index to start at zero for all contained objects (default True).</li>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform to include in the record.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_vertical_axis</strong> (str):\nThe vertical axis label.</li>\n<li><strong>_antpos_axis</strong> (str):\nThe anteroposterior axis label.</li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>copy()\n    Return a deep copy of the TimeseriesRecord.\nstrip(axis=0, inplace=False)\n    Remove leading/trailing rows or columns that are all NaN from all contained objects.\nreset_time(inplace=False)\n    Reset the time index to start at zero for all contained objects.\napply(func, axis=0, inplace=False, *args, **kwargs)\n    Apply a function or ProcessingPipeline to all contained objects.\nfillna(value=None, n_regressors=None, inplace=False)\n    Fill NaNs for all contained objects.\nto_dataframe()\n    Convert the record to a pandas DataFrame with MultiIndex columns.\nfrom_tdf(filename)\n    Create a TimeseriesRecord from a TDF file.</p>\n", "bases": "labanalysis.frames.records.records.Record"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.__init__", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">Timeseries</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.vertical_axis", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.vertical_axis", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.anteroposterior_axis", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.anteroposterior_axis", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.lateral_axis", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.lateral_axis", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.points3d", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.points3d", "kind": "variable", "doc": "<p>Get all Point3D objects.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.signals3d", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.signals3d", "kind": "variable", "doc": "<p>Get all Signal3D objects.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.signals1d", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.signals1d", "kind": "variable", "doc": "<p>Get all Signal1D objects.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.emgsignals", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.emgsignals", "kind": "variable", "doc": "<p>Get all EMGSignal objects.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.forceplatforms", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.forceplatforms", "kind": "variable", "doc": "<p>Get all ForcePlatform objects.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong></li>\n</ul>\n"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.resultant_force", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.resultant_force", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.change_reference_frame", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.change_reference_frame", "kind": "function", "doc": "<p>Rotate and translate each sample using the new reference frame defined by\northonormal versors new_x, new_y, new_z and origin new_origin.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>new_x, new_y, new_z</strong> (array-like):\nOrthonormal basis vectors.</li>\n<li><strong>new_origin</strong> (array-like):\nNew origin.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: Transformed signal.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If input vectors are not valid.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>rotations are applied only to 3D objects like Signal3D, Point3D and\nForcePlatform(s)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">new_x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">new_y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">new_z</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">new_origin</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.records.timeseriesrecord.TimeseriesRecord.from_tdf", "modulename": "labanalysis.frames.records.timeseriesrecord", "qualname": "TimeseriesRecord.from_tdf", "kind": "function", "doc": "<p>Create a TimeseriesRecord from a TDF file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong> (str):\nPath to the TDF file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: A TimeseriesRecord populated with the data from the TDF file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.timeseries", "modulename": "labanalysis.frames.timeseries", "kind": "module", "doc": "<p>timeseries library</p>\n"}, {"fullname": "labanalysis.frames.timeseries.emgsignal", "modulename": "labanalysis.frames.timeseries.emgsignal", "kind": "module", "doc": "<p>emgsignal module</p>\n"}, {"fullname": "labanalysis.frames.timeseries.emgsignal.EMGSignal", "modulename": "labanalysis.frames.timeseries.emgsignal", "qualname": "EMGSignal", "kind": "class", "doc": "<p>A 1D EMG signal, automatically converted to microvolts (uV).</p>\n", "bases": "labanalysis.frames.timeseries.signal1d.Signal1D"}, {"fullname": "labanalysis.frames.timeseries.emgsignal.EMGSignal.__init__", "modulename": "labanalysis.frames.timeseries.emgsignal", "qualname": "EMGSignal.__init__", "kind": "function", "doc": "<p>Initialize an EMGSignal.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (array-like):\n2D data array with one column.</li>\n<li><strong>index</strong> (list of float):\nTime values.</li>\n<li><strong>muscle_name</strong> (str):\nName of the muscle.</li>\n<li><strong>side</strong> ({'left', 'right', 'bilateral'}):\nSide of the body.</li>\n<li><strong>unit</strong> (str or pint.Quantity, optional):\nUnit of measurement for the data, by default \"uV\".</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If unit is not valid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span>,</span><span class=\"param\">\t<span class=\"n\">index</span>,</span><span class=\"param\">\t<span class=\"n\">muscle_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">Quantity</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;uV&#39;</span></span>)</span>"}, {"fullname": "labanalysis.frames.timeseries.emgsignal.EMGSignal.side", "modulename": "labanalysis.frames.timeseries.emgsignal", "qualname": "EMGSignal.side", "kind": "variable", "doc": "<p>Get the side of the body.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>{'left', 'right', 'bilateral'}</strong>: The side of the body.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.timeseries.emgsignal.EMGSignal.muscle_name", "modulename": "labanalysis.frames.timeseries.emgsignal", "qualname": "EMGSignal.muscle_name", "kind": "variable", "doc": "<p>Get the name of the muscle.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: The name of the muscle.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.timeseries.point3d", "modulename": "labanalysis.frames.timeseries.point3d", "kind": "module", "doc": "<p>point3d module</p>\n"}, {"fullname": "labanalysis.frames.timeseries.point3d.Point3D", "modulename": "labanalysis.frames.timeseries.point3d", "qualname": "Point3D", "kind": "class", "doc": "<p>A 3D point time series, automatically converted to meters (m).</p>\n", "bases": "labanalysis.frames.timeseries.signal3d.Signal3D"}, {"fullname": "labanalysis.frames.timeseries.point3d.Point3D.__init__", "modulename": "labanalysis.frames.timeseries.point3d", "qualname": "Point3D.__init__", "kind": "function", "doc": "<p>Initialize a Point3D.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (array-like):\n2D data array with three columns.</li>\n<li><strong>index</strong> (list of float):\nTime values.</li>\n<li><strong>unit</strong> (str or pint.Quantity, optional):\nUnit of measurement for the data, by default \"m\".</li>\n<li><strong>columns</strong> (list, optional):\nColumn labels, must be 'X', 'Y', 'Z', by default [\"X\", \"Y\", \"Z\"].</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If units are not valid or not unique.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">Annotated</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]],</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,)]]</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">Quantity</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;m&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">columns</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">str_</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;X&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Z&#39;</span><span class=\"p\">]</span></span>)</span>"}, {"fullname": "labanalysis.frames.timeseries.signal1d", "modulename": "labanalysis.frames.timeseries.signal1d", "kind": "module", "doc": "<p>signal1d module</p>\n"}, {"fullname": "labanalysis.frames.timeseries.signal1d.Signal1D", "modulename": "labanalysis.frames.timeseries.signal1d", "qualname": "Signal1D", "kind": "class", "doc": "<p>A 1D signal (single column) time series.</p>\n", "bases": "labanalysis.frames.timeseries.timeseries.Timeseries"}, {"fullname": "labanalysis.frames.timeseries.signal1d.Signal1D.__init__", "modulename": "labanalysis.frames.timeseries.signal1d", "qualname": "Signal1D.__init__", "kind": "function", "doc": "<p>Initialize a Signal1D.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (array-like):\n2D data array with one column.</li>\n<li><strong>index</strong> (list of float):\nTime values.</li>\n<li><strong>unit</strong> (str or pint.Quantity):\nUnit of measurement for the data.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If data does not have exactly one column.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">Quantity</span></span>)</span>"}, {"fullname": "labanalysis.frames.timeseries.signal3d", "modulename": "labanalysis.frames.timeseries.signal3d", "kind": "module", "doc": "<p>signal3d module</p>\n"}, {"fullname": "labanalysis.frames.timeseries.signal3d.Signal3D", "modulename": "labanalysis.frames.timeseries.signal3d", "qualname": "Signal3D", "kind": "class", "doc": "<p>A 3D signal (three columns: X, Y, Z) time series.</p>\n", "bases": "labanalysis.frames.timeseries.timeseries.Timeseries"}, {"fullname": "labanalysis.frames.timeseries.signal3d.Signal3D.__init__", "modulename": "labanalysis.frames.timeseries.signal3d", "qualname": "Signal3D.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">unit</span><span class=\"p\">:</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">Quantity</span> <span class=\"o\">|</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">columns</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">str_</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">&#39;X&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Y&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;Z&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">vertical_axis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Y&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">anteroposterior_axis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Z&#39;</span></span>)</span>"}, {"fullname": "labanalysis.frames.timeseries.signal3d.Signal3D.vertical_axis", "modulename": "labanalysis.frames.timeseries.signal3d", "qualname": "Signal3D.vertical_axis", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.timeseries.signal3d.Signal3D.anteroposterior_axis", "modulename": "labanalysis.frames.timeseries.signal3d", "qualname": "Signal3D.anteroposterior_axis", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.timeseries.signal3d.Signal3D.lateral_axis", "modulename": "labanalysis.frames.timeseries.signal3d", "qualname": "Signal3D.lateral_axis", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.timeseries.signal3d.Signal3D.change_reference_frame", "modulename": "labanalysis.frames.timeseries.signal3d", "qualname": "Signal3D.change_reference_frame", "kind": "function", "doc": "<p>Rotate and translate each sample using the new reference frame defined by\northonormal versors new_x, new_y, new_z and origin new_origin.</p>\n\n<p>A point can be aligned to this reference frame by:\n    new = np.einsum(\"nij,nj->ni\", R, old - O)</p>\n\n<p>Where R is the rotation matrix (N, 3, 3) and O (N, 3) is the origin of\nthe reference frame.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>new_x, new_y, new_z</strong> (array-like):\nOrthonormal basis vectors.</li>\n<li><strong>new_origin</strong> (array-like):\nNew origin.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Signal3D</strong>: Transformed signal.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If input vectors are not valid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">new_x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">new_y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">new_z</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">new_origin</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.timeseries.timeseries", "modulename": "labanalysis.frames.timeseries.timeseries", "kind": "module", "doc": "<p>timeseries module</p>\n"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.__init__", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">Annotated</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]],</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,)]</span>,</span><span class=\"param\">\t<span class=\"n\">index</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">columns</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">str_</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">Quantity</span></span>)</span>"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.index", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.index", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[tuple[typing.Any, ...], numpy.dtype[numpy.floating]]"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.columns", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.columns", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray[tuple[typing.Any, ...], numpy.dtype[numpy.str_]]"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.ix", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.ix", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.unit", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.unit", "kind": "variable", "doc": "<p>Get the unit of measurement.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: The unit of measurement.</li>\n</ul>\n"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.shape", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.shape", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.set_unit", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.set_unit", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">pint</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">Quantity</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.to_dataframe", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.to_dataframe", "kind": "function", "doc": "<p>Convert to a pandas DataFrame.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: DataFrame representation.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.strip", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.strip", "kind": "function", "doc": "<p>Remove leading/trailing rows or columns that are all NaN from all\ncontained Timeseries-like objects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>inplace</strong> (bool, optional):\nIf True, modifies in place. If False, returns a new TimeseriesRecord.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord or None</strong>: Stripped TimeseriesRecord if inplace is False, otherwise None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.reset_time", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.reset_time", "kind": "function", "doc": "<p>Reset the time index to start at zero.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>inplace</strong> (bool, optional):\nIf True, modify in place. If False, return a new Timeseries.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Timeseries or None</strong>: If inplace is False, returns a new Timeseries with reset time.\nIf inplace is True, returns None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.copy", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.copy", "kind": "function", "doc": "<p>Return a deep copy of the Timeseries.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Timeseries</strong>: A new Timeseries object with the same data, index, columns, and unit.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.fillna", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.fillna", "kind": "function", "doc": "<p>Return a copy with NaNs replaced by the specified value or using advanced imputation for all contained objects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (float or int or None, optional):\nValue to use for NaNs. If None, use interpolation or regression.</li>\n<li><strong>n_regressors</strong> (int or None, optional):\nNumber of regressors to use for regression-based imputation. If None, use cubic spline interpolation.</li>\n<li><strong>inplace</strong> (bool, optional):\nIf True, fill in place. If False, return a new object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>LabeledArray</strong>: Filled object.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">n_regressors</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">inplace</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.apply", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.apply", "kind": "function", "doc": "<p>Apply a function to the underlying data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>func</strong> (callable or ProcessingPipeline):\nFunction, class, or method to apply to the data, or a\nProcessingPipeline.</li>\n<li><strong>axis</strong> (int, optional):\n0 to apply by row, 1 to apply by column (default: 0).</li>\n<li><strong>inplace</strong> (bool, optional):\nIf True, modifies self. If False, returns a new object.</li>\n<li><strong><em>args, *</em>kwargs</strong> (additional arguments to pass to func.):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Timeseries or result of func</strong>: If inplace is False, returns a new LabeledArray with the function\napplied.\nIf inplace is True, returns None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">func</span>,</span><span class=\"param\">\t<span class=\"n\">axis</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">new_unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.to_plotly_figure", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.to_plotly_figure", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.isna", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.isna", "kind": "function", "doc": "<p>Return a boolean array indicating NaNs.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: Boolean mask of NaNs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.frames.timeseries.timeseries.Timeseries.to_numpy", "modulename": "labanalysis.frames.timeseries.timeseries", "qualname": "Timeseries.to_numpy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io", "modulename": "labanalysis.io", "kind": "module", "doc": "<p>io module</p>\n"}, {"fullname": "labanalysis.io.read", "modulename": "labanalysis.io.read", "kind": "module", "doc": "<p>Reading data module</p>\n"}, {"fullname": "labanalysis.io.read.biostrength", "modulename": "labanalysis.io.read.biostrength", "kind": "module", "doc": "<p>products module</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.PRODUCTS", "modulename": "labanalysis.io.read.biostrength", "qualname": "PRODUCTS", "kind": "variable", "doc": "<p></p>\n", "default_value": "{&#x27;CHEST PRESS&#x27;: &lt;class &#x27;labanalysis.io.read.biostrength.ChestPress&#x27;&gt;, &#x27;SHOULDER PRESS&#x27;: &lt;class &#x27;labanalysis.io.read.biostrength.ShoulderPress&#x27;&gt;, &#x27;LOW ROW&#x27;: &lt;class &#x27;labanalysis.io.read.biostrength.LowRow&#x27;&gt;, &#x27;LEG PRESS&#x27;: &lt;class &#x27;labanalysis.io.read.biostrength.LegPress&#x27;&gt;, &#x27;LEG EXTENSION&#x27;: &lt;class &#x27;labanalysis.io.read.biostrength.LegExtension&#x27;&gt;, &#x27;ADJUSTABLE PULLEY REV&#x27;: &lt;class &#x27;labanalysis.io.read.biostrength.AdjustablePulleyREV&#x27;&gt;, &#x27;LEG PRESS REV&#x27;: &lt;class &#x27;labanalysis.io.read.biostrength.LegPressREV&#x27;&gt;, &#x27;LEG EXTENSION REV&#x27;: &lt;class &#x27;labanalysis.io.read.biostrength.LegExtensionREV&#x27;&gt;, &#x27;LEG CURL&#x27;: &lt;class &#x27;labanalysis.io.read.biostrength.LegCurl&#x27;&gt;}"}, {"fullname": "labanalysis.io.read.biostrength.ChestPress", "modulename": "labanalysis.io.read.biostrength", "qualname": "ChestPress", "kind": "class", "doc": "<p>Chest Press class object</p>\n", "bases": "BiostrengthProduct"}, {"fullname": "labanalysis.io.read.biostrength.ChestPress.__init__", "modulename": "labanalysis.io.read.biostrength", "qualname": "ChestPress.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">time_s</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_position_rad</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_load_nm</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "labanalysis.io.read.biostrength.ShoulderPress", "modulename": "labanalysis.io.read.biostrength", "qualname": "ShoulderPress", "kind": "class", "doc": "<p>Shoulder Press class object</p>\n", "bases": "BiostrengthProduct"}, {"fullname": "labanalysis.io.read.biostrength.ShoulderPress.__init__", "modulename": "labanalysis.io.read.biostrength", "qualname": "ShoulderPress.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">time_s</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_position_rad</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_load_nm</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "labanalysis.io.read.biostrength.LowRow", "modulename": "labanalysis.io.read.biostrength", "qualname": "LowRow", "kind": "class", "doc": "<p>Low Row class object</p>\n", "bases": "BiostrengthProduct"}, {"fullname": "labanalysis.io.read.biostrength.LowRow.__init__", "modulename": "labanalysis.io.read.biostrength", "qualname": "LowRow.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">time_s</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_position_rad</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_load_nm</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct", "kind": "class", "doc": "<p>Product class object</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.__init__", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">time_s</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_position_rad</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">load_kgf</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.time_s", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.time_s", "kind": "variable", "doc": "<p>return the time of each sample</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.position_motor_rad", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.position_motor_rad", "kind": "variable", "doc": "<p>return the raw postition in radians</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.pulley_radius_m", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.pulley_radius_m", "kind": "variable", "doc": "<p>pulley radius coefficient in m for each time sample</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.lever_weight_kgf", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.lever_weight_kgf", "kind": "variable", "doc": "<p>lever weight coefficient in kgf for each time sample</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.lever_length_m", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.lever_length_m", "kind": "variable", "doc": "<p>lever length in m</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.camme_ratio", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.camme_ratio", "kind": "variable", "doc": "<p>camme ratio coefficient for each time sample</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.spring_correction", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.spring_correction", "kind": "variable", "doc": "<p>spring correction coefficient for each time sample</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.load_motor_nm", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.load_motor_nm", "kind": "variable", "doc": "<p>return the motor load in Nm</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.lever_number", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.lever_number", "kind": "variable", "doc": "<p>number of levers</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.rom_correction_coefs", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.rom_correction_coefs", "kind": "variable", "doc": "<p>rom correction coefficients with higher order first</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.position_lever_deg", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.position_lever_deg", "kind": "variable", "doc": "<p>return the calculated position of the lever in degrees</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.camme_radius_m", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.camme_radius_m", "kind": "variable", "doc": "<p>radius of the lever(s) in m for each sample</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.position_lever_m", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.position_lever_m", "kind": "variable", "doc": "<p>return the calculated position of the lever in meters</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.load_lever_kgf", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.load_lever_kgf", "kind": "variable", "doc": "<p>return the calculated lever weight</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.speed_motor_rads", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.speed_motor_rads", "kind": "variable", "doc": "<p>return the calculated speed at the motor level in rad for each sample</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.speed_lever_degs", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.speed_lever_degs", "kind": "variable", "doc": "<p>return the calculated speed at the lever level in deg/s for each sample</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.speed_lever_ms", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.speed_lever_ms", "kind": "variable", "doc": "<p>return the calculated speed at the lever level in m/s for each sample</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.power_w", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.power_w", "kind": "variable", "doc": "<p>return the calculated power</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.rm1_coefs", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.rm1_coefs", "kind": "variable", "doc": "<p>1RM coefficients with higher order first</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.correction_coefs", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.correction_coefs", "kind": "variable", "doc": "<p>return the correction coefficients that extract the\nload in kgf from the input Torque.</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.name", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.name", "kind": "variable", "doc": "<p>the name of the product</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.copy", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.copy", "kind": "function", "doc": "<p>make a copy of the object</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.as_dataframe", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.as_dataframe", "kind": "function", "doc": "<p>return a summary table containing the resulting data</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.slice", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.slice", "kind": "function", "doc": "<p>slice _summary_</p>\n\n<p>_extended_summary_</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>start_time</strong> (float):\nthe start time of the slice</li>\n<li><strong>stop_time</strong> (float):\nthe end time of the slice</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>sliced</strong> (Product):\na sliced version of the object.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">start_time</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">stop_time</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.read.biostrength.BiostrengthProduct.from_txt_file", "modulename": "labanalysis.io.read.biostrength", "qualname": "BiostrengthProduct.from_txt_file", "kind": "function", "doc": "<p>read raw data from file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nthe path to the file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.read.biostrength.LegPress", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegPress", "kind": "class", "doc": "<p>Leg Press class object</p>\n", "bases": "BiostrengthProduct"}, {"fullname": "labanalysis.io.read.biostrength.LegPress.__init__", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegPress.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">time_s</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_position_rad</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_load_nm</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "labanalysis.io.read.biostrength.LegExtension", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegExtension", "kind": "class", "doc": "<p>Leg Extension class object</p>\n", "bases": "BiostrengthProduct"}, {"fullname": "labanalysis.io.read.biostrength.LegExtension.__init__", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegExtension.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">time_s</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_position_rad</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_load_nm</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "labanalysis.io.read.biostrength.AdjustablePulleyREV", "modulename": "labanalysis.io.read.biostrength", "qualname": "AdjustablePulleyREV", "kind": "class", "doc": "<p>Adjustable Pulley REV class object</p>\n", "bases": "BiostrengthProduct"}, {"fullname": "labanalysis.io.read.biostrength.AdjustablePulleyREV.__init__", "modulename": "labanalysis.io.read.biostrength", "qualname": "AdjustablePulleyREV.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">time_s</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_position_rad</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_load_nm</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "labanalysis.io.read.biostrength.LegPressREV", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegPressREV", "kind": "class", "doc": "<p>Leg Press REV class object</p>\n", "bases": "LegPress"}, {"fullname": "labanalysis.io.read.biostrength.LegPressREV.__init__", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegPressREV.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">time_s</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_position_rad</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_load_nm</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "labanalysis.io.read.biostrength.LegExtensionREV", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegExtensionREV", "kind": "class", "doc": "<p>Leg Extension REV class object</p>\n", "bases": "LegExtension"}, {"fullname": "labanalysis.io.read.biostrength.LegExtensionREV.__init__", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegExtensionREV.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">time_s</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_position_rad</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_load_nm</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">roll_position</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">18</span></span>)</span>"}, {"fullname": "labanalysis.io.read.biostrength.LegExtensionREV.from_txt_file", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegExtensionREV.from_txt_file", "kind": "function", "doc": "<p>read raw data from file</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nthe path to the file</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">roll_position</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">18</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.read.biostrength.LegExtensionREV.lever_weight_kgf", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegExtensionREV.lever_weight_kgf", "kind": "variable", "doc": "<p>lever weight coefficient in kgf for each time sample</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.LegExtensionREV.camme_ratio", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegExtensionREV.camme_ratio", "kind": "variable", "doc": "<p>camme ratio coefficient for each time sample</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.LegExtensionREV.roll_position", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegExtensionREV.roll_position", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.io.read.biostrength.LegExtensionREV.lever_length_m", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegExtensionREV.lever_length_m", "kind": "variable", "doc": "<p>lever length in m</p>\n"}, {"fullname": "labanalysis.io.read.biostrength.LegCurl", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegCurl", "kind": "class", "doc": "<p>Leg Curl class object</p>\n", "bases": "BiostrengthProduct"}, {"fullname": "labanalysis.io.read.biostrength.LegCurl.__init__", "modulename": "labanalysis.io.read.biostrength", "qualname": "LegCurl.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">time_s</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_position_rad</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">motor_load_nm</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">],</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">floating</span><span class=\"p\">]]</span></span>)</span>"}, {"fullname": "labanalysis.io.read.btsbioengineering", "modulename": "labanalysis.io.read.btsbioengineering", "kind": "module", "doc": "<p>io.read.btsbioengineering</p>\n\n<p>read specific BtsBioengineering file formats such as .tdf and .emt\nextensions.</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<p>read_tdf\n    read the data contained in a tdf file.</p>\n\n<p>read_emt\n    read the data contained in a emt file.</p>\n"}, {"fullname": "labanalysis.io.read.btsbioengineering.read_tdf", "modulename": "labanalysis.io.read.btsbioengineering", "qualname": "read_tdf", "kind": "function", "doc": "<p>Return the readings from a .tdf file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\nan existing tdf path.</li>\n<li><strong>strip</strong> (bool (default = True)):\nif True, tracked outcomes are automatically resized by removing\ncomplete missing outcomes from the ends</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>tdf</strong> (dict[str, Any]):\na dict containing the distinct data properly arranged by type.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.read.btsbioengineering.read_emt", "modulename": "labanalysis.io.read.btsbioengineering", "qualname": "read_emt", "kind": "function", "doc": "<p>Return the readings from a .emt file as dicts of 3D objects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\nan existing tdf path.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>emt</strong> (dict[str, pandas.DataFrame]):\na dict where each key is a specific 3D object contained in the emt file.</li>\n<li><strong>object_type</strong> (str):\nthe type of data contained within the emt file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.read.cosmed", "modulename": "labanalysis.io.read.cosmed", "kind": "module", "doc": "<p>io.read.cosmed</p>\n\n<p>module containing functions for reading Cosmed Omnia export files.</p>\n\n<h6 id=\"constants\">Constants</h6>\n\n<p>COSMED_DATETIME_FORMAT\n    the datetime format used within the Cosmed Omnia file export.</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<p>read_cosmed_xlsx\n    read .xlsx files generated trough the Cosmed Omnia software.</p>\n"}, {"fullname": "labanalysis.io.read.cosmed.COSMED_DATETIME_FORMAT", "modulename": "labanalysis.io.read.cosmed", "qualname": "COSMED_DATETIME_FORMAT", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;%d/%m/%Y-%H:%M:%S&#x27;"}, {"fullname": "labanalysis.io.read.cosmed.read_cosmed_xlsx", "modulename": "labanalysis.io.read.cosmed", "qualname": "read_cosmed_xlsx", "kind": "function", "doc": "<p>Return the readings from a .xlsx file containing cosmed Omnia xlsx file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\nan existing xlsx path.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>data</strong> (pandas.DataFrame):\na dataframe containing the input data</li>\n<li><strong>participant</strong> (rslib.utils.Participant):\nan instance of the Participant class contaning all the relevant data\nabout the participant having performed the acquisition.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.read.ircam", "modulename": "labanalysis.io.read.ircam", "kind": "module", "doc": "<p>read and write image streams from npz files</p>\n"}, {"fullname": "labanalysis.io.read.ircam.read_npz", "modulename": "labanalysis.io.read.ircam", "qualname": "read_npz", "kind": "function", "doc": "<p>Return the readings from a .npz file containing a stream of images</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong> (str):\nan existing npz file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>stream</strong> (dict[datetime.datetime, np.ndarray[Any, np.dtype[Any]]]):\na dataframe containing the input data</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.read.opensim", "modulename": "labanalysis.io.read.opensim", "kind": "module", "doc": "<p>opensim.read</p>\n\n<p>read specific opensim file formats such as .trc and .mot\nextensions.</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<p>read_trc\n    read the data contained in a tdf file.</p>\n\n<p>read_mot\n    read the data contained in a emt file.</p>\n"}, {"fullname": "labanalysis.io.read.opensim.read_trc", "modulename": "labanalysis.io.read.opensim", "qualname": "read_trc", "kind": "function", "doc": "<p>Return the readings from a .trc file as dicts of 3D objects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nan existing tdf path.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>trc</strong> (pandas.DataFrame):\na dict where each key is a specific 3D object contained in the trc file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.read.opensim.read_mot", "modulename": "labanalysis.io.read.opensim", "qualname": "read_mot", "kind": "function", "doc": "<p>Return the readings from a .mot file as dicts of 3D objects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nan existing tdf path.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>mot</strong> (dict[str, pandas.DataFrame]):\na dict where each key is a specific 3D object contained in the mot file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.write", "modulename": "labanalysis.io.write", "kind": "module", "doc": "<p>writing data module</p>\n"}, {"fullname": "labanalysis.io.write.opensim", "modulename": "labanalysis.io.write.opensim", "kind": "module", "doc": "<p>io.write.opensim</p>\n\n<p>write specific opensim file formats such as .trc and .mot\nextensions.</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<p>write_trc\n    read the data contained in a tdf file.</p>\n\n<p>write_mot\n    read the data contained in a emt file.</p>\n"}, {"fullname": "labanalysis.io.write.opensim.write_trc", "modulename": "labanalysis.io.write.opensim", "qualname": "write_trc", "kind": "function", "doc": "<p>Write the provided data into a .trc file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nan existing tdf path.</li>\n<li><strong>dfr</strong> (pd.DataFrame):\nthe dataframe containing the data to be stored. They must have:\n    - a time-based index\n    - columns provided as MultiIndex with the following levels:\n        1. list of points\n        2. ['X', 'Y', 'Z'] for each first level.\n        3. [mm] as unit of measurement for each sublevel.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">dfr</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.io.write.opensim.write_mot", "modulename": "labanalysis.io.write.opensim", "qualname": "write_mot", "kind": "function", "doc": "<p>write the provided data into a .mot file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nthe file where the data have to be stored.</li>\n<li><strong>dfr</strong> (pd.DataFrame):\nthe object to be stored. It must have:\n    - a time-based index\n    - columns provided as MultiIndex with the following levels:\n        1. the list of force objects\n        2. ['ORIGIN', 'FORCE', 'TORQUE']\n        3. ['X', 'Y', 'Z'] for each first level.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">dfr</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.messages", "modulename": "labanalysis.messages", "kind": "module", "doc": "<p>tk common messages module</p>\n\n<p>this module provides an interface to the native message boxes available in Tk 4.2 and newer.</p>\n\n<p>written by Fredrik Lundh, May 1997</p>\n\n<p>options (all have default values):</p>\n\n<pre><code>- default: which button to make default (one of the reply codes)\n- icon: which icon to display (see below)\n- message: the message to display\n- parent: which window to place the dialog on top of\n- title: dialog title\n- type: dialog type; that is, which buttons to display (see below)\n</code></pre>\n"}, {"fullname": "labanalysis.messages.showinfo", "modulename": "labanalysis.messages", "qualname": "showinfo", "kind": "function", "doc": "<p>Show an info message</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.messages.showwarning", "modulename": "labanalysis.messages", "qualname": "showwarning", "kind": "function", "doc": "<p>Show a warning message</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.messages.showerror", "modulename": "labanalysis.messages", "qualname": "showerror", "kind": "function", "doc": "<p>Show an error message</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.messages.askquestion", "modulename": "labanalysis.messages", "qualname": "askquestion", "kind": "function", "doc": "<p>Ask a question</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.messages.askokcancel", "modulename": "labanalysis.messages", "qualname": "askokcancel", "kind": "function", "doc": "<p>Ask if operation should proceed; return true if the answer is ok</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.messages.askyesno", "modulename": "labanalysis.messages", "qualname": "askyesno", "kind": "function", "doc": "<p>Ask a question; return true if the answer is yes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.messages.askyesnocancel", "modulename": "labanalysis.messages", "qualname": "askyesnocancel", "kind": "function", "doc": "<p>Ask a question; return true if the answer is yes, None if cancelled.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.messages.askretrycancel", "modulename": "labanalysis.messages", "qualname": "askretrycancel", "kind": "function", "doc": "<p>Ask if operation should be retried; return true if the answer is yes</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">options</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.pipelines", "modulename": "labanalysis.pipelines", "kind": "module", "doc": "<p>pipelines library</p>\n"}, {"fullname": "labanalysis.pipelines.processingpipeline", "modulename": "labanalysis.pipelines.processingpipeline", "kind": "module", "doc": "<p>processing pipeline module</p>\n"}, {"fullname": "labanalysis.pipelines.processingpipeline.ProcessingPipeline", "modulename": "labanalysis.pipelines.processingpipeline", "qualname": "ProcessingPipeline", "kind": "class", "doc": "<p>A pipeline for processing various types of TimeseriesRecord-compatible\nobjects.\nThis class allows the user to define a sequence of processing functions\nfor each supported object type and apply them to a collection of objects.</p>\n"}, {"fullname": "labanalysis.pipelines.processingpipeline.ProcessingPipeline.__init__", "modulename": "labanalysis.pipelines.processingpipeline", "qualname": "ProcessingPipeline.__init__", "kind": "function", "doc": "<p>Initialize a ProcessingPipeline.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">callables</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Callable</span><span class=\"p\">,</span> <span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Callable</span><span class=\"p\">]]]</span></span>)</span>"}, {"fullname": "labanalysis.pipelines.processingpipeline.ProcessingPipeline.pipeline", "modulename": "labanalysis.pipelines.processingpipeline", "qualname": "ProcessingPipeline.pipeline", "kind": "variable", "doc": "<p></p>\n", "annotation": ": dict[str, typing.List[typing.Callable]]"}, {"fullname": "labanalysis.pipelines.processingpipeline.ProcessingPipeline.apply", "modulename": "labanalysis.pipelines.processingpipeline", "qualname": "ProcessingPipeline.apply", "kind": "function", "doc": "<p>Apply the processing pipeline to the given objects.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>*objects</strong> (variable length argument list):\nObjects to process. Can be individual Signal1D, Signal3D, Point3D,\nEMGSignal, ForcePlatform, or TimeseriesRecord instances.</li>\n<li><strong>inplace</strong> (bool, optional):\nIf True, modifies the objects in place. If False, returns the\nprocessed copies.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list or None</strong>: If inplace is False, returns a list of processed objects.\nOtherwise, returns None.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"nb\">object</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">Timeseries</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">Record</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.pipelines.processingpipeline.default_processing_pipeline", "modulename": "labanalysis.pipelines.processingpipeline", "qualname": "default_processing_pipeline", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.plotting", "modulename": "labanalysis.plotting", "kind": "module", "doc": "<p>plotting module</p>\n"}, {"fullname": "labanalysis.plotting.plotly", "modulename": "labanalysis.plotting.plotly", "kind": "module", "doc": "<p>plotting module</p>\n\n<p>a set of functions for standard plots creation.</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<p>plot_comparisons\n    A combination of regression and bland-altmann plots which returns a\n    Plotly FigureWidget object.</p>\n\n<p>bars_with_normative_bands\n    Return a plotly FigureWidget and a dataframe with bars defining values\n    and normative data in the background.</p>\n"}, {"fullname": "labanalysis.plotting.plotly.plot_comparisons", "modulename": "labanalysis.plotting.plotly", "qualname": "plot_comparisons", "kind": "function", "doc": "<p>A combination of regression and bland-altmann plots</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>xarr</strong> (np.ndarray[Literal[1], np.dtype[np.float64 | np.int64]],):\nthe array defining the x-axis in the regression plot.</li>\n<li><strong>yarr</strong> (np.ndarray[Literal[1], np.dtype[np.float64 | np.int64]],):\nthe array defining the y-axis in the regression plot.</li>\n<li><strong>color</strong> (np.ndarray[Literal[1], np.dtype[Any]] | None (default = None)):\nthe array defining the color of each sample in the regression plot.</li>\n<li><strong>xlabel</strong> (str (default = \"\")):\nthe label of the x-axis in the regression plot.</li>\n<li><strong>ylabel</strong> (str (default = \"\")):\nthe label of the y-axis in the regression plot.</li>\n<li><strong>confidence</strong> (float (default = 0.95)):\nthe confidence interval to be displayed on the Bland-Altmann plot.</li>\n<li><strong>parametric</strong> (bool (default = False)):\nif True, parametric Bland-Altmann confidence intervals are reported.\nOtherwise, non parametric confidence intervals are provided.</li>\n<li><strong>figure</strong> (go.Figure | go.FigureWidget | None (default = None)):\nan already existing figure where to add the plot along the passed row</li>\n<li><strong>row</strong> (int (default = 1)):\nthe index of the row where to put the plots</li>\n<li><strong>showlegend</strong> (bool (default = True)):\nIf True show the legend of the figure.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">xarr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">yarr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">color</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">xlabel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ylabel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">confidence</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.95</span>,</span><span class=\"param\">\t<span class=\"n\">parametric</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">figure</span><span class=\"p\">:</span> <span class=\"n\">plotly</span><span class=\"o\">.</span><span class=\"n\">graph_objs</span><span class=\"o\">.</span><span class=\"n\">_figure</span><span class=\"o\">.</span><span class=\"n\">Figure</span> <span class=\"o\">|</span> <span class=\"n\">plotly</span><span class=\"o\">.</span><span class=\"n\">graph_objs</span><span class=\"o\">.</span><span class=\"n\">_figurewidget</span><span class=\"o\">.</span><span class=\"n\">FigureWidget</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">row</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">showlegend</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.plotting.plotly.bars_with_normative_bands", "modulename": "labanalysis.plotting.plotly", "qualname": "bars_with_normative_bands", "kind": "function", "doc": "<p>Return a plotly FigureWidget and a dataframe with bars defining values\nand normative data in the background.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_frame</strong> (pd.DataFrame | None, optional):\nthe dataframe containing the data, by default None</li>\n<li><strong>xarr</strong> (str | np.ndarray | list, optional):\nthe xaxis label in data_frame or the array defining the xaxes labels.\nPlease note that if data_frame is provided, xarr must be a str defining\na column of the provided dataframe. by default np.array([])</li>\n<li><strong>yarr</strong> (str | np.ndarray | list, optional):\nthe yaxis label in data_frame or the array defining the yaxes labels.\nPlease note that if data_frame is provided, yarr must be a str defining\na column of the provided dataframe. by default np.array([])</li>\n<li><strong>patterns</strong> (str | np.ndarray | list | None, optional):\nthe column in data_frame defining the bar patterns or the array\ndefining the  labels. Please note that if data_frame is provided,\npatterns must be a str defining a column of the provided dataframe.\nby default np.array([])</li>\n<li><strong>orientation</strong> (Literal[\"h\", \"v\"], optional):\nthe bars orientation, by default \"v\"</li>\n<li><strong>unit</strong> (str | None, optional):\nThe unit of measurement of the bars.</li>\n<li><p><strong>intervals</strong> (pd.DataFrame, optional):\nall the normative intervals. The dataframe must have the following\ncolumns:</p>\n\n<pre><code>Rank: str\n    the label defining the interpretation of the value\n\nLower: int | float\n    the lower bound of the interval.\n\nUpper: int | float\n    the upper bound of the interval.\n\nColor: str\n    code that can be interpreted as a color.\n</code></pre></li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>fig</strong> (FigureWidget):\na plotly FigureWidget instance</li>\n<li><strong>dfr</strong> (DataFrame):\nthe dataframe used to generate the figure</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data_frame</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">xarr</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"p\">([],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float64</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">yarr</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">=</span> <span class=\"n\">array</span><span class=\"p\">([],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">float64</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">patterns</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">orientation</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;h&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;v&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;v&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">unit</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">intervals</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">=</span> <span class=\"n\">Empty</span> <span class=\"n\">DataFrame</span>\n<span class=\"n\">Columns</span><span class=\"p\">:</span> <span class=\"p\">[]</span>\n<span class=\"n\">Index</span><span class=\"p\">:</span> <span class=\"p\">[]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression", "modulename": "labanalysis.regression", "kind": "module", "doc": "<p>regression library</p>\n"}, {"fullname": "labanalysis.regression.ols", "modulename": "labanalysis.regression.ols", "kind": "module", "doc": "<p>ols module</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry", "modulename": "labanalysis.regression.ols.geometry", "kind": "module", "doc": "<p>2D and 3D space objects extrapolated by least squares approaches</p>\n\n<h6 id=\"classes\">Classes</h6>\n\n<p>Line2D\n    line object in a 2D space having general form:\n            A * x + B * y + C = 0</p>\n\n<p>Line3D\n    line object in a 3D space having general form:\n            A * x + B * y + C * z + D = 0</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject", "kind": "class", "doc": "<p>General geometric object class. This object is thought to be extended\naccording to the geometric object of interest.</p>\n\n<p>The standard use case is to extend this class and implement at least the\nmethod '_expand_dimensions'\". Optionally also the methods fit and predict\nmight be re-implemented to make better specify the input data.</p>\n", "bases": "typing.Protocol"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject.__init__", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">general_equation</span><span class=\"p\">:</span> <span class=\"n\">sympy</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">relational</span><span class=\"o\">.</span><span class=\"n\">Equality</span>,</span><span class=\"param\">\t<span class=\"n\">dimensions</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">has_intercept</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject.has_intercept", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject.has_intercept", "kind": "variable", "doc": "<p>return True if the model has intercept</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject.betas", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject.betas", "kind": "variable", "doc": "<p>return the betas coefficients</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject.coefs", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject.coefs", "kind": "variable", "doc": "<p>return the labels of the coefficients in the general equation</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject.general_equation", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject.general_equation", "kind": "variable", "doc": "<p>return the equation of the model</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject.fitted_equation", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject.fitted_equation", "kind": "variable", "doc": "<p>return the equation with the appropriate coefficients</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject.dimensions", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject.dimensions", "kind": "variable", "doc": "<p>get the dimensions of the shape</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject.is_fitted", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject.is_fitted", "kind": "function", "doc": "<p>check if the current objects has the required beta coefficients</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject.copy", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject.copy", "kind": "function", "doc": "<p>create a copy of the current object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject.predict", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject.predict", "kind": "function", "doc": "<p>predict the unknown dimensions giving all but one other dimensions.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>known_dimensions</strong> (key-valued ArrayLike):\nthe input dimensions.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>predicted_dimension</strong> (ArrayLike):\nthe value corresponding to each known dimension pair.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">known_dimensions</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.geometry.GeometricObject.fit", "modulename": "labanalysis.regression.ols.geometry", "qualname": "GeometricObject.fit", "kind": "function", "doc": "<p>fit the current object to the provided dimensions</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dimensions_samples</strong> (key-valued ArrayLike):\nthe input dimensions.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">dimensions_samples</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.geometry.Line2D", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Line2D", "kind": "class", "doc": "<p>line object in a 2D space having general form:</p>\n\n<pre><code>    A * x + B * y + C = 0\n</code></pre>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>has_intercept</strong> (bool (default = True)):\nif False the C coefficient is excluded.</li>\n</ul>\n", "bases": "GeometricObject"}, {"fullname": "labanalysis.regression.ols.geometry.Line2D.__init__", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Line2D.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">has_intercept</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "labanalysis.regression.ols.geometry.Line2D.domains", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Line2D.domains", "kind": "variable", "doc": "<p>return the value limits accepted for each dimension</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.Line2D.fit", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Line2D.fit", "kind": "function", "doc": "<p>fit the model with the required data</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (np.ndarray | pd.Series | list[float | int] | float | int):\nthe x-axis coordinates</li>\n<li><strong>y</strong> (np.ndarray | pd.Series | list[float | int] | float | int):\nthe y-axis coordinates</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>fitted</strong> (Line2D):\na fitted Line2D object</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.geometry.Line2D.predict", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Line2D.predict", "kind": "function", "doc": "<p>get predictions of the not provided coordinate</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (np.ndarray | pd.Series | list[float | int] | float | int | None (default=None)):\nthe x-axis coordinates</li>\n<li><strong>y</strong> (np.ndarray | pd.Series | list[float | int] | float | int | None (default=None)):\nthe y-axis coordinates</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>out</strong> (np.ndarray):\nthe coordinates of the axis not provided</li>\n</ul>\n\n<h6 id=\"note\">Note</h6>\n\n<p>only the 'x' or 'y' argument has to be provided.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.geometry.Line3D", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Line3D", "kind": "class", "doc": "<p>line object in a 3D space having general form:</p>\n\n<pre><code>    A * x + B * y + C * z + D = 0\n</code></pre>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>has_intercept</strong> (bool (default = True)):\nif False the D coefficient is excluded.</li>\n</ul>\n", "bases": "GeometricObject"}, {"fullname": "labanalysis.regression.ols.geometry.Line3D.__init__", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Line3D.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">has_intercept</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span>)</span>"}, {"fullname": "labanalysis.regression.ols.geometry.Line3D.domains", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Line3D.domains", "kind": "variable", "doc": "<p>return the value limits accepted for each dimension</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.Line3D.fit", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Line3D.fit", "kind": "function", "doc": "<p>fit the model with the required data</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (np.ndarray | pd.Series | list[float | int] | float | int):\nthe x-axis coordinates</li>\n<li><strong>y</strong> (np.ndarray | pd.Series | list[float | int] | float | int):\nthe y-axis coordinates</li>\n<li><strong>z</strong> (np.ndarray | pd.Series | list[float | int] | float | int):\nthe z-axis coordinates</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>fitted</strong> (Line3D):\na fitted Line3D object</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.geometry.Line3D.predict", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Line3D.predict", "kind": "function", "doc": "<p>get predictions of the not provided coordinate</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (np.ndarray | pd.Series | list[float | int] | float | int | None (default=None)):\nthe x-axis coordinates</li>\n<li><strong>y</strong> (np.ndarray | pd.Series | list[float | int] | float | int | None (default=None)):\nthe y-axis coordinates</li>\n<li><strong>z</strong> (np.ndarray | pd.Series | list[float | int] | float | int | None (default=None)):\nthe z-axis coordinates</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>out</strong> (np.ndarray):\nthe coordinates of the axis not provided</li>\n</ul>\n\n<h6 id=\"note\">Note</h6>\n\n<p>only 2 of the three axes have to be provided.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">z</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.geometry.Circle", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Circle", "kind": "class", "doc": "<p>circle object in a 2D space having general form:</p>\n\n<pre><code>    x^2 + y^2 + A * x + B * y + C = 0\n</code></pre>\n\n<p>Equivalently another expression of the circle is:</p>\n\n<pre><code>    (x - x0)^2 + (y - y0)^2 = r^2\n</code></pre>\n\n<p>Where:\n    x0 and y0 are the coordinates of the center of the circle\n    r is the radius of the circle.</p>\n\n<p>Hence:\n    x0 = -A/2\n    y0 = -B/2\n    r = (A^2 / 4 + B^2 / 4 - C) ^ 0.5</p>\n", "bases": "GeometricObject"}, {"fullname": "labanalysis.regression.ols.geometry.Circle.center", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Circle.center", "kind": "variable", "doc": "<p>return the coordinates of the center of the circle.</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.Circle.radius", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Circle.radius", "kind": "variable", "doc": "<p>return the radius of the circle</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.Circle.domains", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Circle.domains", "kind": "variable", "doc": "<p>return the value limits accepted for each dimension</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.Circle.perimeter", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Circle.perimeter", "kind": "variable", "doc": "<p>return the perimeter of the circle</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.Circle.area", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Circle.area", "kind": "variable", "doc": "<p>return the area of the circle</p>\n"}, {"fullname": "labanalysis.regression.ols.geometry.Circle.fit", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Circle.fit", "kind": "function", "doc": "<p>fit the model with the required data</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (np.ndarray | pd.Series | list[float | int] | float | int):\nthe x-axis coordinates</li>\n<li><strong>y</strong> (np.ndarray | pd.Series | list[float | int] | float | int):\nthe y-axis coordinates</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>fitted</strong> (Circle):\na fitted Circle object</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.geometry.Circle.predict", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Circle.predict", "kind": "function", "doc": "<p>get predictions of the not provided coordinate</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (np.ndarray | pd.Series | list[float | int] | float | int | None (default=None)):\nthe x-axis coordinates</li>\n<li><strong>y</strong> (np.ndarray | pd.Series | list[float | int] | float | int | None (default=None)):\nthe y-axis coordinates</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>out</strong> (np.ndarray):\nthe coordinates of the axis not provided</li>\n</ul>\n\n<h6 id=\"note\">Note</h6>\n\n<p>only the 'x' or 'y' argument has to be provided.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.geometry.Circle.is_inside", "modulename": "labanalysis.regression.ols.geometry", "qualname": "Circle.is_inside", "kind": "function", "doc": "<p>check whether the point (x, y) is inside the Ellipse.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (float):\nthe x axis coordinate</li>\n<li><strong>y</strong> (float):\nthe y axis coordinate</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>i</strong> (bool):\nTrue if the provided point is contained by the Ellipse.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression", "modulename": "labanalysis.regression.ols.regression", "kind": "module", "doc": "<p>ordinary least squares regression module</p>\n\n<p>a set of functions dedicated to the use of least squares model regression</p>\n\n<h6 id=\"classes\">Classes</h6>\n\n<p>PolynomialRegression\n    regression model in the form:\n            Y = b0 + b1 * fn(X)<strong>1 + ... + bn * fn(X)</strong>n + e</p>\n\n<p>MultiSegmentRegression\n    regression model in the form:\n            Ys = b0s + b1s * fn(Xs)<strong>1 + ... + bns * fn(Xs)</strong>n + e</p>\n\n<pre><code>    with s denoting a limited continuous interval of X\n</code></pre>\n\n<p>PowerRegression\n    regression model having form:\n            Y = b0 + b1 * [fn(X) + b2] ** b3 + e</p>\n"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression", "kind": "class", "doc": "<p>Ordinary Least Squares regression model in the form:</p>\n\n<pre><code>    Y = b0 + b1 * fn(X)**1 + ... + bn * fn(X)**n + e\n</code></pre>\n\n<p>where \"b0...bn\" are the model coefficients and \"fn\" is a transform function\napplied elemenwise to each sample of X.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>degree</strong> (int = 1):\nthe polynomial order</li>\n<li><strong>fit_intercept</strong> (bool, default=True):\nWhether to calculate the intercept for this model. If set to False,\nno intercept will be used in calculations\n(i.e. data is expected to be centered).</li>\n<li><strong>transform: Callable, default = lambda x</strong> (x):\na callable function defining the type of transform to be applied\nelementwise to each input value of X before the extension to the\nrequired polynomial degree.</li>\n<li><strong>copy_X</strong> (bool, default=True):\nIf True, X will be copied; else, it may be overwritten.</li>\n<li><strong>n_jobs</strong> (int, default=None):\nThe number of jobs to use for the computation. This will only provide\nspeedup in case of sufficiently large problems, that is if firstly\nn_targets &gt; 1 and secondly X is sparse or if positive is set to True.\nNone means 1 unless in a joblib.parallel_backend context. -1 means\nusing all processors. See Glossary for more details.</li>\n<li><strong>positive</strong> (bool, default=False):\nWhen set to True, forces the coefficients to be positive.\nThis option is only supported for dense arrays.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>degree</strong> (int):\nthe polynomial degree</li>\n<li><strong>betas</strong> (pandas DataFrame):\na dataframe reporting the regression coefficients for each feature</li>\n<li><strong>additional attributes are described from the mother scikit-learn</strong></li>\n<li><strong>LinearRegression class object:</strong></li>\n<li><strong>https</strong> (//scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html):</li>\n</ul>\n", "bases": "sklearn.linear_model._base.LinearRegression"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.__init__", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">degree</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">fit_intercept</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">transform</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">PolynomialRegression</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">copy_X</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">positive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.transform", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.transform", "kind": "variable", "doc": "<p>return the transform function</p>\n"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.degree", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.degree", "kind": "variable", "doc": "<p>return the polynomial degree</p>\n"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.domain", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.domain", "kind": "variable", "doc": "<p>return the domain of this model</p>\n"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.codomain", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.codomain", "kind": "variable", "doc": "<p>return the codomain of this model</p>\n"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.betas", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.betas", "kind": "variable", "doc": "<p>return the beta coefficients of the model</p>\n"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.get_feature_names_in", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.get_feature_names_in", "kind": "function", "doc": "<p>return the input feature names seen at fit time</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.get_feature_names_out", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.get_feature_names_out", "kind": "function", "doc": "<p>return the output feature names seen at fit time</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.fit", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.fit", "kind": "function", "doc": "<p>Fit the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>xarr</strong> (array-like or DataFrame of shape (n_samples, n_features)):\nTraining data.</li>\n<li><strong>yarr</strong> (array-like or DataFrame of shape (n_samples,)|(n_samples, n_targets)):\nTarget values. Will be cast to X\u2019s dtype if necessary.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong>: the fitted estimator</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">xarr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">yarr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.predict", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.predict", "kind": "function", "doc": "<p>Fit the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>xarr</strong> (array-like or DataFrame of shape (n_samples, n_features)):\nTraining data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>yarr</strong> (DataFrame):\nthe predicted values.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">xarr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.copy", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.copy", "kind": "function", "doc": "<p>create a copy of the current object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.set_fit_request", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.set_fit_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.set_predict_request", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.set_predict_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PolynomialRegression.set_score_request", "modulename": "labanalysis.regression.ols.regression", "qualname": "PolynomialRegression.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.MultiSegmentRegression", "modulename": "labanalysis.regression.ols.regression", "qualname": "MultiSegmentRegression", "kind": "class", "doc": "<p>ordinary polynomial least squares regression splitted on multiple segments</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>degree</strong> (int = 1):\nthe polynomial degree</li>\n<li><strong>transform: Callable, default = lambda x</strong> (x):\na callable function defining the type of transform to be applied\nelementwise to each input value of X before the extension to the\nrequired polynomial degree.</li>\n<li><strong>n_segments</strong> (int = 1):\nnumber of segments to be calculated</li>\n<li><strong>min_samples</strong> (int | None):\nThe minimum number of different samples defining the x axis of each line.\nIf not provided, the number of degree + 1 is used.</li>\n<li><strong>copy_X</strong> (bool, default=True):\nIf True, X will be copied; else, it may be overwritten.</li>\n<li><strong>n_jobs</strong> (int, default=None):\nThe number of jobs to use for the computation. This will only provide\nspeedup in case of sufficiently large problems, that is if firstly\nn_targets &gt; 1 and secondly X is sparse or if positive is set to True.\nNone means 1 unless in a joblib.parallel_backend context. -1 means\nusing all processors. See Glossary for more details.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>degree</strong> (int):\nthe polynomial degree</li>\n<li><strong>betas</strong> (pandas DataFrame):\na dataframe reporting the regression coefficients for each feature</li>\n<li><strong>additional attributes are described from the mother scikit-learn</strong></li>\n<li><strong>LinearRegression class object:</strong></li>\n<li><strong>https</strong> (//scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html):</li>\n</ul>\n", "bases": "PolynomialRegression"}, {"fullname": "labanalysis.regression.ols.regression.MultiSegmentRegression.__init__", "modulename": "labanalysis.regression.ols.regression", "qualname": "MultiSegmentRegression.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">degree</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">n_lines</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">min_samples</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">transform</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">MultiSegmentRegression</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">copy_X</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">positive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "labanalysis.regression.ols.regression.MultiSegmentRegression.copy", "modulename": "labanalysis.regression.ols.regression", "qualname": "MultiSegmentRegression.copy", "kind": "function", "doc": "<p>create a copy of the current object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.MultiSegmentRegression.n_segments", "modulename": "labanalysis.regression.ols.regression", "qualname": "MultiSegmentRegression.n_segments", "kind": "variable", "doc": "<p>the number of lines defining the model</p>\n"}, {"fullname": "labanalysis.regression.ols.regression.MultiSegmentRegression.min_samples", "modulename": "labanalysis.regression.ols.regression", "qualname": "MultiSegmentRegression.min_samples", "kind": "variable", "doc": "<p>return the minimum number of unique values on the x-axis to be used\nfor generating each single line of the regression model</p>\n"}, {"fullname": "labanalysis.regression.ols.regression.MultiSegmentRegression.fit", "modulename": "labanalysis.regression.ols.regression", "qualname": "MultiSegmentRegression.fit", "kind": "function", "doc": "<p>Fit the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>xarr</strong> (array-like or DataFrame of shape (n_samples, n_features)):\nTraining data.</li>\n<li><strong>yarr</strong> (array-like or DataFrame of shape (n_samples,)|(n_samples, n_targets)):\nTarget values. Will be cast to X\u2019s dtype if necessary.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong>: the fitted estimator</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">xarr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">yarr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.MultiSegmentRegression.predict", "modulename": "labanalysis.regression.ols.regression", "qualname": "MultiSegmentRegression.predict", "kind": "function", "doc": "<p>Fit the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>xarr</strong> (array-like or DataFrame of shape (n_samples, n_features)):\nTraining data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>yarr</strong> (DataFrame):\nthe predicted values.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">xarr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.MultiSegmentRegression.set_fit_request", "modulename": "labanalysis.regression.ols.regression", "qualname": "MultiSegmentRegression.set_fit_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.MultiSegmentRegression.set_predict_request", "modulename": "labanalysis.regression.ols.regression", "qualname": "MultiSegmentRegression.set_predict_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.MultiSegmentRegression.set_score_request", "modulename": "labanalysis.regression.ols.regression", "qualname": "MultiSegmentRegression.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PowerRegression", "modulename": "labanalysis.regression.ols.regression", "qualname": "PowerRegression", "kind": "class", "doc": "<p>Regression model having form:</p>\n\n<pre><code>        Y = b0 * fn(X) ** b3 + e\n</code></pre>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>transform: Callable, default = lambda x</strong> (x):\na callable function defining the type of transform to be applied\nelementwise to each input value of X before the extension to the\nrequired polynomial degree.</li>\n<li><strong>copy_X</strong> (bool, default=True):\nIf True, X will be copied; else, it may be overwritten.</li>\n<li><strong>n_jobs</strong> (int, default=None):\nThe number of jobs to use for the computation. This will only provide\nspeedup in case of sufficiently large problems, that is if firstly\nn_targets &gt; 1 and secondly X is sparse or if positive is set to True.\nNone means 1 unless in a joblib.parallel_backend context. -1 means\nusing all processors. See Glossary for more details.</li>\n<li><strong>positive</strong> (bool, default=False):\nWhen set to True, forces the coefficients to be positive.\nThis option is only supported for dense arrays.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>betas</strong> (pandas DataFrame):\na dataframe reporting the regression coefficients for each feature</li>\n<li><strong>additional attributes are described from the mother scikit-learn</strong></li>\n<li><strong>LinearRegression class object:</strong></li>\n<li><strong>https</strong> (//scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html):</li>\n</ul>\n", "bases": "PolynomialRegression"}, {"fullname": "labanalysis.regression.ols.regression.PowerRegression.__init__", "modulename": "labanalysis.regression.ols.regression", "qualname": "PowerRegression.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">transform</span><span class=\"p\">:</span> <span class=\"n\">Callable</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">function</span> <span class=\"n\">PowerRegression</span><span class=\"o\">.&lt;</span><span class=\"k\">lambda</span><span class=\"o\">&gt;&gt;</span>,</span><span class=\"param\">\t<span class=\"n\">copy_X</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">n_jobs</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">positive</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, {"fullname": "labanalysis.regression.ols.regression.PowerRegression.fit", "modulename": "labanalysis.regression.ols.regression", "qualname": "PowerRegression.fit", "kind": "function", "doc": "<p>Fit the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>xarr</strong> (array-like or DataFrame of shape (n_samples, n_features)):\nTraining data.</li>\n<li><strong>yarr</strong> (array-like or DataFrame of shape (n_samples,)|(n_samples, n_targets)):\nTarget values. Will be cast to X\u2019s dtype if necessary.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>self</strong>: the fitted estimator</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">xarr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">yarr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PowerRegression.predict", "modulename": "labanalysis.regression.ols.regression", "qualname": "PowerRegression.predict", "kind": "function", "doc": "<p>Fit the model.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (array-like or DataFrame of shape (n_samples, n_features)):\nTraining data.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>z</strong> (DataFrame):\nthe predicted values.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">xarr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span> <span class=\"o\">|</span> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PowerRegression.copy", "modulename": "labanalysis.regression.ols.regression", "qualname": "PowerRegression.copy", "kind": "function", "doc": "<p>create a copy of the current object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PowerRegression.set_fit_request", "modulename": "labanalysis.regression.ols.regression", "qualname": "PowerRegression.set_fit_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PowerRegression.set_predict_request", "modulename": "labanalysis.regression.ols.regression", "qualname": "PowerRegression.set_predict_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.regression.ols.regression.PowerRegression.set_score_request", "modulename": "labanalysis.regression.ols.regression", "qualname": "PowerRegression.set_score_request", "kind": "function", "doc": "<p>A descriptor for request methods.</p>\n\n<p><em>New in version 1.3.</em></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nThe name of the method for which the request function should be\ncreated, e.g. <code>\"fit\"</code> would create a <code>set_fit_request</code> function.</li>\n<li><strong>keys</strong> (list of str):\nA list of strings which are accepted parameters by the created\nfunction, e.g. <code>[\"sample_weight\"]</code> if the corresponding method\naccepts it as a metadata.</li>\n<li><strong>validate_keys</strong> (bool, default=True):\nWhether to check if the requested parameters fit the actual parameters\nof the method.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This class is a descriptor <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> and uses PEP-362 to set the signature of\nthe returned function <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p><a href=\"https://docs.python.org/3/howto/descriptor.html\">https://docs.python.org/3/howto/descriptor.html</a>&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"https://www.python.org/dev/peps/pep-0362/\">https://www.python.org/dev/peps/pep-0362/</a>&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">unknown</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing", "modulename": "labanalysis.signalprocessing", "kind": "module", "doc": "<p>signalprocessing</p>\n\n<p>A set of functions dedicated to the processing and analysis of 1D signals.</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<p>find_peaks\n    Find peaks in the signal.\ncontinuous_batches\n    Get the indices defining contiguous samples in the signal.\nnextpow\n    The next power of the selected base.\nwinter_derivative1\n    Obtain the first derivative of a 1D signal according to Winter 2009 method.\nwinter_derivative2\n    Obtain the second derivative of a 1D signal according to Winter 2009 method.\nfreedman_diaconis_bins\n    Digitize a 1D signal in bins defined according to the Freedman-Diaconis rule.\nfir_filt\n    Apply a FIR (Finite Impulse Response) filter to a 1D signal.\nmean_filt\n    Apply a moving average filter to a 1D signal.\nmedian_filt\n    Apply a median filter to a 1D signal.\nrms_filt\n    Apply a RMS filter to a 1D signal.\nbutterworth_filt\n    Apply a Butterworth filter to a 1D signal.\ncubicspline_interp\n    Apply cubic spline interpolation to a 1D signal.\nresidual_analysis\n    Get the optimal cut-off frequency for a filter on 1D signals according to Winter 2009 'residual analysis' method.\ncrossovers\n    Get the x-axis coordinates of the junction between the lines best fitting a 1D signal in a least-squares sense.\npsd\n    Obtain the power spectral density estimate of a 1D signal using the periodogram method.\ncrossings\n    Obtain the location of the samples being across a target value.\nxcorr\n    Get the cross/auto-correlation and lag of multiple/one 1D signal.\noutlyingness\n    Return the adjusted outlyingness factor.\ngram_schmidt\n    Return the orthogonal basis defined by a set of points using the Gram-Schmidt algorithm.\nfillna\n    Fill missing data in numpy ndarray or pandas dataframe.\ntkeo\n    Obtain the discrete Teager-Kaiser Energy of the input signal.\npadwin\n    Pad the signal according to the given order and return the mask of indices defining each window on the signal.\nto_reference_frame\n    Rotate a 3D array or dataframe to the provided reference frame.</p>\n"}, {"fullname": "labanalysis.signalprocessing.find_peaks", "modulename": "labanalysis.signalprocessing", "qualname": "find_peaks", "kind": "function", "doc": "<p>Find peaks in the signal.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe input signal.</li>\n<li><strong>height</strong> (int or float or None, optional):\nThe minimum height of the peaks.</li>\n<li><strong>distance</strong> (int or None, optional):\nThe minimum distance between the peaks.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The array containing the indices of the detected peaks.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">distance</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.continuous_batches", "modulename": "labanalysis.signalprocessing", "qualname": "continuous_batches", "kind": "function", "doc": "<p>Return the list of indices defining batches where consecutive arr values are True.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nA 1D boolean array.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list of list of int</strong>: A list of lists containing the indices defining each batch of consecutive True values.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">tolerance</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.nextpow", "modulename": "labanalysis.signalprocessing", "qualname": "nextpow", "kind": "function", "doc": "<p>Get the next power of the provided value according to the given base.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>val</strong> (int or float):\nThe target value.</li>\n<li><strong>base</strong> (int, optional):\nThe base to be elevated.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>int</strong>: The next power of the provided value according to the given base.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">val</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.winter_derivative1", "modulename": "labanalysis.signalprocessing", "qualname": "winter_derivative1", "kind": "function", "doc": "<p>Return the first derivative of y.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>y_signal</strong> (np.ndarray):\nThe signal to be differentiated.</li>\n<li><strong>x_signal</strong> (np.ndarray or None, optional):\nThe optional signal from which y has to be differentiated (default: None).</li>\n<li><strong>time_diff</strong> (float or int, optional):\nThe difference between samples in y. Ignored if x_signal is provided.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The first derivative of y.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Winter DA. Biomechanics and Motor Control of Human Movement. Fourth Ed. Hoboken, New Jersey: John Wiley &amp; Sons Inc; 2009.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">y_signal</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">x_signal</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">time_diff</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.winter_derivative2", "modulename": "labanalysis.signalprocessing", "qualname": "winter_derivative2", "kind": "function", "doc": "<p>Return the second derivative of y.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>y_signal</strong> (np.ndarray):\nThe signal to be differentiated.</li>\n<li><strong>x_signal</strong> (np.ndarray or None, optional):\nThe optional signal from which y has to be differentiated (default: None).</li>\n<li><strong>time_diff</strong> (float or int, optional):\nThe difference between samples in y. Ignored if x_signal is provided.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The second derivative of y.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Winter DA. Biomechanics and Motor Control of Human Movement. Fourth Ed. Hoboken, New Jersey: John Wiley &amp; Sons Inc; 2009.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">y_signal</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">x_signal</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">time_diff</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.freedman_diaconis_bins", "modulename": "labanalysis.signalprocessing", "qualname": "freedman_diaconis_bins", "kind": "function", "doc": "<p>Digitize a 1D signal in bins defined according to the Freedman-Diaconis rule.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>y_signal</strong> (np.ndarray):\nThe signal to be digitized.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: An array with the same shape as y containing the index of the bin for each sample.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Freedman D, Diaconis P. (1981) On the histogram as a density estimator: L2 theory. Z. Wahrscheinlichkeitstheorie verw Gebiete 57: 453-476. doi: 10.1007/BF01025868</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">y_signal</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.fir_filt", "modulename": "labanalysis.signalprocessing", "qualname": "fir_filt", "kind": "function", "doc": "<p>Apply a FIR filter with the specified specs to the signal.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe signal to be filtered.</li>\n<li><strong>fcut</strong> (float, int, list, or tuple, optional):\nThe cutoff frequency of the filter.</li>\n<li><strong>fsamp</strong> (float or int, optional):\nThe sampling frequency of the signal.</li>\n<li><strong>order</strong> (int, optional):\nThe order of the filter.</li>\n<li><strong>ftype</strong> (str, optional):\nThe type of filter: \"bandpass\", \"lowpass\", \"highpass\", \"bandstop\".</li>\n<li><strong>wtype</strong> (str, optional):\nThe type of window to be applied.</li>\n<li><strong>pstyle</strong> (str, optional):\nThe type of padding style.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The filtered signal.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">fcut</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">fsamp</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">ftype</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;lowpass&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;highpass&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bandpass&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bandstop&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;lowpass&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">wtype</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;boxcar&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;triang&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;blackman&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hamming&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;hann&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bartlett&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;flattop&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;parzen&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bohman&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;blackmanharris&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;nuttall&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;barthann&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;cosine&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;exponential&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;tukey&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;taylor&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hamming&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">pstyle</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;constant&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;edge&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;linear_ramp&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;maximum&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mean&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;median&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;minimum&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;reflect&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;symmetric&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;wrap&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;edge&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.padwin", "modulename": "labanalysis.signalprocessing", "qualname": "padwin", "kind": "function", "doc": "<p>Pad the signal according to the given order and return the mask of indices defining each window on the signal.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe signal to be filtered.</li>\n<li><strong>order</strong> (int, optional):\nThe number of samples to be considered as averaging window.</li>\n<li><strong>pad_style</strong> (str, optional):\nThe type of padding style adopted before filtering.</li>\n<li><strong>offset</strong> (float, optional):\nValue in [0, 1] defining how the averaging window is obtained.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pad</strong> (np.ndarray):\nThe padded signal.</li>\n<li><strong>mask</strong> (np.ndarray):\nA 2D mask where each row denotes the indices of one window on the signal.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">pad_style</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;edge&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.thresholding_filt", "modulename": "labanalysis.signalprocessing", "qualname": "thresholding_filt", "kind": "function", "doc": "<p>Apply a thresholding filter where only those values being moving average filter to the signal.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe signal to be filtered.</li>\n<li><strong>factor</strong> (float or int, optional):\nThe factor multiplied by the standard deviation of the window to detect extremes.</li>\n<li><strong>robust</strong> (bool, optional):\nIf True, use median and MAD; otherwise, use mean and std.</li>\n<li><strong>order</strong> (int, optional):\nThe number of samples for the averaging window.</li>\n<li><strong>pad_style</strong> (str, optional):\nThe type of padding style.</li>\n<li><strong>offset</strong> (float, optional):\nValue in [0, 1] defining how the averaging window is obtained.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The filtered signal.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">factor</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">robust</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>,</span><span class=\"param\">\t<span class=\"n\">pad_style</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;edge&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.mean_filt", "modulename": "labanalysis.signalprocessing", "qualname": "mean_filt", "kind": "function", "doc": "<p>Apply a moving average filter to the signal.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe signal to be filtered.</li>\n<li><strong>order</strong> (int, optional):\nThe number of samples for the averaging window.</li>\n<li><strong>pad_style</strong> (str, optional):\nThe type of padding style.</li>\n<li><strong>offset</strong> (float, optional):\nValue in [0, 1] defining how the averaging window is obtained.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The filtered signal.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">pad_style</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;edge&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.median_filt", "modulename": "labanalysis.signalprocessing", "qualname": "median_filt", "kind": "function", "doc": "<p>Apply a median filter to the signal.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe signal to be filtered.</li>\n<li><strong>order</strong> (int, optional):\nThe number of samples for the averaging window.</li>\n<li><strong>pad_style</strong> (str, optional):\nThe type of padding style.</li>\n<li><strong>offset</strong> (float, optional):\nValue in [0, 1] defining how the averaging window is obtained.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The filtered signal.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">pad_style</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;edge&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.rms_filt", "modulename": "labanalysis.signalprocessing", "qualname": "rms_filt", "kind": "function", "doc": "<p>Obtain the root-mean-square of the signal with the given sampling window.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe signal to be filtered.</li>\n<li><strong>order</strong> (int, optional):\nThe number of samples for the averaging window.</li>\n<li><strong>pad_style</strong> (str, optional):\nThe type of padding style.</li>\n<li><strong>offset</strong> (float, optional):\nValue in [0, 1] defining how the averaging window is obtained.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The filtered signal.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">pad_style</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;edge&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">offset</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.5</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.butterworth_filt", "modulename": "labanalysis.signalprocessing", "qualname": "butterworth_filt", "kind": "function", "doc": "<p>Apply a Butterworth filter with the specified parameters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe signal to be filtered.</li>\n<li><strong>fcut</strong> (float, int, list, or tuple, optional):\nThe cutoff frequency of the filter.</li>\n<li><strong>fsamp</strong> (float or int, optional):\nThe sampling frequency of the signal.</li>\n<li><strong>order</strong> (int, optional):\nThe order of the filter.</li>\n<li><strong>ftype</strong> (str, optional):\nThe type of filter: \"bandpass\", \"lowpass\", \"highpass\", \"bandstop\".</li>\n<li><strong>phase_corrected</strong> (bool, optional):\nIf True, apply the filter twice in opposite directions to correct for phase lag.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The filtered signal.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">fcut</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>,</span><span class=\"param\">\t<span class=\"n\">fsamp</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">order</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span>,</span><span class=\"param\">\t<span class=\"n\">ftype</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;lowpass&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;highpass&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bandpass&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bandstop&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;lowpass&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">phase_corrected</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.cubicspline_interp", "modulename": "labanalysis.signalprocessing", "qualname": "cubicspline_interp", "kind": "function", "doc": "<p>Get the cubic spline interpolation of y.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>y_old</strong> (np.ndarray):\nThe data to be interpolated.</li>\n<li><strong>nsamp</strong> (int or None, optional):\nThe number of points for the interpolation.</li>\n<li><strong>x_old</strong> (np.ndarray or None, optional):\nThe x coordinates corresponding to y. Ignored if nsamp is provided.</li>\n<li><strong>x_new</strong> (np.ndarray or None, optional):\nThe new x coordinates for interpolation. Ignored if nsamp is provided.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The interpolated y axis.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">y_old</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">nsamp</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">x_old</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">x_new</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.residual_analysis", "modulename": "labanalysis.signalprocessing", "qualname": "residual_analysis", "kind": "function", "doc": "<p>Perform Winter's residual analysis of the input signal.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe signal to be investigated.</li>\n<li><strong>ffun</strong> (FunctionType or MethodType):\nThe filter to be used for the analysis.</li>\n<li><strong>fnum</strong> (int, optional):\nThe number of frequencies to be tested.</li>\n<li><strong>fmax</strong> (float or int or None, optional):\nThe maximum frequency to be tested.</li>\n<li><strong>nseg</strong> (int, optional):\nThe number of segments for fitting.</li>\n<li><strong>minsamp</strong> (int, optional):\nThe minimum number of elements per segment.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The suggested cutoff value.</li>\n<li><strong>np.ndarray</strong>: The tested frequencies.</li>\n<li><strong>np.ndarray</strong>: The residuals corresponding to the given frequency.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The signal is filtered over a range of frequencies and the sum of squared residuals (SSE) against the original signal is computed for each tested cut-off frequency. Next, a series of fitting lines are used to estimate the optimal disruption point defining the cut-off frequency optimally discriminating between noise and good quality signal.</p>\n\n<h6 id=\"references\">References</h6>\n\n<p>Winter DA 2009, Biomechanics and Motor Control of Human Movement. Fourth Ed. John Wiley &amp; Sons Inc, Hoboken, New Jersey (US).</p>\n\n<p>Lerman PM 1980, Fitting Segmented Regression Models by Grid Search.\n    Appl Stat. 29(1):77.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">ffun</span><span class=\"p\">:</span> <span class=\"n\">function</span> <span class=\"o\">|</span> <span class=\"n\">method</span>,</span><span class=\"param\">\t<span class=\"n\">fnum</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">fmax</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">nseg</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">minsamp</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.crossovers", "modulename": "labanalysis.signalprocessing", "qualname": "crossovers", "kind": "function", "doc": "<p>Detect the position of the crossing over points between K regression lines used to best fit the data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe signal to be fitted.</li>\n<li><strong>segments</strong> (int, optional):\nThe number of segments for fitting.</li>\n<li><strong>min_samples</strong> (int, optional):\nThe minimum number of elements per segment.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: Indices of the detected crossing over points.</li>\n<li><strong>np.ndarray</strong>: Slopes and intercepts of the fitting segments.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>Steps:\n    1) Get all segment combinations.\n    2) For each, calculate regression lines.\n    3) For each, calculate residuals.\n    4) Sort by residuals.\n    5) Return best combination.</p>\n\n<h6 id=\"references\">References</h6>\n\n<p>Lerman PM 1980, Fitting Segmented Regression Models by Grid Search. Appl Stat. 29(1):77.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">segments</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">min_samples</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">5</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.psd", "modulename": "labanalysis.signalprocessing", "qualname": "psd", "kind": "function", "doc": "<p>Compute the power spectrum of signal using FFT.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nA 1D numpy array.</li>\n<li><strong>fsamp</strong> (float or int, optional):\nThe sampling frequency (Hz) of the signal.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The frequency corresponding to each element of power.</li>\n<li><strong>np.ndarray</strong>: The power of each frequency.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">fsamp</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">1.0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.crossings", "modulename": "labanalysis.signalprocessing", "qualname": "crossings", "kind": "function", "doc": "<p>Detect the crossing points in arr compared to value.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe 1D signal from which the crossings have to be found.</li>\n<li><strong>value</strong> (int or float, optional):\nThe crossing value.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The samples corresponding to the crossings.</li>\n<li><strong>np.ndarray</strong>: The sign of the crossings.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mf\">0.0</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.xcorr", "modulename": "labanalysis.signalprocessing", "qualname": "xcorr", "kind": "function", "doc": "<p>Set the (multiple) auto/cross correlation of the data in y.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>sig1</strong> (np.ndarray):\nThe signal for auto/cross-correlation.</li>\n<li><strong>sig2</strong> (np.ndarray or None, optional):\nThe second signal for cross-correlation. If None, autocorrelation is computed.</li>\n<li><strong>biased</strong> (bool, optional):\nIf True, use the biased estimator.</li>\n<li><strong>full</strong> (bool, optional):\nIf True, report negative lags.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The auto/cross-correlation value.</li>\n<li><strong>np.ndarray</strong>: The lags in sample units.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">sig1</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">sig2</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">biased</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">full</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">tuple</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.outlyingness", "modulename": "labanalysis.signalprocessing", "qualname": "outlyingness", "kind": "function", "doc": "<p>Return the adjusted outlyingness factor.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nThe input array.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The outlyingness score of each element.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Hubert, M., &amp; Van der Veeken, S. (2008). Outlier detection for skewed data. Journal of Chemometrics: A Journal of the Chemometrics Society, 22(3\u20104), 235-246.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.gram_schmidt", "modulename": "labanalysis.signalprocessing", "qualname": "gram_schmidt", "kind": "function", "doc": "<p>applies Gram-Schmidt process to obtain ortonormal bases starting from\n3 vectors (i, j, k)</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>- i, j, k</strong> (array (N, 3)):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>- R</strong> (array (N, 3, 3)):</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">i</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">j</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.fillna", "modulename": "labanalysis.signalprocessing", "qualname": "fillna", "kind": "function", "doc": "<p>Fill missing values in the array or dataframe.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray | DataFrame | Series,):\narray with nans to be filled</li>\n<li><strong>value</strong> (float or None):\nthe value to be used for missing data replacement.\nif None, nearest neighbours imputation from the sklearn package is\nused.</li>\n<li><strong>n_regressors</strong> (int | None, default=None):\nNumber of regressors to be used in a Multiple Linear Regression model.\nThe model used the \"n_regressors\" most correlated columns of\narr as independent variables to fit the missing values. The procedure\nis repeated for each dimension separately.\nIf None, cubic spline interpolation is used on each column separately.</li>\n<li><strong>inplace</strong> (bool, optional):\nIf True, fill in place (for DataFrame/Series). If False, return a new object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>filled</strong> (np.ndarray, DataFrame, or Series):\nthe vector without missing data.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">series</span><span class=\"o\">.</span><span class=\"n\">Series</span>,</span><span class=\"param\">\t<span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">n_regressors</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">inplace</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.tkeo", "modulename": "labanalysis.signalprocessing", "qualname": "tkeo", "kind": "function", "doc": "<p>Obtain the discrete Teager-Keiser Energy of the input signal.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arr</strong> (np.ndarray):\nA 1D input signal.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>np.ndarray</strong>: The Teager-Keiser energy.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">) -> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.signalprocessing.to_reference_frame", "modulename": "labanalysis.signalprocessing", "qualname": "to_reference_frame", "kind": "function", "doc": "<p>Rotate a 3D array or dataframe to the provided reference frame.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>obj</strong> (DataFrame or np.ndarray):\nThe 3D array or dataframe to be rotated.</li>\n<li><strong>origin</strong> (np.ndarray or list, optional):\nCoordinates of the target origin.</li>\n<li><strong>axis1</strong> (np.ndarray or list, optional):\nOrientation of the first axis of the new reference frame.</li>\n<li><strong>axis2</strong> (np.ndarray or list, optional):\nOrientation of the second axis of the new reference frame.</li>\n<li><strong>axis3</strong> (np.ndarray or list, optional):\nOrientation of the third axis of the new reference frame.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>DataFrame or np.ndarray</strong>: The rotated data.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>,</span><span class=\"param\">\t<span class=\"n\">origin</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis1</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis2</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">axis3</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span> <span class=\"o\">|</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols", "modulename": "labanalysis.testprotocols", "kind": "module", "doc": "<p>testing module</p>\n"}, {"fullname": "labanalysis.testprotocols.balance", "modulename": "labanalysis.testprotocols.balance", "kind": "module", "doc": "<p>balance test module</p>\n"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest", "kind": "class", "doc": "<p>A dictionary-like container for Timeseries, TimeseriesRecord, and ForcePlatform objects,\nsupporting type filtering and DataFrame conversion.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vertical_axis</strong> (str, optional):\nThe label for the vertical axis (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nThe label for the anteroposterior axis (default \"Z\").</li>\n<li><strong>strip</strong> (bool, optional):\nIf True, remove leading/trailing rows or columns that are all NaN from all contained objects (default True).</li>\n<li><strong>reset_time</strong> (bool, optional):\nIf True, reset the time index to start at zero for all contained objects (default True).</li>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform to include in the record.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_vertical_axis</strong> (str):\nThe vertical axis label.</li>\n<li><strong>_antpos_axis</strong> (str):\nThe anteroposterior axis label.</li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>copy()\n    Return a deep copy of the TimeseriesRecord.\nstrip(axis=0, inplace=False)\n    Remove leading/trailing rows or columns that are all NaN from all contained objects.\nreset_time(inplace=False)\n    Reset the time index to start at zero for all contained objects.\napply(func, axis=0, inplace=False, *args, **kwargs)\n    Apply a function or ProcessingPipeline to all contained objects.\nfillna(value=None, n_regressors=None, inplace=False)\n    Fill NaNs for all contained objects.\nto_dataframe()\n    Convert the record to a pandas DataFrame with MultiIndex columns.\nfrom_tdf(filename)\n    Create a TimeseriesRecord from a TDF file.</p>\n", "bases": "labanalysis.frames.records.bodies.WholeBody, labanalysis.testprotocols.protocols.TestProtocol"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest.__init__", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">eyes</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;open&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;closed&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C:</span><span class=\"se\">\\\\</span><span class=\"s1\">Users</span><span class=\"se\">\\\\</span><span class=\"s1\">lzoffoli</span><span class=\"se\">\\\\</span><span class=\"s1\">Technogym SPA</span><span class=\"se\">\\\\</span><span class=\"s1\">Scientific Research - Documenti</span><span class=\"se\">\\\\</span><span class=\"s1\">github_repositories</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">testprotocols</span><span class=\"se\">\\\\</span><span class=\"s1\">normative_data</span><span class=\"se\">\\\\</span><span class=\"s1\">uprightbalance_normative_values.csv&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest.eyes", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest.eyes", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest.side", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest.side", "kind": "variable", "doc": "<p>Returns which side(s) have force data.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: \"bilateral\", \"left\", or \"right\".</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest.bodymass_kg", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest.bodymass_kg", "kind": "variable", "doc": "<p>Returns the subject's body mass in kilograms.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: Body mass in kg.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest.muscle_symmetry", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest.muscle_symmetry", "kind": "variable", "doc": "<p>Returns coordination and balance metrics from EMG signals.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: DataFrame with coordination and balance metrics, or empty if not available.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest.force_symmetry", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest.force_symmetry", "kind": "variable", "doc": "<p>Returns coordination and balance metrics from force signals.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: DataFrame with force coordination and balance metrics, or empty if not available.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest.area_of_stability_sqm", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest.area_of_stability_sqm", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest.set_eyes", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest.set_eyes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">eyes</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;open&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;closed&#39;</span><span class=\"p\">]</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest.copy", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest.copy", "kind": "function", "doc": "<p>Return a deep copy of the TimeseriesRecord.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: A new TimeseriesRecord object with the same data.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest.results", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest.results", "kind": "variable", "doc": "<p>Abstract method to return a summary of the test results.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, pandas.DataFrame]</strong>: Dictionary of summary tables for the test results.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.balance.UprightBalanceTest.from_tdf", "modulename": "labanalysis.testprotocols.balance", "qualname": "UprightBalanceTest.from_tdf", "kind": "function", "doc": "<p>Create a TimeseriesRecord from a TDF file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong> (str):\nPath to the TDF file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: A TimeseriesRecord populated with the data from the TDF file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">eyes</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;open&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;closed&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C:</span><span class=\"se\">\\\\</span><span class=\"s1\">Users</span><span class=\"se\">\\\\</span><span class=\"s1\">lzoffoli</span><span class=\"se\">\\\\</span><span class=\"s1\">Technogym SPA</span><span class=\"se\">\\\\</span><span class=\"s1\">Scientific Research - Documenti</span><span class=\"se\">\\\\</span><span class=\"s1\">github_repositories</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">testprotocols</span><span class=\"se\">\\\\</span><span class=\"s1\">normative_data</span><span class=\"se\">\\\\</span><span class=\"s1\">uprightbalance_normative_values.csv&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.balance.PlankBalanceTest", "modulename": "labanalysis.testprotocols.balance", "qualname": "PlankBalanceTest", "kind": "class", "doc": "<p>A dictionary-like container for Timeseries, TimeseriesRecord, and ForcePlatform objects,\nsupporting type filtering and DataFrame conversion.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vertical_axis</strong> (str, optional):\nThe label for the vertical axis (default \"Y\").</li>\n<li><strong>anteroposterior_axis</strong> (str, optional):\nThe label for the anteroposterior axis (default \"Z\").</li>\n<li><strong>strip</strong> (bool, optional):\nIf True, remove leading/trailing rows or columns that are all NaN from all contained objects (default True).</li>\n<li><strong>reset_time</strong> (bool, optional):\nIf True, reset the time index to start at zero for all contained objects (default True).</li>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform to include in the record.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_vertical_axis</strong> (str):\nThe vertical axis label.</li>\n<li><strong>_antpos_axis</strong> (str):\nThe anteroposterior axis label.</li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>copy()\n    Return a deep copy of the TimeseriesRecord.\nstrip(axis=0, inplace=False)\n    Remove leading/trailing rows or columns that are all NaN from all contained objects.\nreset_time(inplace=False)\n    Reset the time index to start at zero for all contained objects.\napply(func, axis=0, inplace=False, *args, **kwargs)\n    Apply a function or ProcessingPipeline to all contained objects.\nfillna(value=None, n_regressors=None, inplace=False)\n    Fill NaNs for all contained objects.\nto_dataframe()\n    Convert the record to a pandas DataFrame with MultiIndex columns.\nfrom_tdf(filename)\n    Create a TimeseriesRecord from a TDF file.</p>\n", "bases": "UprightBalanceTest"}, {"fullname": "labanalysis.testprotocols.balance.PlankBalanceTest.__init__", "modulename": "labanalysis.testprotocols.balance", "qualname": "PlankBalanceTest.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span>,</span><span class=\"param\">\t<span class=\"n\">eyes</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;open&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;closed&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C:</span><span class=\"se\">\\\\</span><span class=\"s1\">Users</span><span class=\"se\">\\\\</span><span class=\"s1\">lzoffoli</span><span class=\"se\">\\\\</span><span class=\"s1\">Technogym SPA</span><span class=\"se\">\\\\</span><span class=\"s1\">Scientific Research - Documenti</span><span class=\"se\">\\\\</span><span class=\"s1\">github_repositories</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">testprotocols</span><span class=\"se\">\\\\</span><span class=\"s1\">normative_data</span><span class=\"se\">\\\\</span><span class=\"s1\">plankbalance_normative_values.csv&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.testprotocols.balance.PlankBalanceTest.copy", "modulename": "labanalysis.testprotocols.balance", "qualname": "PlankBalanceTest.copy", "kind": "function", "doc": "<p>Return a deep copy of the TimeseriesRecord.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: A new TimeseriesRecord object with the same data.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.balance.PlankBalanceTest.from_tdf", "modulename": "labanalysis.testprotocols.balance", "qualname": "PlankBalanceTest.from_tdf", "kind": "function", "doc": "<p>Create a TimeseriesRecord from a TDF file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong> (str):\nPath to the TDF file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: A TimeseriesRecord populated with the data from the TDF file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">eyes</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;open&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;closed&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C:</span><span class=\"se\">\\\\</span><span class=\"s1\">Users</span><span class=\"se\">\\\\</span><span class=\"s1\">lzoffoli</span><span class=\"se\">\\\\</span><span class=\"s1\">Technogym SPA</span><span class=\"se\">\\\\</span><span class=\"s1\">Scientific Research - Documenti</span><span class=\"se\">\\\\</span><span class=\"s1\">github_repositories</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">testprotocols</span><span class=\"se\">\\\\</span><span class=\"s1\">normative_data</span><span class=\"se\">\\\\</span><span class=\"s1\">plankbalance_normative_values.csv&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.balance.PlankBalanceTest.force_symmetry", "modulename": "labanalysis.testprotocols.balance", "qualname": "PlankBalanceTest.force_symmetry", "kind": "variable", "doc": "<p>Returns coordination and balance metrics from force signals.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pd.DataFrame</strong>: DataFrame with force coordination and balance metrics,\nor empty if not available.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.gaittests", "modulename": "labanalysis.testprotocols.gaittests", "kind": "module", "doc": "<p>gait tests module</p>\n"}, {"fullname": "labanalysis.testprotocols.gaittests.runningtest", "modulename": "labanalysis.testprotocols.gaittests.runningtest", "kind": "module", "doc": "<p>Running test module</p>\n"}, {"fullname": "labanalysis.testprotocols.gaittests.runningtest.RunningTest", "modulename": "labanalysis.testprotocols.gaittests.runningtest", "qualname": "RunningTest", "kind": "class", "doc": "<p>Represents a running test.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>frame</strong> (StateFrame):\nA stateframe object containing all the available kinematic, kinetic\nand EMG data related to the test.</li>\n<li><strong>algorithm</strong> (Literal['kinematics', 'kinetics'], optional):\nAlgorithm used for gait cycle detection. 'kinematics' uses marker data,\n'kinetics' uses force platform data.</li>\n<li><strong>left_heel</strong> (Point3D or None, optional):\nThe left heel marker data.</li>\n<li><strong>right_heel</strong> (Point3D or None, optional):\nThe right heel marker data.</li>\n<li><strong>left_toe</strong> (Point3D or None, optional):\nThe left toe marker data.</li>\n<li><strong>right_toe</strong> (Point3D or None, optional):\nThe right toe marker data.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None, optional):\nThe left metatarsal head marker data.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None, optional):\nThe right metatarsal head marker data.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None, optional):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> (Literal['X', 'Y', 'Z'], optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> (Literal['X', 'Y', 'Z'], optional):\nThe anterior-posterior axis.</li>\n</ul>\n", "bases": "labanalysis.frames.records.locomotion.running.RunningExercise, labanalysis.testprotocols.protocols.TestProtocol"}, {"fullname": "labanalysis.testprotocols.gaittests.runningtest.RunningTest.__init__", "modulename": "labanalysis.testprotocols.gaittests.runningtest", "qualname": "RunningTest.__init__", "kind": "function", "doc": "<p>Initialize a RunningTest instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}, optional):\nAlgorithm used for gait cycle detection. 'kinematics' uses marker data, 'kinetics' uses force platform data.</li>\n<li><strong>left_heel, right_heel, left_toe, right_toe</strong> (Point3D or None, optional):\nMarker data for the respective anatomical points.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None, optional):\nMarker data for the left metatarsal head.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None, optional):\nMarker data for the right metatarsal head.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None, optional):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>process_inputs</strong> (bool, optional):\nIf True, process the input data.</li>\n<li><strong>**extra_signals</strong> (Signal1D, Signal3D, EMGSignal, Point3D, ForcePlatform):\nAdditional signals to include.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematics&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.testprotocols.gaittests.runningtest.RunningTest.results", "modulename": "labanalysis.testprotocols.gaittests.runningtest", "qualname": "RunningTest.results", "kind": "variable", "doc": "<p>Abstract method to return a summary of the test results.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, pandas.DataFrame]</strong>: Dictionary of summary tables for the test results.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.gaittests.runningtest.RunningTest.from_tdf", "modulename": "labanalysis.testprotocols.gaittests.runningtest", "qualname": "RunningTest.from_tdf", "kind": "function", "doc": "<p>Generate a GaitTest object directly from a .tdf file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nPath to a \".tdf\" file.</li>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}, optional):\nThe cycle detection algorithm.</li>\n<li><strong>left_heel</strong> (str or None, optional):\nName of the left heel marker in the tdf file.</li>\n<li><strong>right_heel</strong> (str or None, optional):\nName of the right heel marker in the tdf file.</li>\n<li><strong>left_toe</strong> (str or None, optional):\nName of the left toe marker in the tdf file.</li>\n<li><strong>right_toe</strong> (str or None, optional):\nName of the right toe marker in the tdf file.</li>\n<li><strong>left_metatarsal_head</strong> (str or None, optional):\nName of the left metatarsal head marker in the tdf file.</li>\n<li><strong>right_metatarsal_head</strong> (str or None, optional):\nName of the right metatarsal head marker in the tdf file.</li>\n<li><strong>ground_reaction_force</strong> (str or None, optional):\nName of the ground reaction force data in the tdf file.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>process_inputs</strong> (bool, optional):\nIf True, the ProcessPipeline integrated within this instance is\napplied. Otherwise raw data are retained.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>GaitTest</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematics&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.gaittests.walkingtest", "modulename": "labanalysis.testprotocols.gaittests.walkingtest", "kind": "module", "doc": "<p>Walking test module</p>\n"}, {"fullname": "labanalysis.testprotocols.gaittests.walkingtest.WalkingTest", "modulename": "labanalysis.testprotocols.gaittests.walkingtest", "qualname": "WalkingTest", "kind": "class", "doc": "<p>Represents a walking test.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>frame</strong> (StateFrame):\nA stateframe object containing all the available kinematic, kinetic and EMG data related to the test.</li>\n<li><strong>algorithm</strong> (Literal['kinematics', 'kinetics'], optional):\nAlgorithm used for gait cycle detection. 'kinematics' uses marker data, 'kinetics' uses force platform data.</li>\n<li><strong>left_heel</strong> (Point3D or None, optional):\nThe left heel marker data.</li>\n<li><strong>right_heel</strong> (Point3D or None, optional):\nThe right heel marker data.</li>\n<li><strong>left_toe</strong> (Point3D or None, optional):\nThe left toe marker data.</li>\n<li><strong>right_toe</strong> (Point3D or None, optional):\nThe right toe marker data.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None, optional):\nThe left metatarsal head marker data.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None, optional):\nThe right metatarsal head marker data.</li>\n<li><strong>ground_reaction_force</strong> (ForcePlatform or None, optional):\nGround reaction force data.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> (Literal['X', 'Y', 'Z'], optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> (Literal['X', 'Y', 'Z'], optional):\nThe anterior-posterior axis.</li>\n</ul>\n", "bases": "labanalysis.frames.records.locomotion.walking.WalkingExercise, labanalysis.testprotocols.protocols.TestProtocol"}, {"fullname": "labanalysis.testprotocols.gaittests.walkingtest.WalkingTest.__init__", "modulename": "labanalysis.testprotocols.gaittests.walkingtest", "qualname": "WalkingTest.__init__", "kind": "function", "doc": "<p>Initialize a WalkingTest instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}, optional):\nAlgorithm used for gait cycle detection. 'kinematics' uses marker data, 'kinetics' uses force platform data.</li>\n<li><strong>left_heel</strong> (Point3D or None, optional):\nMarker data for the left heel.</li>\n<li><strong>right_heel</strong> (Point3D or None, optional):\nMarker data for the right heel.</li>\n<li><strong>left_toe</strong> (Point3D or None, optional):\nMarker data for the left toe.</li>\n<li><strong>right_toe</strong> (Point3D or None, optional):\nMarker data for the right toe.</li>\n<li><strong>left_metatarsal_head</strong> (Point3D or None, optional):\nMarker data for the left metatarsal head.</li>\n<li><strong>right_metatarsal_head</strong> (Point3D or None, optional):\nMarker data for the right metatarsal head.</li>\n<li><strong>grf</strong> (ForcePlatform or None, optional):\nGround reaction force data.</li>\n<li><strong>grf_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>process_inputs</strong> (bool, optional):\nIf True, process the input data.</li>\n<li><strong>**extra_signals</strong> (Signal1D, Signal3D, EMGSignal, Point3D, ForcePlatform):\nAdditional signals to include.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematics&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal3d</span><span class=\"o\">.</span><span class=\"n\">Signal3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">point3d</span><span class=\"o\">.</span><span class=\"n\">Point3D</span> <span class=\"o\">|</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">forceplatforms</span><span class=\"o\">.</span><span class=\"n\">ForcePlatform</span></span>)</span>"}, {"fullname": "labanalysis.testprotocols.gaittests.walkingtest.WalkingTest.results", "modulename": "labanalysis.testprotocols.gaittests.walkingtest", "qualname": "WalkingTest.results", "kind": "variable", "doc": "<p>Abstract method to return a summary of the test results.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, pandas.DataFrame]</strong>: Dictionary of summary tables for the test results.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.gaittests.walkingtest.WalkingTest.from_tdf", "modulename": "labanalysis.testprotocols.gaittests.walkingtest", "qualname": "WalkingTest.from_tdf", "kind": "function", "doc": "<p>Generate a GaitTest object directly from a .tdf file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nPath to a \".tdf\" file.</li>\n<li><strong>algorithm</strong> ({'kinematics', 'kinetics'}, optional):\nThe cycle detection algorithm.</li>\n<li><strong>left_heel</strong> (str or None, optional):\nName of the left heel marker in the tdf file.</li>\n<li><strong>right_heel</strong> (str or None, optional):\nName of the right heel marker in the tdf file.</li>\n<li><strong>left_toe</strong> (str or None, optional):\nName of the left toe marker in the tdf file.</li>\n<li><strong>right_toe</strong> (str or None, optional):\nName of the right toe marker in the tdf file.</li>\n<li><strong>left_metatarsal_head</strong> (str or None, optional):\nName of the left metatarsal head marker in the tdf file.</li>\n<li><strong>right_metatarsal_head</strong> (str or None, optional):\nName of the right metatarsal head marker in the tdf file.</li>\n<li><strong>ground_reaction_force</strong> (str or None, optional):\nName of the ground reaction force data in the tdf file.</li>\n<li><strong>ground_reaction_force_threshold</strong> (float or int, optional):\nMinimum ground reaction force for contact detection.</li>\n<li><strong>height_threshold</strong> (float or int, optional):\nMaximum vertical height for contact detection.</li>\n<li><strong>vertical_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe vertical axis.</li>\n<li><strong>antpos_axis</strong> ({'X', 'Y', 'Z'}, optional):\nThe anterior-posterior axis.</li>\n<li><strong>process_inputs</strong> (bool, optional):\nIf True, the ProcessPipeline integrated within this instance is\napplied. Otherwise raw data are retained.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>GaitTest</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">algorithm</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;kinematics&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;kinetics&#39;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;kinematics&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">ground_reaction_force_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>,</span><span class=\"param\">\t<span class=\"n\">height_threshold</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mf\">0.05</span>,</span><span class=\"param\">\t<span class=\"n\">left_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_hand_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_foot_ground_reaction_force</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_heel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_heel</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_toe</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_toe</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_metatarsal_head</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_metatarsal_head</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_ankle_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_ankle_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_knee_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_knee_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_throcanter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_throcanter</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_asis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_asis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_psis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_psis</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_anterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_shoulder_posterior</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_elbow_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_elbow_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">left_wrist_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_medial</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">right_wrist_lateral</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">s2</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">l2</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">c7</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">sc</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.jumptests", "modulename": "labanalysis.testprotocols.jumptests", "kind": "module", "doc": "<p>jump tests library</p>\n"}, {"fullname": "labanalysis.testprotocols.jumptests.jumptest", "modulename": "labanalysis.testprotocols.jumptests.jumptest", "kind": "module", "doc": "<p>singlejumps test module</p>\n"}, {"fullname": "labanalysis.testprotocols.jumptests.jumptest.JumpTest", "modulename": "labanalysis.testprotocols.jumptests.jumptest", "qualname": "JumpTest", "kind": "class", "doc": "<p>Protocol for lab test classes.</p>\n\n<p>Defines the required interface for test protocol implementations, including participant data,\nnormative data, and methods for saving/loading and summarizing results.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>participant</strong> (Participant):\nThe participant associated with the test.</li>\n<li><strong>normative_data_path</strong> (str, optional):\nPath to a CSV file containing normative data.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_normative_data_path</strong> (str):\nPath to the CSV file with normative data.</li>\n<li><strong>_participant</strong> (Participant):\nThe participant object.</li>\n</ul>\n\n<h6 id=\"properties\">Properties</h6>\n\n<p>participant : Participant\n    The participant associated with the test.\nname : str\n    The name of the test (class name).\nnormative_data_path : str\n    Path to the CSV file with normative data.\nnormative_values : pandas.DataFrame\n    Normative values loaded from the CSV file.</p>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>save(file_path: str)\n    Save the test object to a file.\nload(file_path: str)\n    Load a test object from a file.\nresult_tables() -> dict[str, pd.DataFrame]\n    Abstract method. Return a summary of the test results as a dictionary of pandas DataFrames.\nprocessing_pipeline\n    Return the default processing pipeline for this test.\nraw_data_table()\n    Return a table containing the raw data (optional, may raise NotImplementedError).\nraw_data_figure()\n    Return a figure displaying the raw data (optional, may raise NotImplementedError).</p>\n", "bases": "labanalysis.testprotocols.protocols.TestProtocol"}, {"fullname": "labanalysis.testprotocols.jumptests.jumptest.JumpTest.__init__", "modulename": "labanalysis.testprotocols.jumptests.jumptest", "qualname": "JumpTest.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">jumps</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">jumping</span><span class=\"o\">.</span><span class=\"n\">SingleJump</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span>)</span>"}, {"fullname": "labanalysis.testprotocols.jumptests.jumptest.JumpTest.jumps", "modulename": "labanalysis.testprotocols.jumptests.jumptest", "qualname": "JumpTest.jumps", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.testprotocols.jumptests.jumptest.JumpTest.add_jump", "modulename": "labanalysis.testprotocols.jumptests.jumptest", "qualname": "JumpTest.add_jump", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">jump</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">records</span><span class=\"o\">.</span><span class=\"n\">jumping</span><span class=\"o\">.</span><span class=\"n\">SingleJump</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.jumptests.jumptest.JumpTest.copy", "modulename": "labanalysis.testprotocols.jumptests.jumptest", "qualname": "JumpTest.copy", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.jumptests.jumptest.JumpTest.results", "modulename": "labanalysis.testprotocols.jumptests.jumptest", "qualname": "JumpTest.results", "kind": "variable", "doc": "<p>Abstract method to return a summary of the test results.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, pandas.DataFrame]</strong>: Dictionary of summary tables for the test results.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.normative_data", "modulename": "labanalysis.testprotocols.normative_data", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "labanalysis.testprotocols.normative_data.paths", "modulename": "labanalysis.testprotocols.normative_data.paths", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "labanalysis.testprotocols.normative_data.paths.PLANKBALANCE_NORMATIVE_DATA_PATH", "modulename": "labanalysis.testprotocols.normative_data.paths", "qualname": "PLANKBALANCE_NORMATIVE_DATA_PATH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;C:\\\\Users\\\\lzoffoli\\\\Technogym SPA\\\\Scientific Research - Documenti\\\\github_repositories\\\\labanalysis\\\\labanalysis\\\\testprotocols\\\\normative_data\\\\plankbalance_normative_values.csv&#x27;"}, {"fullname": "labanalysis.testprotocols.normative_data.paths.UPRIGHTBALANCE_NORMATIVE_DATA_PATH", "modulename": "labanalysis.testprotocols.normative_data.paths", "qualname": "UPRIGHTBALANCE_NORMATIVE_DATA_PATH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;C:\\\\Users\\\\lzoffoli\\\\Technogym SPA\\\\Scientific Research - Documenti\\\\github_repositories\\\\labanalysis\\\\labanalysis\\\\testprotocols\\\\normative_data\\\\uprightbalance_normative_values.csv&#x27;"}, {"fullname": "labanalysis.testprotocols.normative_data.paths.SQUATJUMP_NORMATIVE_DATA_PATH", "modulename": "labanalysis.testprotocols.normative_data.paths", "qualname": "SQUATJUMP_NORMATIVE_DATA_PATH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;C:\\\\Users\\\\lzoffoli\\\\Technogym SPA\\\\Scientific Research - Documenti\\\\github_repositories\\\\labanalysis\\\\labanalysis\\\\testprotocols\\\\normative_data\\\\sj_normative_values.csv&#x27;"}, {"fullname": "labanalysis.testprotocols.normative_data.paths.COUNTERMOVEMENTJUMP_NORMATIVE_DATA_PATH", "modulename": "labanalysis.testprotocols.normative_data.paths", "qualname": "COUNTERMOVEMENTJUMP_NORMATIVE_DATA_PATH", "kind": "variable", "doc": "<p></p>\n", "default_value": "&#x27;C:\\\\Users\\\\lzoffoli\\\\Technogym SPA\\\\Scientific Research - Documenti\\\\github_repositories\\\\labanalysis\\\\labanalysis\\\\testprotocols\\\\normative_data\\\\cmj_normative_values.csv&#x27;"}, {"fullname": "labanalysis.testprotocols.protocols", "modulename": "labanalysis.testprotocols.protocols", "kind": "module", "doc": "<p>base test module containing classes and functions used to perform lab tests.</p>\n"}, {"fullname": "labanalysis.testprotocols.protocols.TestProtocol", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestProtocol", "kind": "class", "doc": "<p>Protocol for lab test classes.</p>\n\n<p>Defines the required interface for test protocol implementations, including participant data,\nnormative data, and methods for saving/loading and summarizing results.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>participant</strong> (Participant):\nThe participant associated with the test.</li>\n<li><strong>normative_data_path</strong> (str, optional):\nPath to a CSV file containing normative data.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_normative_data_path</strong> (str):\nPath to the CSV file with normative data.</li>\n<li><strong>_participant</strong> (Participant):\nThe participant object.</li>\n</ul>\n\n<h6 id=\"properties\">Properties</h6>\n\n<p>participant : Participant\n    The participant associated with the test.\nname : str\n    The name of the test (class name).\nnormative_data_path : str\n    Path to the CSV file with normative data.\nnormative_values : pandas.DataFrame\n    Normative values loaded from the CSV file.</p>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>save(file_path: str)\n    Save the test object to a file.\nload(file_path: str)\n    Load a test object from a file.\nresult_tables() -> dict[str, pd.DataFrame]\n    Abstract method. Return a summary of the test results as a dictionary of pandas DataFrames.\nprocessing_pipeline\n    Return the default processing pipeline for this test.\nraw_data_table()\n    Return a table containing the raw data (optional, may raise NotImplementedError).\nraw_data_figure()\n    Return a figure displaying the raw data (optional, may raise NotImplementedError).</p>\n", "bases": "typing.Protocol"}, {"fullname": "labanalysis.testprotocols.protocols.TestProtocol.__init__", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestProtocol.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "labanalysis.testprotocols.protocols.TestProtocol.set_normative_data_path", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestProtocol.set_normative_data_path", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.TestProtocol.set_participant", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestProtocol.set_participant", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.TestProtocol.participant", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestProtocol.participant", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.testprotocols.protocols.TestProtocol.name", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestProtocol.name", "kind": "variable", "doc": "<p>Returns the test name.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: The name of the test.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.TestProtocol.normative_data_path", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestProtocol.normative_data_path", "kind": "variable", "doc": "<p>Returns the path to the CSV file containing normative data.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: The path to the CSV file containing normative data.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.TestProtocol.normative_values", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestProtocol.normative_values", "kind": "variable", "doc": "<p>Returns the normative values loaded from the CSV file.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pandas.DataFrame</strong>: The normative values loaded from the CSV file.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.TestProtocol.save", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestProtocol.save", "kind": "function", "doc": "<p>Save the test object to a file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path</strong> (str):\nPath where to save the file. The file extension should match the test name.\nIf not, the appropriate extension is appended.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.TestProtocol.load", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestProtocol.load", "kind": "function", "doc": "<p>Load a test object from a file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path</strong> (str):\nPath to the file to load. The file extension must match the test name.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TestProtocol</strong>: The loaded test object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If file_path is not a string or does not have the correct extension.</li>\n<li><strong>RuntimeError</strong>: If loading fails.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.TestProtocol.results", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestProtocol.results", "kind": "function", "doc": "<p>Abstract method to return a summary of the test results.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, pandas.DataFrame]</strong>: Dictionary of summary tables for the test results.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.TestBattery", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestBattery", "kind": "class", "doc": "<p>Protocol for lab test classes.</p>\n\n<p>Defines the required interface for test protocol implementations, including participant data,\nnormative data, and methods for saving/loading and summarizing results.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>participant</strong> (Participant):\nThe participant associated with the test.</li>\n<li><strong>normative_data_path</strong> (str, optional):\nPath to a CSV file containing normative data.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>_normative_data_path</strong> (str):\nPath to the CSV file with normative data.</li>\n<li><strong>_participant</strong> (Participant):\nThe participant object.</li>\n</ul>\n\n<h6 id=\"properties\">Properties</h6>\n\n<p>participant : Participant\n    The participant associated with the test.\nname : str\n    The name of the test (class name).\nnormative_data_path : str\n    Path to the CSV file with normative data.\nnormative_values : pandas.DataFrame\n    Normative values loaded from the CSV file.</p>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>save(file_path: str)\n    Save the test object to a file.\nload(file_path: str)\n    Load a test object from a file.\nresult_tables() -> dict[str, pd.DataFrame]\n    Abstract method. Return a summary of the test results as a dictionary of pandas DataFrames.\nprocessing_pipeline\n    Return the default processing pipeline for this test.\nraw_data_table()\n    Return a table containing the raw data (optional, may raise NotImplementedError).\nraw_data_figure()\n    Return a figure displaying the raw data (optional, may raise NotImplementedError).</p>\n", "bases": "typing.Protocol"}, {"fullname": "labanalysis.testprotocols.protocols.TestBattery.__init__", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestBattery.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "labanalysis.testprotocols.protocols.TestBattery.tests", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestBattery.tests", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "labanalysis.testprotocols.protocols.TestBattery.name", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestBattery.name", "kind": "variable", "doc": "<p>Returns the test name.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: The name of the test.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.TestBattery.save", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestBattery.save", "kind": "function", "doc": "<p>Save the test object to a file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path</strong> (str):\nPath where to save the file. The file extension should match the test name.\nIf not, the appropriate extension is appended.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.TestBattery.load", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestBattery.load", "kind": "function", "doc": "<p>Load a test object from a file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_path</strong> (str):\nPath to the file to load. The file extension must match the test name.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TestProtocol</strong>: The loaded test object.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If file_path is not a string or does not have the correct extension.</li>\n<li><strong>RuntimeError</strong>: If loading fails.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">cls</span>, </span><span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.TestBattery.results", "modulename": "labanalysis.testprotocols.protocols", "qualname": "TestBattery.results", "kind": "function", "doc": "<p>Abstract method to return a summary of the test results.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, pandas.DataFrame]</strong>: Dictionary of summary tables for the test results.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.Participant", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant", "kind": "class", "doc": "<p>Represents a participant in a lab test.</p>\n\n<p>Stores participant data such as name, gender, height, weight, age, birthdate, and test recording date.\nProvides methods and properties to access and compute participant metrics.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>surname</strong> (str, optional):\nThe participant's surname.</li>\n<li><strong>name</strong> (str, optional):\nThe participant's name.</li>\n<li><strong>gender</strong> (str, optional):\nThe participant's gender.</li>\n<li><strong>height</strong> (int or float, optional):\nThe participant's height in centimeters. Will be converted to meters.</li>\n<li><strong>weight</strong> (int or float, optional):\nThe participant's weight in kilograms.</li>\n<li><strong>age</strong> (int or float, optional):\nThe participant's age in years.</li>\n<li><strong>birthdate</strong> (datetime.date, optional):\nThe participant's birth date.</li>\n<li><strong>recordingdate</strong> (datetime.date, optional):\nThe date when the test was recorded. Defaults to the current date.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>units</strong> (dict):\nUnits of measurement for each attribute.</li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>set_recordingdate(recordingdate)\n    Set the test recording date.\nset_surname(surname)\n    Set the participant's surname.\nset_name(name)\n    Set the participant's name.\nset_gender(gender)\n    Set the participant's gender.\nset_height(height)\n    Set the participant's height in meters.\nset_weight(weight)\n    Set the participant's weight in kilograms.\nset_age(age)\n    Set the participant's age in years.\nset_birthdate(birthdate)\n    Set the participant's birth date.\ncopy()\n    Return a copy of the object.</p>\n\n<h6 id=\"properties\">Properties</h6>\n\n<p>surname : str or None\n    The participant's surname.\nname : str or None\n    The participant's name.\ngender : str or None\n    The participant's gender.\nheight : float or None\n    The participant's height in meters.\nweight : float or None\n    The participant's weight in kilograms.\nbirthdate : datetime.date or None\n    The participant's birth date.\nrecordingdate : datetime.date or None\n    The test recording date.\nbmi : float or None\n    The participant's BMI in kg/m^2.\nfullname : str\n    The participant's full name.\nage : int or None\n    The participant's age in years.\nhrmax : float or None\n    The maximum theoretical heart rate according to Gellish.\nunits : dict\n    Units of measurement for each attribute.\ndict : dict\n    Dictionary representation of the participant's data.\nseries : pandas.Series\n    pandas.Series representation of the participant's data.\ndataframe : pandas.DataFrame\n    pandas.DataFrame representation of the participant's data.</p>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.__init__", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.__init__", "kind": "function", "doc": "<p>Initializes a Participant object.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">surname</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">gender</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">weight</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">birthdate</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">recordingdate</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">method</span> <span class=\"n\">date</span> <span class=\"n\">of</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.set_recordingdate", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.set_recordingdate", "kind": "function", "doc": "<p>Sets the test recording date.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>recordingdate</strong> (datetime.date or datetime.datetime or None):\nThe test recording date.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">recordingdate</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.set_surname", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.set_surname", "kind": "function", "doc": "<p>Sets the participant's surname.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>surname</strong> (str or None):\nThe surname of the participant.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">surname</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.set_name", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.set_name", "kind": "function", "doc": "<p>Sets the participant's name.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str or None):\nThe name of the participant.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.set_gender", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.set_gender", "kind": "function", "doc": "<p>Sets the participant's gender.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>gender</strong> (str or None):\nThe gender of the participant.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">gender</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.set_height", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.set_height", "kind": "function", "doc": "<p>Sets the participant's height in meters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>height</strong> (int or float or None):\nThe height of the participant.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">height</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.set_weight", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.set_weight", "kind": "function", "doc": "<p>Sets the participant's weight in kg.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>weight</strong> (int or float or None):\nThe weight of the participant.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">weight</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.set_age", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.set_age", "kind": "function", "doc": "<p>Sets the participant's age in years.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>age</strong> (int or float or None):\nThe age of the participant.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.set_birthdate", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.set_birthdate", "kind": "function", "doc": "<p>Sets the participant's birth date.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>birthdate</strong> (datetime.date or None):\nThe birth date of the participant.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">birthdate</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span> <span class=\"o\">|</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.surname", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.surname", "kind": "variable", "doc": "<p>Gets the participant surname.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str or None</strong>: The participant's surname.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.name", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.name", "kind": "variable", "doc": "<p>Gets the participant name.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str or None</strong>: The participant's name.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.gender", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.gender", "kind": "variable", "doc": "<p>Gets the participant gender.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str or None</strong>: The participant's gender.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.height", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.height", "kind": "variable", "doc": "<p>Gets the participant height in meters.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float or None</strong>: The participant's height in meters.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.weight", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.weight", "kind": "variable", "doc": "<p>Gets the participant weight in kg.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float or None</strong>: The participant's weight in kg.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.birthdate", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.birthdate", "kind": "variable", "doc": "<p>Gets the participant birth date.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>datetime.date or None</strong>: The participant's birth date.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.recordingdate", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.recordingdate", "kind": "variable", "doc": "<p>Gets the test recording date.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>datetime.date or None</strong>: The test recording date.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.bmi", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.bmi", "kind": "variable", "doc": "<p>Gets the participant BMI in kg/m^2.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float or None</strong>: The participant's BMI in kg/m^2. Returns None if height or weight is None.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.fullname", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.fullname", "kind": "variable", "doc": "<p>Gets the participant full name.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str</strong>: The participant's full name.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.age", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.age", "kind": "variable", "doc": "<p>Gets the age of the participant in years.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>int or None</strong>: The age of the participant in years. Returns None if age or birthdate is None.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.hrmax", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.hrmax", "kind": "variable", "doc": "<p>Gets the maximum theoretical heart rate according to Gellish.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float or None</strong>: The maximum theoretical heart rate. Returns None if age is None.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<p>Gellish RL, Goslin BR, Olson RE, McDonald A, Russi GD, Moudgil VK.\n    Longitudinal modeling of the relationship between age and maximal\n    heart rate.\n    Med Sci Sports Exerc. 2007;39(5):822-9.\n    doi: 10.1097/mss.0b013e31803349c6.</p>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.units", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.units", "kind": "variable", "doc": "<p>Returns the unit of measurement of the stored data.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict</strong>: A dictionary containing the units of measurement for each attribute.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.copy", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.copy", "kind": "function", "doc": "<p>Returns a copy of the object.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Participant</strong>: A copy of the Participant object.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.dict", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.dict", "kind": "variable", "doc": "<p>Returns a dict representation of self</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict</strong>: A dictionary representation of the Participant object.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.series", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.series", "kind": "variable", "doc": "<p>Returns a pandas.Series representation of self</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pandas.Series</strong>: A pandas.Series representation of the Participant object.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.protocols.Participant.dataframe", "modulename": "labanalysis.testprotocols.protocols", "qualname": "Participant.dataframe", "kind": "variable", "doc": "<p>Returns a pandas.DataFrame representation of self</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>pandas.DataFrame</strong>: A pandas.DataFrame representation of the Participant object.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.strength", "modulename": "labanalysis.testprotocols.strength", "kind": "module", "doc": "<p>strengthtests module</p>\n"}, {"fullname": "labanalysis.testprotocols.strength.isokinetictest", "modulename": "labanalysis.testprotocols.strength.isokinetictest", "kind": "module", "doc": "<p>isokinetic test module</p>\n"}, {"fullname": "labanalysis.testprotocols.strength.isokinetictest.Isokinetic1RMTest", "modulename": "labanalysis.testprotocols.strength.isokinetictest", "qualname": "Isokinetic1RMTest", "kind": "class", "doc": "<p>Isokinetic Test 1RM instance</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>time</strong> (Iterable[int | float]):\nthe array containing the time instant of each sample in seconds</li>\n<li><strong>position</strong> (Iterable[int | float]):\nthe array containing the displacement of the handles for each sample</li>\n<li><strong>load</strong> (Iterable[int | float]):\nthe array containing the load measured at each sample in kgf</li>\n<li><strong>coefs_1rm</strong> (tuple[int | float, int | float]):\nthe b0 and b1 coefficients used to estimated the 1RM.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>raw</strong> (DataFrame):\na DataFrame containing the input data</li>\n<li><strong>repetitions</strong> (list[DataFrame]):\na list of dataframes each defining one single repetition</li>\n<li><strong>product</strong> (BiostrengthProduct):\nthe product on which the test has been performed</li>\n<li><strong>peak_load</strong> (float):\nthe peak load measured during the isokinetic repetitions</li>\n<li><strong>rom0</strong> (float):\nthe start of the user's range of movement in meters</li>\n<li><strong>rom1</strong> (float):\nthe end of the user's range of movement in meters</li>\n<li><strong>rom</strong> (float):\nthe range of movement amplitude in meters</li>\n<li><strong>results_table</strong> (DataFrame):\na table containing the data obtained during the test</li>\n<li><strong>summary_table</strong> (DataFrame):\na table containing summary statistics about the test</li>\n<li><strong>summary_plot</strong> (FigureWidget):\na figure representing the results of the test.</li>\n</ul>\n", "bases": "labanalysis.frames.records.biostrength.isokineticexercise.IsokineticExercise, labanalysis.testprotocols.protocols.TestProtocol"}, {"fullname": "labanalysis.testprotocols.strength.isokinetictest.Isokinetic1RMTest.__init__", "modulename": "labanalysis.testprotocols.strength.isokinetictest", "qualname": "Isokinetic1RMTest.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">biostrength</span><span class=\"o\">.</span><span class=\"n\">BiostrengthProduct</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C:</span><span class=\"se\">\\\\</span><span class=\"s1\">Users</span><span class=\"se\">\\\\</span><span class=\"s1\">lzoffoli</span><span class=\"se\">\\\\</span><span class=\"s1\">Technogym SPA</span><span class=\"se\">\\\\</span><span class=\"s1\">Scientific Research - Documenti</span><span class=\"se\">\\\\</span><span class=\"s1\">github_repositories</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">testprotocols</span><span class=\"se\">\\\\</span><span class=\"s1\">strength</span><span class=\"se\">\\\\</span><span class=\"s1\">isok_1rm_normative_values.csv&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">synchronize_signals</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span></span>)</span>"}, {"fullname": "labanalysis.testprotocols.strength.isokinetictest.Isokinetic1RMTest.copy", "modulename": "labanalysis.testprotocols.strength.isokinetictest", "qualname": "Isokinetic1RMTest.copy", "kind": "function", "doc": "<p>Return a deep copy of the TimeseriesRecord.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: A new TimeseriesRecord object with the same data.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.strength.isokinetictest.Isokinetic1RMTest.results", "modulename": "labanalysis.testprotocols.strength.isokinetictest", "qualname": "Isokinetic1RMTest.results", "kind": "variable", "doc": "<p>Abstract method to return a summary of the test results.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, pandas.DataFrame]</strong>: Dictionary of summary tables for the test results.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.strength.isokinetictest.Isokinetic1RMTest.from_txt", "modulename": "labanalysis.testprotocols.strength.isokinetictest", "qualname": "Isokinetic1RMTest.from_txt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;LEG PRESS&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG PRESS REV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG EXTENSION&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG EXTENSION REV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG CURL&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LOW ROW&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ADJUSTABLE PULLEY REV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;CHEST PRESS&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;SHOULDER PRESS&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;C:</span><span class=\"se\">\\\\</span><span class=\"s1\">Users</span><span class=\"se\">\\\\</span><span class=\"s1\">lzoffoli</span><span class=\"se\">\\\\</span><span class=\"s1\">Technogym SPA</span><span class=\"se\">\\\\</span><span class=\"s1\">Scientific Research - Documenti</span><span class=\"se\">\\\\</span><span class=\"s1\">github_repositories</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">labanalysis</span><span class=\"se\">\\\\</span><span class=\"s1\">testprotocols</span><span class=\"se\">\\\\</span><span class=\"s1\">strength</span><span class=\"se\">\\\\</span><span class=\"s1\">isok_1rm_normative_values.csv&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.strength.isometrictest", "modulename": "labanalysis.testprotocols.strength.isometrictest", "kind": "module", "doc": "<p>isokinetic test module</p>\n"}, {"fullname": "labanalysis.testprotocols.strength.isometrictest.IsometricTest", "modulename": "labanalysis.testprotocols.strength.isometrictest", "qualname": "IsometricTest", "kind": "class", "doc": "<p>Isokinetic Test 1RM instance</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>time</strong> (Iterable[int | float]):\nthe array containing the time instant of each sample in seconds</li>\n<li><strong>position</strong> (Iterable[int | float]):\nthe array containing the displacement of the handles for each sample</li>\n<li><strong>load</strong> (Iterable[int | float]):\nthe array containing the load measured at each sample in kgf</li>\n<li><strong>coefs_1rm</strong> (tuple[int | float, int | float]):\nthe b0 and b1 coefficients used to estimated the 1RM.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>raw</strong> (DataFrame):\na DataFrame containing the input data</li>\n<li><strong>repetitions</strong> (list[DataFrame]):\na list of dataframes each defining one single repetition</li>\n<li><strong>product</strong> (BiostrengthProduct):\nthe product on which the test has been performed</li>\n<li><strong>peak_load</strong> (float):\nthe peak load measured during the isokinetic repetitions</li>\n<li><strong>rom0</strong> (float):\nthe start of the user's range of movement in meters</li>\n<li><strong>rom1</strong> (float):\nthe end of the user's range of movement in meters</li>\n<li><strong>rom</strong> (float):\nthe range of movement amplitude in meters</li>\n<li><strong>results_table</strong> (DataFrame):\na table containing the data obtained during the test</li>\n<li><strong>summary_table</strong> (DataFrame):\na table containing summary statistics about the test</li>\n<li><strong>summary_plot</strong> (FigureWidget):\na figure representing the results of the test.</li>\n</ul>\n", "bases": "labanalysis.frames.records.biostrength.isometricexercise.IsometricExercise, labanalysis.testprotocols.protocols.TestProtocol"}, {"fullname": "labanalysis.testprotocols.strength.isometrictest.IsometricTest.__init__", "modulename": "labanalysis.testprotocols.strength.isometrictest", "qualname": "IsometricTest.__init__", "kind": "function", "doc": "<p>Initialize a TimeseriesRecord.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>**signals</strong> (dict):\nKey-value pairs of Timeseries subclasses, TimeseriesRecord, or ForcePlatform.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"o\">.</span><span class=\"n\">biostrength</span><span class=\"o\">.</span><span class=\"n\">BiostrengthProduct</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">force</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">position</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">signal1d</span><span class=\"o\">.</span><span class=\"n\">Signal1D</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">synchronize_signals</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extra_signals</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">frames</span><span class=\"o\">.</span><span class=\"n\">timeseries</span><span class=\"o\">.</span><span class=\"n\">emgsignal</span><span class=\"o\">.</span><span class=\"n\">EMGSignal</span></span>)</span>"}, {"fullname": "labanalysis.testprotocols.strength.isometrictest.IsometricTest.copy", "modulename": "labanalysis.testprotocols.strength.isometrictest", "qualname": "IsometricTest.copy", "kind": "function", "doc": "<p>Return a deep copy of the TimeseriesRecord.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TimeseriesRecord</strong>: A new TimeseriesRecord object with the same data.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.testprotocols.strength.isometrictest.IsometricTest.results", "modulename": "labanalysis.testprotocols.strength.isometrictest", "qualname": "IsometricTest.results", "kind": "variable", "doc": "<p>Abstract method to return a summary of the test results.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>dict[str, pandas.DataFrame]</strong>: Dictionary of summary tables for the test results.</li>\n</ul>\n"}, {"fullname": "labanalysis.testprotocols.strength.isometrictest.IsometricTest.from_txt", "modulename": "labanalysis.testprotocols.strength.isometrictest", "qualname": "IsometricTest.from_txt", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">cls</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">participant</span><span class=\"p\">:</span> <span class=\"n\">labanalysis</span><span class=\"o\">.</span><span class=\"n\">testprotocols</span><span class=\"o\">.</span><span class=\"n\">protocols</span><span class=\"o\">.</span><span class=\"n\">Participant</span>,</span><span class=\"param\">\t<span class=\"n\">product</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;LEG PRESS&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG PRESS REV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG EXTENSION&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG EXTENSION REV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LEG CURL&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;LOW ROW&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;ADJUSTABLE PULLEY REV&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;CHEST PRESS&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;SHOULDER PRESS&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">side</span><span class=\"p\">:</span> <span class=\"n\">Literal</span><span class=\"p\">[</span><span class=\"s1\">&#39;bilateral&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;left&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;right&#39;</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">normative_data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">strip</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">reset_time</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.utils", "modulename": "labanalysis.utils", "kind": "module", "doc": "<p>utils</p>\n\n<p>module containing several utilities that can be used for multiple purposes.</p>\n\n<h6 id=\"functions\">Functions</h6>\n\n<p>magnitude\n    get the order of magnitude of a numeric scalar value according to the\n    specified base.</p>\n\n<p>get_files\n    get the full path of the files contained within the provided folder\n    (and optionally subfolders) having the provided extension.</p>\n\n<p>split_data\n    get the indices randomly separating the input data into subsets according\n    to the given proportions.</p>\n"}, {"fullname": "labanalysis.utils.magnitude", "modulename": "labanalysis.utils", "qualname": "magnitude", "kind": "function", "doc": "<p>return the order in the given base of the value</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>value</strong> (int | float):\nthe value to be checked</li>\n<li><strong>base</strong> (int | float=10):\nthe base to be used to define the order of the number</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>mag float</strong>: the number required to elevate the base to get the value</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.utils.get_files", "modulename": "labanalysis.utils", "qualname": "get_files", "kind": "function", "doc": "<p>list all the files having the required extension in the provided folder\nand its subfolders (if required).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\na directory where to look for the files.</li>\n<li><strong>extension</strong> (str):\na str object defining the ending of the files that have to be\nlisted.</li>\n<li><strong>check_subfolders</strong> (bool):\nif True, also the subfolders found in path are searched,\notherwise only path is checked.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>files</strong> (list):\na list containing the full_path to all the files corresponding\nto the input criteria.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">extension</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">check_subfolders</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.utils.split_data", "modulename": "labanalysis.utils", "qualname": "split_data", "kind": "function", "doc": "<p>get the indices randomly separating the input data into subsets according\nto the given proportions.</p>\n\n<h6 id=\"note\">Note</h6>\n\n<p>the input array is firstly divided into quantiles according to the groups\nargument. Then the indices are randomly drawn from each subset according\nto the entered proportions. This ensures that the resulting groups\nwill mimic the same distribution of the input data.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (np.ndarray[Any, np.dtype[np.float64]]):\na 1D input array</li>\n<li><strong>proportion</strong> (dict[str, float]):\na dict where each key contains the proportion of the total samples\nto be given. The proportion must be a value within the (0, 1] range\nand the sum of all entered proportions must be 1.</li>\n<li><strong>groups</strong> (int):\nthe number of quantilic groups to be used.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>splits</strong> (dict[str, np.ndarray[Any, np.dtype[np.int64]]]):\na dict with the same keys of proportion, which contains the\ncorresponding indices.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">data</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">Any</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">dtype</span><span class=\"p\">[</span><span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">float64</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">proportion</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">groups</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.utils.check_entry", "modulename": "labanalysis.utils", "qualname": "check_entry", "kind": "function", "doc": "<p>check a given object to be a pandas DataFrame with the \"mask\" structure of\nindices and columns.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>entry</strong> (object):\nthe object to be checked</li>\n<li><strong>mask</strong> (ndarray):\nthe column mask to be controlled. The mask has to match all the columns\ncontained by levels at index &gt; 1.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>TypeError</strong>: \"entry must be a pandas DataFrame.\"\nIn case the entry is not a pandas.DataFrame.</li>\n<li><strong>TypeError</strong>: \"entry columns must be a pandas MultiIndex.\"\nIn case the entry columns are not a pandas.MultiIndex instance.</li>\n<li><strong>TypeError</strong>: \"entry columns must contain {mask}.\"\nIn case the entry columns does not match with the provided mask.</li>\n<li><strong>TypeError</strong>: \"entry index must be a pandas Index.\"\nIn case the index of the entry is not a pandas.Index</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">entry</span><span class=\"p\">:</span> <span class=\"nb\">object</span>, </span><span class=\"param\"><span class=\"n\">mask</span><span class=\"p\">:</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ndarray</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.utils.check_writing_file", "modulename": "labanalysis.utils", "qualname": "check_writing_file", "kind": "function", "doc": "<p>check the provided filename and rename it if required.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file</strong> (str):\nthe file path</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>filename</strong> (str):\nthe file (renamed if required).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.utils.assert_file_extension", "modulename": "labanalysis.utils", "qualname": "assert_file_extension", "kind": "function", "doc": "<p>check the validity of the input path file to be a str with the provided\nextension.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>path</strong> (str):\nthe object to be checked</li>\n<li><strong>ext</strong> (str):\nthe target file extension</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>err</strong> (AsserttionError):\nin case the file is not a str or it does not exist or it does not have\nthe provided extension.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">ext</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "labanalysis.utils.FloatArray2D", "modulename": "labanalysis.utils", "qualname": "FloatArray2D", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Annotated[numpy.ndarray[tuple[typing.Any, ...], numpy.dtype[numpy.floating]], (2,)]"}, {"fullname": "labanalysis.utils.FloatArray1D", "modulename": "labanalysis.utils", "qualname": "FloatArray1D", "kind": "variable", "doc": "<p></p>\n", "default_value": "numpy.ndarray[tuple[typing.Any, ...], numpy.dtype[numpy.floating]]"}, {"fullname": "labanalysis.utils.IntArray1D", "modulename": "labanalysis.utils", "qualname": "IntArray1D", "kind": "variable", "doc": "<p></p>\n", "default_value": "numpy.ndarray[tuple[typing.Any, ...], numpy.dtype[numpy.integer]]"}, {"fullname": "labanalysis.utils.TextArray1D", "modulename": "labanalysis.utils", "qualname": "TextArray1D", "kind": "variable", "doc": "<p></p>\n", "default_value": "numpy.ndarray[tuple[typing.Any, ...], numpy.dtype[numpy.str_]]"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();